ARM GAS  C:\Users\TINYWI~1\AppData\Local\Temp\ccrliPYO.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"PWM_1.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.global	PWM_1_initVar
  18              		.bss
  19              		.type	PWM_1_initVar, %object
  20              		.size	PWM_1_initVar, 1
  21              	PWM_1_initVar:
  22 0000 00       		.space	1
  23              		.section	.text.PWM_1_Init,"ax",%progbits
  24              		.align	2
  25              		.global	PWM_1_Init
  26              		.code	16
  27              		.thumb_func
  28              		.type	PWM_1_Init, %function
  29              	PWM_1_Init:
  30              	.LFB0:
  31              		.file 1 ".\\Generated_Source\\PSoC4\\PWM_1.c"
   1:.\Generated_Source\PSoC4/PWM_1.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC4/PWM_1.c **** * File Name: PWM_1.c
   3:.\Generated_Source\PSoC4/PWM_1.c **** * Version 2.0
   4:.\Generated_Source\PSoC4/PWM_1.c **** *
   5:.\Generated_Source\PSoC4/PWM_1.c **** * Description:
   6:.\Generated_Source\PSoC4/PWM_1.c **** *  This file provides the source code to the API for the PWM_1
   7:.\Generated_Source\PSoC4/PWM_1.c **** *  component
   8:.\Generated_Source\PSoC4/PWM_1.c **** *
   9:.\Generated_Source\PSoC4/PWM_1.c **** * Note:
  10:.\Generated_Source\PSoC4/PWM_1.c **** *  None
  11:.\Generated_Source\PSoC4/PWM_1.c **** *
  12:.\Generated_Source\PSoC4/PWM_1.c **** ********************************************************************************
  13:.\Generated_Source\PSoC4/PWM_1.c **** * Copyright 2013-2014, Cypress Semiconductor Corporation.  All rights reserved.
  14:.\Generated_Source\PSoC4/PWM_1.c **** * You may use this file only in accordance with the license, terms, conditions,
  15:.\Generated_Source\PSoC4/PWM_1.c **** * disclaimers, and limitations in the end user license agreement accompanying
  16:.\Generated_Source\PSoC4/PWM_1.c **** * the software package with which this file was provided.
  17:.\Generated_Source\PSoC4/PWM_1.c **** *******************************************************************************/
  18:.\Generated_Source\PSoC4/PWM_1.c **** 
  19:.\Generated_Source\PSoC4/PWM_1.c **** #include "PWM_1.h"
  20:.\Generated_Source\PSoC4/PWM_1.c **** 
  21:.\Generated_Source\PSoC4/PWM_1.c **** uint8 PWM_1_initVar = 0u;
  22:.\Generated_Source\PSoC4/PWM_1.c **** 
  23:.\Generated_Source\PSoC4/PWM_1.c **** 
  24:.\Generated_Source\PSoC4/PWM_1.c **** /*******************************************************************************
  25:.\Generated_Source\PSoC4/PWM_1.c **** * Function Name: PWM_1_Init
  26:.\Generated_Source\PSoC4/PWM_1.c **** ********************************************************************************
ARM GAS  C:\Users\TINYWI~1\AppData\Local\Temp\ccrliPYO.s 			page 2


  27:.\Generated_Source\PSoC4/PWM_1.c **** *
  28:.\Generated_Source\PSoC4/PWM_1.c **** * Summary:
  29:.\Generated_Source\PSoC4/PWM_1.c **** *  Initialize/Restore default PWM_1 configuration.
  30:.\Generated_Source\PSoC4/PWM_1.c **** *
  31:.\Generated_Source\PSoC4/PWM_1.c **** * Parameters:
  32:.\Generated_Source\PSoC4/PWM_1.c **** *  None
  33:.\Generated_Source\PSoC4/PWM_1.c **** *
  34:.\Generated_Source\PSoC4/PWM_1.c **** * Return:
  35:.\Generated_Source\PSoC4/PWM_1.c **** *  None
  36:.\Generated_Source\PSoC4/PWM_1.c **** *
  37:.\Generated_Source\PSoC4/PWM_1.c **** *******************************************************************************/
  38:.\Generated_Source\PSoC4/PWM_1.c **** void PWM_1_Init(void)
  39:.\Generated_Source\PSoC4/PWM_1.c **** {
  32              		.loc 1 39 0
  33              		.cfi_startproc
  34 0000 80B5     		push	{r7, lr}
  35              		.cfi_def_cfa_offset 8
  36              		.cfi_offset 7, -8
  37              		.cfi_offset 14, -4
  38 0002 00AF     		add	r7, sp, #0
  39              		.cfi_def_cfa_register 7
  40:.\Generated_Source\PSoC4/PWM_1.c **** 
  41:.\Generated_Source\PSoC4/PWM_1.c ****     /* Set values from customizer to CTRL */
  42:.\Generated_Source\PSoC4/PWM_1.c ****     #if (PWM_1__QUAD == PWM_1_CONFIG)
  43:.\Generated_Source\PSoC4/PWM_1.c ****         PWM_1_CONTROL_REG = PWM_1_CTRL_QUAD_BASE_CONFIG;
  44:.\Generated_Source\PSoC4/PWM_1.c ****         
  45:.\Generated_Source\PSoC4/PWM_1.c ****         /* Set values from customizer to CTRL1 */
  46:.\Generated_Source\PSoC4/PWM_1.c ****         PWM_1_TRIG_CONTROL1_REG  = PWM_1_QUAD_SIGNALS_MODES;
  47:.\Generated_Source\PSoC4/PWM_1.c **** 
  48:.\Generated_Source\PSoC4/PWM_1.c ****         /* Set values from customizer to INTR */
  49:.\Generated_Source\PSoC4/PWM_1.c ****         PWM_1_SetInterruptMode(PWM_1_QUAD_INTERRUPT_MASK);
  50:.\Generated_Source\PSoC4/PWM_1.c ****         
  51:.\Generated_Source\PSoC4/PWM_1.c ****          /* Set other values */
  52:.\Generated_Source\PSoC4/PWM_1.c ****         PWM_1_SetCounterMode(PWM_1_COUNT_DOWN);
  53:.\Generated_Source\PSoC4/PWM_1.c ****         PWM_1_WritePeriod(PWM_1_QUAD_PERIOD_INIT_VALUE);
  54:.\Generated_Source\PSoC4/PWM_1.c ****         PWM_1_WriteCounter(PWM_1_QUAD_PERIOD_INIT_VALUE);
  55:.\Generated_Source\PSoC4/PWM_1.c ****     #endif  /* (PWM_1__QUAD == PWM_1_CONFIG) */
  56:.\Generated_Source\PSoC4/PWM_1.c **** 
  57:.\Generated_Source\PSoC4/PWM_1.c ****     #if (PWM_1__TIMER == PWM_1_CONFIG)
  58:.\Generated_Source\PSoC4/PWM_1.c ****         PWM_1_CONTROL_REG = PWM_1_CTRL_TIMER_BASE_CONFIG;
  59:.\Generated_Source\PSoC4/PWM_1.c ****         
  60:.\Generated_Source\PSoC4/PWM_1.c ****         /* Set values from customizer to CTRL1 */
  61:.\Generated_Source\PSoC4/PWM_1.c ****         PWM_1_TRIG_CONTROL1_REG  = PWM_1_TIMER_SIGNALS_MODES;
  62:.\Generated_Source\PSoC4/PWM_1.c ****     
  63:.\Generated_Source\PSoC4/PWM_1.c ****         /* Set values from customizer to INTR */
  64:.\Generated_Source\PSoC4/PWM_1.c ****         PWM_1_SetInterruptMode(PWM_1_TC_INTERRUPT_MASK);
  65:.\Generated_Source\PSoC4/PWM_1.c ****         
  66:.\Generated_Source\PSoC4/PWM_1.c ****         /* Set other values from customizer */
  67:.\Generated_Source\PSoC4/PWM_1.c ****         PWM_1_WritePeriod(PWM_1_TC_PERIOD_VALUE );
  68:.\Generated_Source\PSoC4/PWM_1.c **** 
  69:.\Generated_Source\PSoC4/PWM_1.c ****         #if (PWM_1__COMPARE == PWM_1_TC_COMP_CAP_MODE)
  70:.\Generated_Source\PSoC4/PWM_1.c ****             PWM_1_WriteCompare(PWM_1_TC_COMPARE_VALUE);
  71:.\Generated_Source\PSoC4/PWM_1.c **** 
  72:.\Generated_Source\PSoC4/PWM_1.c ****             #if (1u == PWM_1_TC_COMPARE_SWAP)
  73:.\Generated_Source\PSoC4/PWM_1.c ****                 PWM_1_SetCompareSwap(1u);
  74:.\Generated_Source\PSoC4/PWM_1.c ****                 PWM_1_WriteCompareBuf(PWM_1_TC_COMPARE_BUF_VALUE);
  75:.\Generated_Source\PSoC4/PWM_1.c ****             #endif  /* (1u == PWM_1_TC_COMPARE_SWAP) */
ARM GAS  C:\Users\TINYWI~1\AppData\Local\Temp\ccrliPYO.s 			page 3


  76:.\Generated_Source\PSoC4/PWM_1.c ****         #endif  /* (PWM_1__COMPARE == PWM_1_TC_COMP_CAP_MODE) */
  77:.\Generated_Source\PSoC4/PWM_1.c **** 
  78:.\Generated_Source\PSoC4/PWM_1.c ****         /* Initialize counter value */
  79:.\Generated_Source\PSoC4/PWM_1.c ****         #if (PWM_1_CY_TCPWM_V2 && PWM_1_TIMER_UPDOWN_CNT_USED && !PWM_1_CY_TCPWM_4000)
  80:.\Generated_Source\PSoC4/PWM_1.c ****             PWM_1_WriteCounter(1u);
  81:.\Generated_Source\PSoC4/PWM_1.c ****         #elif(PWM_1__COUNT_DOWN == PWM_1_TC_COUNTER_MODE)
  82:.\Generated_Source\PSoC4/PWM_1.c ****             PWM_1_WriteCounter(PWM_1_TC_PERIOD_VALUE);
  83:.\Generated_Source\PSoC4/PWM_1.c ****         #else
  84:.\Generated_Source\PSoC4/PWM_1.c ****             PWM_1_WriteCounter(0u);
  85:.\Generated_Source\PSoC4/PWM_1.c ****         #endif /* (PWM_1_CY_TCPWM_V2 && PWM_1_TIMER_UPDOWN_CNT_USED && !PWM_1_CY_TCPWM_4000) */
  86:.\Generated_Source\PSoC4/PWM_1.c ****     #endif  /* (PWM_1__TIMER == PWM_1_CONFIG) */
  87:.\Generated_Source\PSoC4/PWM_1.c **** 
  88:.\Generated_Source\PSoC4/PWM_1.c ****     #if (PWM_1__PWM_SEL == PWM_1_CONFIG)
  89:.\Generated_Source\PSoC4/PWM_1.c ****         PWM_1_CONTROL_REG = PWM_1_CTRL_PWM_BASE_CONFIG;
  40              		.loc 1 89 0
  41 0004 104B     		ldr	r3, .L2
  42 0006 8022     		mov	r2, #128
  43 0008 D204     		lsl	r2, r2, #19
  44 000a 1A60     		str	r2, [r3]
  90:.\Generated_Source\PSoC4/PWM_1.c **** 
  91:.\Generated_Source\PSoC4/PWM_1.c ****         #if (PWM_1__PWM_PR == PWM_1_PWM_MODE)
  92:.\Generated_Source\PSoC4/PWM_1.c ****             PWM_1_CONTROL_REG |= PWM_1_CTRL_PWM_RUN_MODE;
  93:.\Generated_Source\PSoC4/PWM_1.c ****             PWM_1_WriteCounter(PWM_1_PWM_PR_INIT_VALUE);
  94:.\Generated_Source\PSoC4/PWM_1.c ****         #else
  95:.\Generated_Source\PSoC4/PWM_1.c ****             PWM_1_CONTROL_REG |= PWM_1_CTRL_PWM_ALIGN | PWM_1_CTRL_PWM_KILL_EVENT;
  45              		.loc 1 95 0
  46 000c 0E4B     		ldr	r3, .L2
  47 000e 0E4A     		ldr	r2, .L2
  48 0010 1268     		ldr	r2, [r2]
  49 0012 1A60     		str	r2, [r3]
  96:.\Generated_Source\PSoC4/PWM_1.c ****             
  97:.\Generated_Source\PSoC4/PWM_1.c ****             /* Initialize counter value */
  98:.\Generated_Source\PSoC4/PWM_1.c ****             #if (PWM_1_CY_TCPWM_V2 && PWM_1_PWM_UPDOWN_CNT_USED && !PWM_1_CY_TCPWM_4000)
  99:.\Generated_Source\PSoC4/PWM_1.c ****                 PWM_1_WriteCounter(1u);
 100:.\Generated_Source\PSoC4/PWM_1.c ****             #elif (PWM_1__RIGHT == PWM_1_PWM_ALIGN)
 101:.\Generated_Source\PSoC4/PWM_1.c ****                 PWM_1_WriteCounter(PWM_1_PWM_PERIOD_VALUE);
 102:.\Generated_Source\PSoC4/PWM_1.c ****             #else 
 103:.\Generated_Source\PSoC4/PWM_1.c ****                 PWM_1_WriteCounter(0u);
  50              		.loc 1 103 0
  51 0014 0020     		mov	r0, #0
  52 0016 FFF7FEFF 		bl	PWM_1_WriteCounter
 104:.\Generated_Source\PSoC4/PWM_1.c ****             #endif  /* (PWM_1_CY_TCPWM_V2 && PWM_1_PWM_UPDOWN_CNT_USED && !PWM_1_CY_TCPWM_4000) */
 105:.\Generated_Source\PSoC4/PWM_1.c ****         #endif  /* (PWM_1__PWM_PR == PWM_1_PWM_MODE) */
 106:.\Generated_Source\PSoC4/PWM_1.c **** 
 107:.\Generated_Source\PSoC4/PWM_1.c ****         #if (PWM_1__PWM_DT == PWM_1_PWM_MODE)
 108:.\Generated_Source\PSoC4/PWM_1.c ****             PWM_1_CONTROL_REG |= PWM_1_CTRL_PWM_DEAD_TIME_CYCLE;
 109:.\Generated_Source\PSoC4/PWM_1.c ****         #endif  /* (PWM_1__PWM_DT == PWM_1_PWM_MODE) */
 110:.\Generated_Source\PSoC4/PWM_1.c **** 
 111:.\Generated_Source\PSoC4/PWM_1.c ****         #if (PWM_1__PWM == PWM_1_PWM_MODE)
 112:.\Generated_Source\PSoC4/PWM_1.c ****             PWM_1_CONTROL_REG |= PWM_1_CTRL_PWM_PRESCALER;
  53              		.loc 1 112 0
  54 001a 0B4B     		ldr	r3, .L2
  55 001c 0A4A     		ldr	r2, .L2
  56 001e 1268     		ldr	r2, [r2]
  57 0020 1A60     		str	r2, [r3]
 113:.\Generated_Source\PSoC4/PWM_1.c ****         #endif  /* (PWM_1__PWM == PWM_1_PWM_MODE) */
 114:.\Generated_Source\PSoC4/PWM_1.c **** 
ARM GAS  C:\Users\TINYWI~1\AppData\Local\Temp\ccrliPYO.s 			page 4


 115:.\Generated_Source\PSoC4/PWM_1.c ****         /* Set values from customizer to CTRL1 */
 116:.\Generated_Source\PSoC4/PWM_1.c ****         PWM_1_TRIG_CONTROL1_REG  = PWM_1_PWM_SIGNALS_MODES;
  58              		.loc 1 116 0
  59 0022 0A4B     		ldr	r3, .L2+4
  60 0024 0C22     		mov	r2, #12
  61 0026 1A60     		str	r2, [r3]
 117:.\Generated_Source\PSoC4/PWM_1.c ****     
 118:.\Generated_Source\PSoC4/PWM_1.c ****         /* Set values from customizer to INTR */
 119:.\Generated_Source\PSoC4/PWM_1.c ****         PWM_1_SetInterruptMode(PWM_1_PWM_INTERRUPT_MASK);
  62              		.loc 1 119 0
  63 0028 0120     		mov	r0, #1
  64 002a FFF7FEFF 		bl	PWM_1_SetInterruptMode
 120:.\Generated_Source\PSoC4/PWM_1.c **** 
 121:.\Generated_Source\PSoC4/PWM_1.c ****         /* Set values from customizer to CTRL2 */
 122:.\Generated_Source\PSoC4/PWM_1.c ****         #if (PWM_1__PWM_PR == PWM_1_PWM_MODE)
 123:.\Generated_Source\PSoC4/PWM_1.c ****             PWM_1_TRIG_CONTROL2_REG =
 124:.\Generated_Source\PSoC4/PWM_1.c ****                     (PWM_1_CC_MATCH_NO_CHANGE    |
 125:.\Generated_Source\PSoC4/PWM_1.c ****                     PWM_1_OVERLOW_NO_CHANGE      |
 126:.\Generated_Source\PSoC4/PWM_1.c ****                     PWM_1_UNDERFLOW_NO_CHANGE);
 127:.\Generated_Source\PSoC4/PWM_1.c ****         #else
 128:.\Generated_Source\PSoC4/PWM_1.c ****             #if (PWM_1__LEFT == PWM_1_PWM_ALIGN)
 129:.\Generated_Source\PSoC4/PWM_1.c ****                 PWM_1_TRIG_CONTROL2_REG = PWM_1_PWM_MODE_LEFT;
  65              		.loc 1 129 0
  66 002e 084B     		ldr	r3, .L2+8
  67 0030 3122     		mov	r2, #49
  68 0032 1A60     		str	r2, [r3]
 130:.\Generated_Source\PSoC4/PWM_1.c ****             #endif  /* ( PWM_1_PWM_LEFT == PWM_1_PWM_ALIGN) */
 131:.\Generated_Source\PSoC4/PWM_1.c **** 
 132:.\Generated_Source\PSoC4/PWM_1.c ****             #if (PWM_1__RIGHT == PWM_1_PWM_ALIGN)
 133:.\Generated_Source\PSoC4/PWM_1.c ****                 PWM_1_TRIG_CONTROL2_REG = PWM_1_PWM_MODE_RIGHT;
 134:.\Generated_Source\PSoC4/PWM_1.c ****             #endif  /* ( PWM_1_PWM_RIGHT == PWM_1_PWM_ALIGN) */
 135:.\Generated_Source\PSoC4/PWM_1.c **** 
 136:.\Generated_Source\PSoC4/PWM_1.c ****             #if (PWM_1__CENTER == PWM_1_PWM_ALIGN)
 137:.\Generated_Source\PSoC4/PWM_1.c ****                 PWM_1_TRIG_CONTROL2_REG = PWM_1_PWM_MODE_CENTER;
 138:.\Generated_Source\PSoC4/PWM_1.c ****             #endif  /* ( PWM_1_PWM_CENTER == PWM_1_PWM_ALIGN) */
 139:.\Generated_Source\PSoC4/PWM_1.c **** 
 140:.\Generated_Source\PSoC4/PWM_1.c ****             #if (PWM_1__ASYMMETRIC == PWM_1_PWM_ALIGN)
 141:.\Generated_Source\PSoC4/PWM_1.c ****                 PWM_1_TRIG_CONTROL2_REG = PWM_1_PWM_MODE_ASYM;
 142:.\Generated_Source\PSoC4/PWM_1.c ****             #endif  /* (PWM_1__ASYMMETRIC == PWM_1_PWM_ALIGN) */
 143:.\Generated_Source\PSoC4/PWM_1.c ****         #endif  /* (PWM_1__PWM_PR == PWM_1_PWM_MODE) */
 144:.\Generated_Source\PSoC4/PWM_1.c **** 
 145:.\Generated_Source\PSoC4/PWM_1.c ****         /* Set other values from customizer */
 146:.\Generated_Source\PSoC4/PWM_1.c ****         PWM_1_WritePeriod(PWM_1_PWM_PERIOD_VALUE );
  69              		.loc 1 146 0
  70 0034 074B     		ldr	r3, .L2+12
  71 0036 181C     		mov	r0, r3
  72 0038 FFF7FEFF 		bl	PWM_1_WritePeriod
 147:.\Generated_Source\PSoC4/PWM_1.c ****         PWM_1_WriteCompare(PWM_1_PWM_COMPARE_VALUE);
  73              		.loc 1 147 0
  74 003c 064B     		ldr	r3, .L2+16
  75 003e 181C     		mov	r0, r3
  76 0040 FFF7FEFF 		bl	PWM_1_WriteCompare
 148:.\Generated_Source\PSoC4/PWM_1.c **** 
 149:.\Generated_Source\PSoC4/PWM_1.c ****         #if (1u == PWM_1_PWM_COMPARE_SWAP)
 150:.\Generated_Source\PSoC4/PWM_1.c ****             PWM_1_SetCompareSwap(1u);
 151:.\Generated_Source\PSoC4/PWM_1.c ****             PWM_1_WriteCompareBuf(PWM_1_PWM_COMPARE_BUF_VALUE);
 152:.\Generated_Source\PSoC4/PWM_1.c ****         #endif  /* (1u == PWM_1_PWM_COMPARE_SWAP) */
ARM GAS  C:\Users\TINYWI~1\AppData\Local\Temp\ccrliPYO.s 			page 5


 153:.\Generated_Source\PSoC4/PWM_1.c **** 
 154:.\Generated_Source\PSoC4/PWM_1.c ****         #if (1u == PWM_1_PWM_PERIOD_SWAP)
 155:.\Generated_Source\PSoC4/PWM_1.c ****             PWM_1_SetPeriodSwap(1u);
 156:.\Generated_Source\PSoC4/PWM_1.c ****             PWM_1_WritePeriodBuf(PWM_1_PWM_PERIOD_BUF_VALUE);
 157:.\Generated_Source\PSoC4/PWM_1.c ****         #endif  /* (1u == PWM_1_PWM_PERIOD_SWAP) */
 158:.\Generated_Source\PSoC4/PWM_1.c ****     #endif  /* (PWM_1__PWM_SEL == PWM_1_CONFIG) */
 159:.\Generated_Source\PSoC4/PWM_1.c ****     
 160:.\Generated_Source\PSoC4/PWM_1.c **** }
  77              		.loc 1 160 0
  78 0044 BD46     		mov	sp, r7
  79              		@ sp needed
  80 0046 80BD     		pop	{r7, pc}
  81              	.L3:
  82              		.align	2
  83              	.L2:
  84 0048 40010540 		.word	1074069824
  85 004c 64010540 		.word	1074069860
  86 0050 68010540 		.word	1074069864
  87 0054 30110000 		.word	4400
  88 0058 98080000 		.word	2200
  89              		.cfi_endproc
  90              	.LFE0:
  91              		.size	PWM_1_Init, .-PWM_1_Init
  92              		.section	.text.PWM_1_Enable,"ax",%progbits
  93              		.align	2
  94              		.global	PWM_1_Enable
  95              		.code	16
  96              		.thumb_func
  97              		.type	PWM_1_Enable, %function
  98              	PWM_1_Enable:
  99              	.LFB1:
 161:.\Generated_Source\PSoC4/PWM_1.c **** 
 162:.\Generated_Source\PSoC4/PWM_1.c **** 
 163:.\Generated_Source\PSoC4/PWM_1.c **** /*******************************************************************************
 164:.\Generated_Source\PSoC4/PWM_1.c **** * Function Name: PWM_1_Enable
 165:.\Generated_Source\PSoC4/PWM_1.c **** ********************************************************************************
 166:.\Generated_Source\PSoC4/PWM_1.c **** *
 167:.\Generated_Source\PSoC4/PWM_1.c **** * Summary:
 168:.\Generated_Source\PSoC4/PWM_1.c **** *  Enables the PWM_1.
 169:.\Generated_Source\PSoC4/PWM_1.c **** *
 170:.\Generated_Source\PSoC4/PWM_1.c **** * Parameters:
 171:.\Generated_Source\PSoC4/PWM_1.c **** *  None
 172:.\Generated_Source\PSoC4/PWM_1.c **** *
 173:.\Generated_Source\PSoC4/PWM_1.c **** * Return:
 174:.\Generated_Source\PSoC4/PWM_1.c **** *  None
 175:.\Generated_Source\PSoC4/PWM_1.c **** *
 176:.\Generated_Source\PSoC4/PWM_1.c **** *******************************************************************************/
 177:.\Generated_Source\PSoC4/PWM_1.c **** void PWM_1_Enable(void)
 178:.\Generated_Source\PSoC4/PWM_1.c **** {
 100              		.loc 1 178 0
 101              		.cfi_startproc
 102 0000 90B5     		push	{r4, r7, lr}
 103              		.cfi_def_cfa_offset 12
 104              		.cfi_offset 4, -12
 105              		.cfi_offset 7, -8
 106              		.cfi_offset 14, -4
 107 0002 83B0     		sub	sp, sp, #12
ARM GAS  C:\Users\TINYWI~1\AppData\Local\Temp\ccrliPYO.s 			page 6


 108              		.cfi_def_cfa_offset 24
 109 0004 00AF     		add	r7, sp, #0
 110              		.cfi_def_cfa_register 7
 179:.\Generated_Source\PSoC4/PWM_1.c ****     uint8 enableInterrupts;
 180:.\Generated_Source\PSoC4/PWM_1.c **** 
 181:.\Generated_Source\PSoC4/PWM_1.c ****     enableInterrupts = CyEnterCriticalSection();
 111              		.loc 1 181 0
 112 0006 FC1D     		add	r4, r7, #7
 113 0008 FFF7FEFF 		bl	CyEnterCriticalSection
 114 000c 031C     		mov	r3, r0
 115 000e 2370     		strb	r3, [r4]
 182:.\Generated_Source\PSoC4/PWM_1.c ****     PWM_1_BLOCK_CONTROL_REG |= PWM_1_MASK;
 116              		.loc 1 182 0
 117 0010 084B     		ldr	r3, .L5
 118 0012 084A     		ldr	r2, .L5
 119 0014 1268     		ldr	r2, [r2]
 120 0016 0221     		mov	r1, #2
 121 0018 0A43     		orr	r2, r1
 122 001a 1A60     		str	r2, [r3]
 183:.\Generated_Source\PSoC4/PWM_1.c ****     CyExitCriticalSection(enableInterrupts);
 123              		.loc 1 183 0
 124 001c FB1D     		add	r3, r7, #7
 125 001e 1B78     		ldrb	r3, [r3]
 126 0020 181C     		mov	r0, r3
 127 0022 FFF7FEFF 		bl	CyExitCriticalSection
 184:.\Generated_Source\PSoC4/PWM_1.c **** 
 185:.\Generated_Source\PSoC4/PWM_1.c ****     /* Start Timer or PWM if start input is absent */
 186:.\Generated_Source\PSoC4/PWM_1.c ****     #if (PWM_1__PWM_SEL == PWM_1_CONFIG)
 187:.\Generated_Source\PSoC4/PWM_1.c ****         #if (0u == PWM_1_PWM_START_SIGNAL_PRESENT)
 188:.\Generated_Source\PSoC4/PWM_1.c ****             PWM_1_TriggerCommand(PWM_1_MASK, PWM_1_CMD_START);
 128              		.loc 1 188 0
 129 0026 0220     		mov	r0, #2
 130 0028 1821     		mov	r1, #24
 131 002a FFF7FEFF 		bl	PWM_1_TriggerCommand
 189:.\Generated_Source\PSoC4/PWM_1.c ****         #endif /* (0u == PWM_1_PWM_START_SIGNAL_PRESENT) */
 190:.\Generated_Source\PSoC4/PWM_1.c ****     #endif /* (PWM_1__PWM_SEL == PWM_1_CONFIG) */
 191:.\Generated_Source\PSoC4/PWM_1.c **** 
 192:.\Generated_Source\PSoC4/PWM_1.c ****     #if (PWM_1__TIMER == PWM_1_CONFIG)
 193:.\Generated_Source\PSoC4/PWM_1.c ****         #if (0u == PWM_1_TC_START_SIGNAL_PRESENT)
 194:.\Generated_Source\PSoC4/PWM_1.c ****             PWM_1_TriggerCommand(PWM_1_MASK, PWM_1_CMD_START);
 195:.\Generated_Source\PSoC4/PWM_1.c ****         #endif /* (0u == PWM_1_TC_START_SIGNAL_PRESENT) */
 196:.\Generated_Source\PSoC4/PWM_1.c ****     #endif /* (PWM_1__TIMER == PWM_1_CONFIG) */
 197:.\Generated_Source\PSoC4/PWM_1.c **** }
 132              		.loc 1 197 0
 133 002e BD46     		mov	sp, r7
 134 0030 03B0     		add	sp, sp, #12
 135              		@ sp needed
 136 0032 90BD     		pop	{r4, r7, pc}
 137              	.L6:
 138              		.align	2
 139              	.L5:
 140 0034 00000540 		.word	1074069504
 141              		.cfi_endproc
 142              	.LFE1:
 143              		.size	PWM_1_Enable, .-PWM_1_Enable
 144              		.section	.text.PWM_1_Start,"ax",%progbits
 145              		.align	2
ARM GAS  C:\Users\TINYWI~1\AppData\Local\Temp\ccrliPYO.s 			page 7


 146              		.global	PWM_1_Start
 147              		.code	16
 148              		.thumb_func
 149              		.type	PWM_1_Start, %function
 150              	PWM_1_Start:
 151              	.LFB2:
 198:.\Generated_Source\PSoC4/PWM_1.c **** 
 199:.\Generated_Source\PSoC4/PWM_1.c **** 
 200:.\Generated_Source\PSoC4/PWM_1.c **** /*******************************************************************************
 201:.\Generated_Source\PSoC4/PWM_1.c **** * Function Name: PWM_1_Start
 202:.\Generated_Source\PSoC4/PWM_1.c **** ********************************************************************************
 203:.\Generated_Source\PSoC4/PWM_1.c **** *
 204:.\Generated_Source\PSoC4/PWM_1.c **** * Summary:
 205:.\Generated_Source\PSoC4/PWM_1.c **** *  Initializes the PWM_1 with default customizer
 206:.\Generated_Source\PSoC4/PWM_1.c **** *  values when called the first time and enables the PWM_1.
 207:.\Generated_Source\PSoC4/PWM_1.c **** *  For subsequent calls the configuration is left unchanged and the component is
 208:.\Generated_Source\PSoC4/PWM_1.c **** *  just enabled.
 209:.\Generated_Source\PSoC4/PWM_1.c **** *
 210:.\Generated_Source\PSoC4/PWM_1.c **** * Parameters:
 211:.\Generated_Source\PSoC4/PWM_1.c **** *  None
 212:.\Generated_Source\PSoC4/PWM_1.c **** *
 213:.\Generated_Source\PSoC4/PWM_1.c **** * Return:
 214:.\Generated_Source\PSoC4/PWM_1.c **** *  None
 215:.\Generated_Source\PSoC4/PWM_1.c **** *
 216:.\Generated_Source\PSoC4/PWM_1.c **** * Global variables:
 217:.\Generated_Source\PSoC4/PWM_1.c **** *  PWM_1_initVar: global variable is used to indicate initial
 218:.\Generated_Source\PSoC4/PWM_1.c **** *  configuration of this component.  The variable is initialized to zero and set
 219:.\Generated_Source\PSoC4/PWM_1.c **** *  to 1 the first time PWM_1_Start() is called. This allows
 220:.\Generated_Source\PSoC4/PWM_1.c **** *  enabling/disabling a component without re-initialization in all subsequent
 221:.\Generated_Source\PSoC4/PWM_1.c **** *  calls to the PWM_1_Start() routine.
 222:.\Generated_Source\PSoC4/PWM_1.c **** *
 223:.\Generated_Source\PSoC4/PWM_1.c **** *******************************************************************************/
 224:.\Generated_Source\PSoC4/PWM_1.c **** void PWM_1_Start(void)
 225:.\Generated_Source\PSoC4/PWM_1.c **** {
 152              		.loc 1 225 0
 153              		.cfi_startproc
 154 0000 80B5     		push	{r7, lr}
 155              		.cfi_def_cfa_offset 8
 156              		.cfi_offset 7, -8
 157              		.cfi_offset 14, -4
 158 0002 00AF     		add	r7, sp, #0
 159              		.cfi_def_cfa_register 7
 226:.\Generated_Source\PSoC4/PWM_1.c ****     if (0u == PWM_1_initVar)
 160              		.loc 1 226 0
 161 0004 064B     		ldr	r3, .L9
 162 0006 1B78     		ldrb	r3, [r3]
 163 0008 002B     		cmp	r3, #0
 164 000a 04D1     		bne	.L8
 227:.\Generated_Source\PSoC4/PWM_1.c ****     {
 228:.\Generated_Source\PSoC4/PWM_1.c ****         PWM_1_Init();
 165              		.loc 1 228 0
 166 000c FFF7FEFF 		bl	PWM_1_Init
 229:.\Generated_Source\PSoC4/PWM_1.c ****         PWM_1_initVar = 1u;
 167              		.loc 1 229 0
 168 0010 034B     		ldr	r3, .L9
 169 0012 0122     		mov	r2, #1
 170 0014 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\TINYWI~1\AppData\Local\Temp\ccrliPYO.s 			page 8


 171              	.L8:
 230:.\Generated_Source\PSoC4/PWM_1.c ****     }
 231:.\Generated_Source\PSoC4/PWM_1.c **** 
 232:.\Generated_Source\PSoC4/PWM_1.c ****     PWM_1_Enable();
 172              		.loc 1 232 0
 173 0016 FFF7FEFF 		bl	PWM_1_Enable
 233:.\Generated_Source\PSoC4/PWM_1.c **** }
 174              		.loc 1 233 0
 175 001a BD46     		mov	sp, r7
 176              		@ sp needed
 177 001c 80BD     		pop	{r7, pc}
 178              	.L10:
 179 001e C046     		.align	2
 180              	.L9:
 181 0020 00000000 		.word	PWM_1_initVar
 182              		.cfi_endproc
 183              	.LFE2:
 184              		.size	PWM_1_Start, .-PWM_1_Start
 185              		.section	.text.PWM_1_Stop,"ax",%progbits
 186              		.align	2
 187              		.global	PWM_1_Stop
 188              		.code	16
 189              		.thumb_func
 190              		.type	PWM_1_Stop, %function
 191              	PWM_1_Stop:
 192              	.LFB3:
 234:.\Generated_Source\PSoC4/PWM_1.c **** 
 235:.\Generated_Source\PSoC4/PWM_1.c **** 
 236:.\Generated_Source\PSoC4/PWM_1.c **** /*******************************************************************************
 237:.\Generated_Source\PSoC4/PWM_1.c **** * Function Name: PWM_1_Stop
 238:.\Generated_Source\PSoC4/PWM_1.c **** ********************************************************************************
 239:.\Generated_Source\PSoC4/PWM_1.c **** *
 240:.\Generated_Source\PSoC4/PWM_1.c **** * Summary:
 241:.\Generated_Source\PSoC4/PWM_1.c **** *  Disables the PWM_1.
 242:.\Generated_Source\PSoC4/PWM_1.c **** *
 243:.\Generated_Source\PSoC4/PWM_1.c **** * Parameters:
 244:.\Generated_Source\PSoC4/PWM_1.c **** *  None
 245:.\Generated_Source\PSoC4/PWM_1.c **** *
 246:.\Generated_Source\PSoC4/PWM_1.c **** * Return:
 247:.\Generated_Source\PSoC4/PWM_1.c **** *  None
 248:.\Generated_Source\PSoC4/PWM_1.c **** *
 249:.\Generated_Source\PSoC4/PWM_1.c **** *******************************************************************************/
 250:.\Generated_Source\PSoC4/PWM_1.c **** void PWM_1_Stop(void)
 251:.\Generated_Source\PSoC4/PWM_1.c **** {
 193              		.loc 1 251 0
 194              		.cfi_startproc
 195 0000 90B5     		push	{r4, r7, lr}
 196              		.cfi_def_cfa_offset 12
 197              		.cfi_offset 4, -12
 198              		.cfi_offset 7, -8
 199              		.cfi_offset 14, -4
 200 0002 83B0     		sub	sp, sp, #12
 201              		.cfi_def_cfa_offset 24
 202 0004 00AF     		add	r7, sp, #0
 203              		.cfi_def_cfa_register 7
 252:.\Generated_Source\PSoC4/PWM_1.c ****     uint8 enableInterrupts;
 253:.\Generated_Source\PSoC4/PWM_1.c **** 
ARM GAS  C:\Users\TINYWI~1\AppData\Local\Temp\ccrliPYO.s 			page 9


 254:.\Generated_Source\PSoC4/PWM_1.c ****     enableInterrupts = CyEnterCriticalSection();
 204              		.loc 1 254 0
 205 0006 FC1D     		add	r4, r7, #7
 206 0008 FFF7FEFF 		bl	CyEnterCriticalSection
 207 000c 031C     		mov	r3, r0
 208 000e 2370     		strb	r3, [r4]
 255:.\Generated_Source\PSoC4/PWM_1.c **** 
 256:.\Generated_Source\PSoC4/PWM_1.c ****     PWM_1_BLOCK_CONTROL_REG &= (uint32)~PWM_1_MASK;
 209              		.loc 1 256 0
 210 0010 064B     		ldr	r3, .L12
 211 0012 064A     		ldr	r2, .L12
 212 0014 1268     		ldr	r2, [r2]
 213 0016 0221     		mov	r1, #2
 214 0018 8A43     		bic	r2, r1
 215 001a 1A60     		str	r2, [r3]
 257:.\Generated_Source\PSoC4/PWM_1.c **** 
 258:.\Generated_Source\PSoC4/PWM_1.c ****     CyExitCriticalSection(enableInterrupts);
 216              		.loc 1 258 0
 217 001c FB1D     		add	r3, r7, #7
 218 001e 1B78     		ldrb	r3, [r3]
 219 0020 181C     		mov	r0, r3
 220 0022 FFF7FEFF 		bl	CyExitCriticalSection
 259:.\Generated_Source\PSoC4/PWM_1.c **** }
 221              		.loc 1 259 0
 222 0026 BD46     		mov	sp, r7
 223 0028 03B0     		add	sp, sp, #12
 224              		@ sp needed
 225 002a 90BD     		pop	{r4, r7, pc}
 226              	.L13:
 227              		.align	2
 228              	.L12:
 229 002c 00000540 		.word	1074069504
 230              		.cfi_endproc
 231              	.LFE3:
 232              		.size	PWM_1_Stop, .-PWM_1_Stop
 233              		.section	.text.PWM_1_SetMode,"ax",%progbits
 234              		.align	2
 235              		.global	PWM_1_SetMode
 236              		.code	16
 237              		.thumb_func
 238              		.type	PWM_1_SetMode, %function
 239              	PWM_1_SetMode:
 240              	.LFB4:
 260:.\Generated_Source\PSoC4/PWM_1.c **** 
 261:.\Generated_Source\PSoC4/PWM_1.c **** 
 262:.\Generated_Source\PSoC4/PWM_1.c **** /*******************************************************************************
 263:.\Generated_Source\PSoC4/PWM_1.c **** * Function Name: PWM_1_SetMode
 264:.\Generated_Source\PSoC4/PWM_1.c **** ********************************************************************************
 265:.\Generated_Source\PSoC4/PWM_1.c **** *
 266:.\Generated_Source\PSoC4/PWM_1.c **** * Summary:
 267:.\Generated_Source\PSoC4/PWM_1.c **** *  Sets the operation mode of the PWM_1. This function is used when
 268:.\Generated_Source\PSoC4/PWM_1.c **** *  configured as a generic PWM_1 and the actual mode of operation is
 269:.\Generated_Source\PSoC4/PWM_1.c **** *  set at runtime. The mode must be set while the component is disabled.
 270:.\Generated_Source\PSoC4/PWM_1.c **** *
 271:.\Generated_Source\PSoC4/PWM_1.c **** * Parameters:
 272:.\Generated_Source\PSoC4/PWM_1.c **** *  mode: Mode for the PWM_1 to operate in
 273:.\Generated_Source\PSoC4/PWM_1.c **** *   Values:
ARM GAS  C:\Users\TINYWI~1\AppData\Local\Temp\ccrliPYO.s 			page 10


 274:.\Generated_Source\PSoC4/PWM_1.c **** *   - PWM_1_MODE_TIMER_COMPARE - Timer / Counter with
 275:.\Generated_Source\PSoC4/PWM_1.c **** *                                                 compare capability
 276:.\Generated_Source\PSoC4/PWM_1.c **** *         - PWM_1_MODE_TIMER_CAPTURE - Timer / Counter with
 277:.\Generated_Source\PSoC4/PWM_1.c **** *                                                 capture capability
 278:.\Generated_Source\PSoC4/PWM_1.c **** *         - PWM_1_MODE_QUAD - Quadrature decoder
 279:.\Generated_Source\PSoC4/PWM_1.c **** *         - PWM_1_MODE_PWM - PWM
 280:.\Generated_Source\PSoC4/PWM_1.c **** *         - PWM_1_MODE_PWM_DT - PWM with dead time
 281:.\Generated_Source\PSoC4/PWM_1.c **** *         - PWM_1_MODE_PWM_PR - PWM with pseudo random capability
 282:.\Generated_Source\PSoC4/PWM_1.c **** *
 283:.\Generated_Source\PSoC4/PWM_1.c **** * Return:
 284:.\Generated_Source\PSoC4/PWM_1.c **** *  None
 285:.\Generated_Source\PSoC4/PWM_1.c **** *
 286:.\Generated_Source\PSoC4/PWM_1.c **** *******************************************************************************/
 287:.\Generated_Source\PSoC4/PWM_1.c **** void PWM_1_SetMode(uint32 mode)
 288:.\Generated_Source\PSoC4/PWM_1.c **** {
 241              		.loc 1 288 0
 242              		.cfi_startproc
 243 0000 90B5     		push	{r4, r7, lr}
 244              		.cfi_def_cfa_offset 12
 245              		.cfi_offset 4, -12
 246              		.cfi_offset 7, -8
 247              		.cfi_offset 14, -4
 248 0002 85B0     		sub	sp, sp, #20
 249              		.cfi_def_cfa_offset 32
 250 0004 00AF     		add	r7, sp, #0
 251              		.cfi_def_cfa_register 7
 252 0006 7860     		str	r0, [r7, #4]
 289:.\Generated_Source\PSoC4/PWM_1.c ****     uint8 enableInterrupts;
 290:.\Generated_Source\PSoC4/PWM_1.c **** 
 291:.\Generated_Source\PSoC4/PWM_1.c ****     enableInterrupts = CyEnterCriticalSection();
 253              		.loc 1 291 0
 254 0008 3C1C     		mov	r4, r7
 255 000a 0F34     		add	r4, r4, #15
 256 000c FFF7FEFF 		bl	CyEnterCriticalSection
 257 0010 031C     		mov	r3, r0
 258 0012 2370     		strb	r3, [r4]
 292:.\Generated_Source\PSoC4/PWM_1.c **** 
 293:.\Generated_Source\PSoC4/PWM_1.c ****     PWM_1_CONTROL_REG &= (uint32)~PWM_1_MODE_MASK;
 259              		.loc 1 293 0
 260 0014 0A4B     		ldr	r3, .L15
 261 0016 0A4A     		ldr	r2, .L15
 262 0018 1168     		ldr	r1, [r2]
 263 001a 0A4A     		ldr	r2, .L15+4
 264 001c 0A40     		and	r2, r1
 265 001e 1A60     		str	r2, [r3]
 294:.\Generated_Source\PSoC4/PWM_1.c ****     PWM_1_CONTROL_REG |= mode;
 266              		.loc 1 294 0
 267 0020 074B     		ldr	r3, .L15
 268 0022 074A     		ldr	r2, .L15
 269 0024 1168     		ldr	r1, [r2]
 270 0026 7A68     		ldr	r2, [r7, #4]
 271 0028 0A43     		orr	r2, r1
 272 002a 1A60     		str	r2, [r3]
 295:.\Generated_Source\PSoC4/PWM_1.c **** 
 296:.\Generated_Source\PSoC4/PWM_1.c ****     CyExitCriticalSection(enableInterrupts);
 273              		.loc 1 296 0
 274 002c 3B1C     		mov	r3, r7
ARM GAS  C:\Users\TINYWI~1\AppData\Local\Temp\ccrliPYO.s 			page 11


 275 002e 0F33     		add	r3, r3, #15
 276 0030 1B78     		ldrb	r3, [r3]
 277 0032 181C     		mov	r0, r3
 278 0034 FFF7FEFF 		bl	CyExitCriticalSection
 297:.\Generated_Source\PSoC4/PWM_1.c **** }
 279              		.loc 1 297 0
 280 0038 BD46     		mov	sp, r7
 281 003a 05B0     		add	sp, sp, #20
 282              		@ sp needed
 283 003c 90BD     		pop	{r4, r7, pc}
 284              	.L16:
 285 003e C046     		.align	2
 286              	.L15:
 287 0040 40010540 		.word	1074069824
 288 0044 FFFFFFF8 		.word	-117440513
 289              		.cfi_endproc
 290              	.LFE4:
 291              		.size	PWM_1_SetMode, .-PWM_1_SetMode
 292              		.section	.text.PWM_1_SetQDMode,"ax",%progbits
 293              		.align	2
 294              		.global	PWM_1_SetQDMode
 295              		.code	16
 296              		.thumb_func
 297              		.type	PWM_1_SetQDMode, %function
 298              	PWM_1_SetQDMode:
 299              	.LFB5:
 298:.\Generated_Source\PSoC4/PWM_1.c **** 
 299:.\Generated_Source\PSoC4/PWM_1.c **** 
 300:.\Generated_Source\PSoC4/PWM_1.c **** /*******************************************************************************
 301:.\Generated_Source\PSoC4/PWM_1.c **** * Function Name: PWM_1_SetQDMode
 302:.\Generated_Source\PSoC4/PWM_1.c **** ********************************************************************************
 303:.\Generated_Source\PSoC4/PWM_1.c **** *
 304:.\Generated_Source\PSoC4/PWM_1.c **** * Summary:
 305:.\Generated_Source\PSoC4/PWM_1.c **** *  Sets the the Quadrature Decoder to one of the 3 supported modes.
 306:.\Generated_Source\PSoC4/PWM_1.c **** *  Its functionality is only applicable to Quadrature Decoder operation.
 307:.\Generated_Source\PSoC4/PWM_1.c **** *
 308:.\Generated_Source\PSoC4/PWM_1.c **** * Parameters:
 309:.\Generated_Source\PSoC4/PWM_1.c **** *  qdMode: Quadrature Decoder mode
 310:.\Generated_Source\PSoC4/PWM_1.c **** *   Values:
 311:.\Generated_Source\PSoC4/PWM_1.c **** *         - PWM_1_MODE_X1 - Counts on phi 1 rising
 312:.\Generated_Source\PSoC4/PWM_1.c **** *         - PWM_1_MODE_X2 - Counts on both edges of phi1 (2x faster)
 313:.\Generated_Source\PSoC4/PWM_1.c **** *         - PWM_1_MODE_X4 - Counts on both edges of phi1 and phi2
 314:.\Generated_Source\PSoC4/PWM_1.c **** *                                        (4x faster)
 315:.\Generated_Source\PSoC4/PWM_1.c **** *
 316:.\Generated_Source\PSoC4/PWM_1.c **** * Return:
 317:.\Generated_Source\PSoC4/PWM_1.c **** *  None
 318:.\Generated_Source\PSoC4/PWM_1.c **** *
 319:.\Generated_Source\PSoC4/PWM_1.c **** *******************************************************************************/
 320:.\Generated_Source\PSoC4/PWM_1.c **** void PWM_1_SetQDMode(uint32 qdMode)
 321:.\Generated_Source\PSoC4/PWM_1.c **** {
 300              		.loc 1 321 0
 301              		.cfi_startproc
 302 0000 90B5     		push	{r4, r7, lr}
 303              		.cfi_def_cfa_offset 12
 304              		.cfi_offset 4, -12
 305              		.cfi_offset 7, -8
 306              		.cfi_offset 14, -4
ARM GAS  C:\Users\TINYWI~1\AppData\Local\Temp\ccrliPYO.s 			page 12


 307 0002 85B0     		sub	sp, sp, #20
 308              		.cfi_def_cfa_offset 32
 309 0004 00AF     		add	r7, sp, #0
 310              		.cfi_def_cfa_register 7
 311 0006 7860     		str	r0, [r7, #4]
 322:.\Generated_Source\PSoC4/PWM_1.c ****     uint8 enableInterrupts;
 323:.\Generated_Source\PSoC4/PWM_1.c **** 
 324:.\Generated_Source\PSoC4/PWM_1.c ****     enableInterrupts = CyEnterCriticalSection();
 312              		.loc 1 324 0
 313 0008 3C1C     		mov	r4, r7
 314 000a 0F34     		add	r4, r4, #15
 315 000c FFF7FEFF 		bl	CyEnterCriticalSection
 316 0010 031C     		mov	r3, r0
 317 0012 2370     		strb	r3, [r4]
 325:.\Generated_Source\PSoC4/PWM_1.c **** 
 326:.\Generated_Source\PSoC4/PWM_1.c ****     PWM_1_CONTROL_REG &= (uint32)~PWM_1_QUAD_MODE_MASK;
 318              		.loc 1 326 0
 319 0014 0A4B     		ldr	r3, .L18
 320 0016 0A4A     		ldr	r2, .L18
 321 0018 1168     		ldr	r1, [r2]
 322 001a 0A4A     		ldr	r2, .L18+4
 323 001c 0A40     		and	r2, r1
 324 001e 1A60     		str	r2, [r3]
 327:.\Generated_Source\PSoC4/PWM_1.c ****     PWM_1_CONTROL_REG |= qdMode;
 325              		.loc 1 327 0
 326 0020 074B     		ldr	r3, .L18
 327 0022 074A     		ldr	r2, .L18
 328 0024 1168     		ldr	r1, [r2]
 329 0026 7A68     		ldr	r2, [r7, #4]
 330 0028 0A43     		orr	r2, r1
 331 002a 1A60     		str	r2, [r3]
 328:.\Generated_Source\PSoC4/PWM_1.c **** 
 329:.\Generated_Source\PSoC4/PWM_1.c ****     CyExitCriticalSection(enableInterrupts);
 332              		.loc 1 329 0
 333 002c 3B1C     		mov	r3, r7
 334 002e 0F33     		add	r3, r3, #15
 335 0030 1B78     		ldrb	r3, [r3]
 336 0032 181C     		mov	r0, r3
 337 0034 FFF7FEFF 		bl	CyExitCriticalSection
 330:.\Generated_Source\PSoC4/PWM_1.c **** }
 338              		.loc 1 330 0
 339 0038 BD46     		mov	sp, r7
 340 003a 05B0     		add	sp, sp, #20
 341              		@ sp needed
 342 003c 90BD     		pop	{r4, r7, pc}
 343              	.L19:
 344 003e C046     		.align	2
 345              	.L18:
 346 0040 40010540 		.word	1074069824
 347 0044 FFFF8FFF 		.word	-7340033
 348              		.cfi_endproc
 349              	.LFE5:
 350              		.size	PWM_1_SetQDMode, .-PWM_1_SetQDMode
 351              		.section	.text.PWM_1_SetPrescaler,"ax",%progbits
 352              		.align	2
 353              		.global	PWM_1_SetPrescaler
 354              		.code	16
ARM GAS  C:\Users\TINYWI~1\AppData\Local\Temp\ccrliPYO.s 			page 13


 355              		.thumb_func
 356              		.type	PWM_1_SetPrescaler, %function
 357              	PWM_1_SetPrescaler:
 358              	.LFB6:
 331:.\Generated_Source\PSoC4/PWM_1.c **** 
 332:.\Generated_Source\PSoC4/PWM_1.c **** 
 333:.\Generated_Source\PSoC4/PWM_1.c **** /*******************************************************************************
 334:.\Generated_Source\PSoC4/PWM_1.c **** * Function Name: PWM_1_SetPrescaler
 335:.\Generated_Source\PSoC4/PWM_1.c **** ********************************************************************************
 336:.\Generated_Source\PSoC4/PWM_1.c **** *
 337:.\Generated_Source\PSoC4/PWM_1.c **** * Summary:
 338:.\Generated_Source\PSoC4/PWM_1.c **** *  Sets the prescaler value that is applied to the clock input.  Not applicable
 339:.\Generated_Source\PSoC4/PWM_1.c **** *  to a PWM with the dead time mode or Quadrature Decoder mode.
 340:.\Generated_Source\PSoC4/PWM_1.c **** *
 341:.\Generated_Source\PSoC4/PWM_1.c **** * Parameters:
 342:.\Generated_Source\PSoC4/PWM_1.c **** *  prescaler: Prescaler divider value
 343:.\Generated_Source\PSoC4/PWM_1.c **** *   Values:
 344:.\Generated_Source\PSoC4/PWM_1.c **** *         - PWM_1_PRESCALE_DIVBY1    - Divide by 1 (no prescaling)
 345:.\Generated_Source\PSoC4/PWM_1.c **** *         - PWM_1_PRESCALE_DIVBY2    - Divide by 2
 346:.\Generated_Source\PSoC4/PWM_1.c **** *         - PWM_1_PRESCALE_DIVBY4    - Divide by 4
 347:.\Generated_Source\PSoC4/PWM_1.c **** *         - PWM_1_PRESCALE_DIVBY8    - Divide by 8
 348:.\Generated_Source\PSoC4/PWM_1.c **** *         - PWM_1_PRESCALE_DIVBY16   - Divide by 16
 349:.\Generated_Source\PSoC4/PWM_1.c **** *         - PWM_1_PRESCALE_DIVBY32   - Divide by 32
 350:.\Generated_Source\PSoC4/PWM_1.c **** *         - PWM_1_PRESCALE_DIVBY64   - Divide by 64
 351:.\Generated_Source\PSoC4/PWM_1.c **** *         - PWM_1_PRESCALE_DIVBY128  - Divide by 128
 352:.\Generated_Source\PSoC4/PWM_1.c **** *
 353:.\Generated_Source\PSoC4/PWM_1.c **** * Return:
 354:.\Generated_Source\PSoC4/PWM_1.c **** *  None
 355:.\Generated_Source\PSoC4/PWM_1.c **** *
 356:.\Generated_Source\PSoC4/PWM_1.c **** *******************************************************************************/
 357:.\Generated_Source\PSoC4/PWM_1.c **** void PWM_1_SetPrescaler(uint32 prescaler)
 358:.\Generated_Source\PSoC4/PWM_1.c **** {
 359              		.loc 1 358 0
 360              		.cfi_startproc
 361 0000 90B5     		push	{r4, r7, lr}
 362              		.cfi_def_cfa_offset 12
 363              		.cfi_offset 4, -12
 364              		.cfi_offset 7, -8
 365              		.cfi_offset 14, -4
 366 0002 85B0     		sub	sp, sp, #20
 367              		.cfi_def_cfa_offset 32
 368 0004 00AF     		add	r7, sp, #0
 369              		.cfi_def_cfa_register 7
 370 0006 7860     		str	r0, [r7, #4]
 359:.\Generated_Source\PSoC4/PWM_1.c ****     uint8 enableInterrupts;
 360:.\Generated_Source\PSoC4/PWM_1.c **** 
 361:.\Generated_Source\PSoC4/PWM_1.c ****     enableInterrupts = CyEnterCriticalSection();
 371              		.loc 1 361 0
 372 0008 3C1C     		mov	r4, r7
 373 000a 0F34     		add	r4, r4, #15
 374 000c FFF7FEFF 		bl	CyEnterCriticalSection
 375 0010 031C     		mov	r3, r0
 376 0012 2370     		strb	r3, [r4]
 362:.\Generated_Source\PSoC4/PWM_1.c **** 
 363:.\Generated_Source\PSoC4/PWM_1.c ****     PWM_1_CONTROL_REG &= (uint32)~PWM_1_PRESCALER_MASK;
 377              		.loc 1 363 0
 378 0014 0A4B     		ldr	r3, .L21
ARM GAS  C:\Users\TINYWI~1\AppData\Local\Temp\ccrliPYO.s 			page 14


 379 0016 0A4A     		ldr	r2, .L21
 380 0018 1168     		ldr	r1, [r2]
 381 001a 0A4A     		ldr	r2, .L21+4
 382 001c 0A40     		and	r2, r1
 383 001e 1A60     		str	r2, [r3]
 364:.\Generated_Source\PSoC4/PWM_1.c ****     PWM_1_CONTROL_REG |= prescaler;
 384              		.loc 1 364 0
 385 0020 074B     		ldr	r3, .L21
 386 0022 074A     		ldr	r2, .L21
 387 0024 1168     		ldr	r1, [r2]
 388 0026 7A68     		ldr	r2, [r7, #4]
 389 0028 0A43     		orr	r2, r1
 390 002a 1A60     		str	r2, [r3]
 365:.\Generated_Source\PSoC4/PWM_1.c **** 
 366:.\Generated_Source\PSoC4/PWM_1.c ****     CyExitCriticalSection(enableInterrupts);
 391              		.loc 1 366 0
 392 002c 3B1C     		mov	r3, r7
 393 002e 0F33     		add	r3, r3, #15
 394 0030 1B78     		ldrb	r3, [r3]
 395 0032 181C     		mov	r0, r3
 396 0034 FFF7FEFF 		bl	CyExitCriticalSection
 367:.\Generated_Source\PSoC4/PWM_1.c **** }
 397              		.loc 1 367 0
 398 0038 BD46     		mov	sp, r7
 399 003a 05B0     		add	sp, sp, #20
 400              		@ sp needed
 401 003c 90BD     		pop	{r4, r7, pc}
 402              	.L22:
 403 003e C046     		.align	2
 404              	.L21:
 405 0040 40010540 		.word	1074069824
 406 0044 FF00FFFF 		.word	-65281
 407              		.cfi_endproc
 408              	.LFE6:
 409              		.size	PWM_1_SetPrescaler, .-PWM_1_SetPrescaler
 410              		.section	.text.PWM_1_SetOneShot,"ax",%progbits
 411              		.align	2
 412              		.global	PWM_1_SetOneShot
 413              		.code	16
 414              		.thumb_func
 415              		.type	PWM_1_SetOneShot, %function
 416              	PWM_1_SetOneShot:
 417              	.LFB7:
 368:.\Generated_Source\PSoC4/PWM_1.c **** 
 369:.\Generated_Source\PSoC4/PWM_1.c **** 
 370:.\Generated_Source\PSoC4/PWM_1.c **** /*******************************************************************************
 371:.\Generated_Source\PSoC4/PWM_1.c **** * Function Name: PWM_1_SetOneShot
 372:.\Generated_Source\PSoC4/PWM_1.c **** ********************************************************************************
 373:.\Generated_Source\PSoC4/PWM_1.c **** *
 374:.\Generated_Source\PSoC4/PWM_1.c **** * Summary:
 375:.\Generated_Source\PSoC4/PWM_1.c **** *  Writes the register that controls whether the PWM_1 runs
 376:.\Generated_Source\PSoC4/PWM_1.c **** *  continuously or stops when terminal count is reached.  By default the
 377:.\Generated_Source\PSoC4/PWM_1.c **** *  PWM_1 operates in the continuous mode.
 378:.\Generated_Source\PSoC4/PWM_1.c **** *
 379:.\Generated_Source\PSoC4/PWM_1.c **** * Parameters:
 380:.\Generated_Source\PSoC4/PWM_1.c **** *  oneShotEnable
 381:.\Generated_Source\PSoC4/PWM_1.c **** *   Values:
ARM GAS  C:\Users\TINYWI~1\AppData\Local\Temp\ccrliPYO.s 			page 15


 382:.\Generated_Source\PSoC4/PWM_1.c **** *     - 0 - Continuous
 383:.\Generated_Source\PSoC4/PWM_1.c **** *     - 1 - Enable One Shot
 384:.\Generated_Source\PSoC4/PWM_1.c **** *
 385:.\Generated_Source\PSoC4/PWM_1.c **** * Return:
 386:.\Generated_Source\PSoC4/PWM_1.c **** *  None
 387:.\Generated_Source\PSoC4/PWM_1.c **** *
 388:.\Generated_Source\PSoC4/PWM_1.c **** *******************************************************************************/
 389:.\Generated_Source\PSoC4/PWM_1.c **** void PWM_1_SetOneShot(uint32 oneShotEnable)
 390:.\Generated_Source\PSoC4/PWM_1.c **** {
 418              		.loc 1 390 0
 419              		.cfi_startproc
 420 0000 90B5     		push	{r4, r7, lr}
 421              		.cfi_def_cfa_offset 12
 422              		.cfi_offset 4, -12
 423              		.cfi_offset 7, -8
 424              		.cfi_offset 14, -4
 425 0002 85B0     		sub	sp, sp, #20
 426              		.cfi_def_cfa_offset 32
 427 0004 00AF     		add	r7, sp, #0
 428              		.cfi_def_cfa_register 7
 429 0006 7860     		str	r0, [r7, #4]
 391:.\Generated_Source\PSoC4/PWM_1.c ****     uint8 enableInterrupts;
 392:.\Generated_Source\PSoC4/PWM_1.c **** 
 393:.\Generated_Source\PSoC4/PWM_1.c ****     enableInterrupts = CyEnterCriticalSection();
 430              		.loc 1 393 0
 431 0008 3C1C     		mov	r4, r7
 432 000a 0F34     		add	r4, r4, #15
 433 000c FFF7FEFF 		bl	CyEnterCriticalSection
 434 0010 031C     		mov	r3, r0
 435 0012 2370     		strb	r3, [r4]
 394:.\Generated_Source\PSoC4/PWM_1.c **** 
 395:.\Generated_Source\PSoC4/PWM_1.c ****     PWM_1_CONTROL_REG &= (uint32)~PWM_1_ONESHOT_MASK;
 436              		.loc 1 395 0
 437 0014 0B4B     		ldr	r3, .L24
 438 0016 0B4A     		ldr	r2, .L24
 439 0018 1168     		ldr	r1, [r2]
 440 001a 0B4A     		ldr	r2, .L24+4
 441 001c 0A40     		and	r2, r1
 442 001e 1A60     		str	r2, [r3]
 396:.\Generated_Source\PSoC4/PWM_1.c ****     PWM_1_CONTROL_REG |= ((uint32)((oneShotEnable & PWM_1_1BIT_MASK) <<
 443              		.loc 1 396 0
 444 0020 084B     		ldr	r3, .L24
 445 0022 084A     		ldr	r2, .L24
 446 0024 1168     		ldr	r1, [r2]
 447 0026 7868     		ldr	r0, [r7, #4]
 448 0028 0122     		mov	r2, #1
 449 002a 0240     		and	r2, r0
 450 002c 9204     		lsl	r2, r2, #18
 451 002e 0A43     		orr	r2, r1
 452 0030 1A60     		str	r2, [r3]
 397:.\Generated_Source\PSoC4/PWM_1.c ****                                                                PWM_1_ONESHOT_SHIFT));
 398:.\Generated_Source\PSoC4/PWM_1.c **** 
 399:.\Generated_Source\PSoC4/PWM_1.c ****     CyExitCriticalSection(enableInterrupts);
 453              		.loc 1 399 0
 454 0032 3B1C     		mov	r3, r7
 455 0034 0F33     		add	r3, r3, #15
 456 0036 1B78     		ldrb	r3, [r3]
ARM GAS  C:\Users\TINYWI~1\AppData\Local\Temp\ccrliPYO.s 			page 16


 457 0038 181C     		mov	r0, r3
 458 003a FFF7FEFF 		bl	CyExitCriticalSection
 400:.\Generated_Source\PSoC4/PWM_1.c **** }
 459              		.loc 1 400 0
 460 003e BD46     		mov	sp, r7
 461 0040 05B0     		add	sp, sp, #20
 462              		@ sp needed
 463 0042 90BD     		pop	{r4, r7, pc}
 464              	.L25:
 465              		.align	2
 466              	.L24:
 467 0044 40010540 		.word	1074069824
 468 0048 FFFFFBFF 		.word	-262145
 469              		.cfi_endproc
 470              	.LFE7:
 471              		.size	PWM_1_SetOneShot, .-PWM_1_SetOneShot
 472              		.section	.text.PWM_1_SetPWMMode,"ax",%progbits
 473              		.align	2
 474              		.global	PWM_1_SetPWMMode
 475              		.code	16
 476              		.thumb_func
 477              		.type	PWM_1_SetPWMMode, %function
 478              	PWM_1_SetPWMMode:
 479              	.LFB8:
 401:.\Generated_Source\PSoC4/PWM_1.c **** 
 402:.\Generated_Source\PSoC4/PWM_1.c **** 
 403:.\Generated_Source\PSoC4/PWM_1.c **** /*******************************************************************************
 404:.\Generated_Source\PSoC4/PWM_1.c **** * Function Name: PWM_1_SetPWMMode
 405:.\Generated_Source\PSoC4/PWM_1.c **** ********************************************************************************
 406:.\Generated_Source\PSoC4/PWM_1.c **** *
 407:.\Generated_Source\PSoC4/PWM_1.c **** * Summary:
 408:.\Generated_Source\PSoC4/PWM_1.c **** *  Writes the control register that determines what mode of operation the PWM
 409:.\Generated_Source\PSoC4/PWM_1.c **** *  output lines are driven in.  There is a setting for what to do on a
 410:.\Generated_Source\PSoC4/PWM_1.c **** *  comparison match (CC_MATCH), on an overflow (OVERFLOW) and on an underflow
 411:.\Generated_Source\PSoC4/PWM_1.c **** *  (UNDERFLOW).  The value for each of the three must be ORed together to form
 412:.\Generated_Source\PSoC4/PWM_1.c **** *  the mode.
 413:.\Generated_Source\PSoC4/PWM_1.c **** *
 414:.\Generated_Source\PSoC4/PWM_1.c **** * Parameters:
 415:.\Generated_Source\PSoC4/PWM_1.c **** *  modeMask: A combination of three mode settings.  Mask must include a value
 416:.\Generated_Source\PSoC4/PWM_1.c **** *  for each of the three or use one of the preconfigured PWM settings.
 417:.\Generated_Source\PSoC4/PWM_1.c **** *   Values:
 418:.\Generated_Source\PSoC4/PWM_1.c **** *     - CC_MATCH_SET        - Set on comparison match
 419:.\Generated_Source\PSoC4/PWM_1.c **** *     - CC_MATCH_CLEAR      - Clear on comparison match
 420:.\Generated_Source\PSoC4/PWM_1.c **** *     - CC_MATCH_INVERT     - Invert on comparison match
 421:.\Generated_Source\PSoC4/PWM_1.c **** *     - CC_MATCH_NO_CHANGE  - No change on comparison match
 422:.\Generated_Source\PSoC4/PWM_1.c **** *     - OVERLOW_SET         - Set on overflow
 423:.\Generated_Source\PSoC4/PWM_1.c **** *     - OVERLOW_CLEAR       - Clear on  overflow
 424:.\Generated_Source\PSoC4/PWM_1.c **** *     - OVERLOW_INVERT      - Invert on overflow
 425:.\Generated_Source\PSoC4/PWM_1.c **** *     - OVERLOW_NO_CHANGE   - No change on overflow
 426:.\Generated_Source\PSoC4/PWM_1.c **** *     - UNDERFLOW_SET       - Set on underflow
 427:.\Generated_Source\PSoC4/PWM_1.c **** *     - UNDERFLOW_CLEAR     - Clear on underflow
 428:.\Generated_Source\PSoC4/PWM_1.c **** *     - UNDERFLOW_INVERT    - Invert on underflow
 429:.\Generated_Source\PSoC4/PWM_1.c **** *     - UNDERFLOW_NO_CHANGE - No change on underflow
 430:.\Generated_Source\PSoC4/PWM_1.c **** *     - PWM_MODE_LEFT       - Setting for left aligned PWM.  Should be combined
 431:.\Generated_Source\PSoC4/PWM_1.c **** *                             with up counting mode
 432:.\Generated_Source\PSoC4/PWM_1.c **** *     - PWM_MODE_RIGHT      - Setting for right aligned PWM.  Should be combined
 433:.\Generated_Source\PSoC4/PWM_1.c **** *                             with down counting mode
ARM GAS  C:\Users\TINYWI~1\AppData\Local\Temp\ccrliPYO.s 			page 17


 434:.\Generated_Source\PSoC4/PWM_1.c **** *     - PWM_MODE_CENTER     - Setting for center aligned PWM.  Should be
 435:.\Generated_Source\PSoC4/PWM_1.c **** *                             combined with up/down 0 mode
 436:.\Generated_Source\PSoC4/PWM_1.c **** *     - PWM_MODE_ASYM       - Setting for asymmetric PWM.  Should be combined
 437:.\Generated_Source\PSoC4/PWM_1.c **** *                             with up/down 1 mode
 438:.\Generated_Source\PSoC4/PWM_1.c **** *
 439:.\Generated_Source\PSoC4/PWM_1.c **** * Return:
 440:.\Generated_Source\PSoC4/PWM_1.c **** *  None
 441:.\Generated_Source\PSoC4/PWM_1.c **** *
 442:.\Generated_Source\PSoC4/PWM_1.c **** *******************************************************************************/
 443:.\Generated_Source\PSoC4/PWM_1.c **** void PWM_1_SetPWMMode(uint32 modeMask)
 444:.\Generated_Source\PSoC4/PWM_1.c **** {
 480              		.loc 1 444 0
 481              		.cfi_startproc
 482 0000 80B5     		push	{r7, lr}
 483              		.cfi_def_cfa_offset 8
 484              		.cfi_offset 7, -8
 485              		.cfi_offset 14, -4
 486 0002 82B0     		sub	sp, sp, #8
 487              		.cfi_def_cfa_offset 16
 488 0004 00AF     		add	r7, sp, #0
 489              		.cfi_def_cfa_register 7
 490 0006 7860     		str	r0, [r7, #4]
 445:.\Generated_Source\PSoC4/PWM_1.c ****     PWM_1_TRIG_CONTROL2_REG = (modeMask & PWM_1_6BIT_MASK);
 491              		.loc 1 445 0
 492 0008 034B     		ldr	r3, .L27
 493 000a 7968     		ldr	r1, [r7, #4]
 494 000c 3F22     		mov	r2, #63
 495 000e 0A40     		and	r2, r1
 496 0010 1A60     		str	r2, [r3]
 446:.\Generated_Source\PSoC4/PWM_1.c **** }
 497              		.loc 1 446 0
 498 0012 BD46     		mov	sp, r7
 499 0014 02B0     		add	sp, sp, #8
 500              		@ sp needed
 501 0016 80BD     		pop	{r7, pc}
 502              	.L28:
 503              		.align	2
 504              	.L27:
 505 0018 68010540 		.word	1074069864
 506              		.cfi_endproc
 507              	.LFE8:
 508              		.size	PWM_1_SetPWMMode, .-PWM_1_SetPWMMode
 509              		.section	.text.PWM_1_SetPWMSyncKill,"ax",%progbits
 510              		.align	2
 511              		.global	PWM_1_SetPWMSyncKill
 512              		.code	16
 513              		.thumb_func
 514              		.type	PWM_1_SetPWMSyncKill, %function
 515              	PWM_1_SetPWMSyncKill:
 516              	.LFB9:
 447:.\Generated_Source\PSoC4/PWM_1.c **** 
 448:.\Generated_Source\PSoC4/PWM_1.c **** 
 449:.\Generated_Source\PSoC4/PWM_1.c **** 
 450:.\Generated_Source\PSoC4/PWM_1.c **** /*******************************************************************************
 451:.\Generated_Source\PSoC4/PWM_1.c **** * Function Name: PWM_1_SetPWMSyncKill
 452:.\Generated_Source\PSoC4/PWM_1.c **** ********************************************************************************
 453:.\Generated_Source\PSoC4/PWM_1.c **** *
ARM GAS  C:\Users\TINYWI~1\AppData\Local\Temp\ccrliPYO.s 			page 18


 454:.\Generated_Source\PSoC4/PWM_1.c **** * Summary:
 455:.\Generated_Source\PSoC4/PWM_1.c **** *  Writes the register that controls whether the PWM kill signal (stop input)
 456:.\Generated_Source\PSoC4/PWM_1.c **** *  causes asynchronous or synchronous kill operation.  By default the kill
 457:.\Generated_Source\PSoC4/PWM_1.c **** *  operation is asynchronous.  This functionality is only applicable to the PWM
 458:.\Generated_Source\PSoC4/PWM_1.c **** *  and PWM with dead time modes.
 459:.\Generated_Source\PSoC4/PWM_1.c **** *
 460:.\Generated_Source\PSoC4/PWM_1.c **** *  For Synchronous mode the kill signal disables both the line and line_n
 461:.\Generated_Source\PSoC4/PWM_1.c **** *  signals until the next terminal count.
 462:.\Generated_Source\PSoC4/PWM_1.c **** *
 463:.\Generated_Source\PSoC4/PWM_1.c **** *  For Asynchronous mode the kill signal disables both the line and line_n
 464:.\Generated_Source\PSoC4/PWM_1.c **** *  signals when the kill signal is present.  This mode should only be used
 465:.\Generated_Source\PSoC4/PWM_1.c **** *  when the kill signal (stop input) is configured in the pass through mode
 466:.\Generated_Source\PSoC4/PWM_1.c **** *  (Level sensitive signal).
 467:.\Generated_Source\PSoC4/PWM_1.c **** 
 468:.\Generated_Source\PSoC4/PWM_1.c **** *
 469:.\Generated_Source\PSoC4/PWM_1.c **** * Parameters:
 470:.\Generated_Source\PSoC4/PWM_1.c **** *  syncKillEnable
 471:.\Generated_Source\PSoC4/PWM_1.c **** *   Values:
 472:.\Generated_Source\PSoC4/PWM_1.c **** *     - 0 - Asynchronous
 473:.\Generated_Source\PSoC4/PWM_1.c **** *     - 1 - Synchronous
 474:.\Generated_Source\PSoC4/PWM_1.c **** *
 475:.\Generated_Source\PSoC4/PWM_1.c **** * Return:
 476:.\Generated_Source\PSoC4/PWM_1.c **** *  None
 477:.\Generated_Source\PSoC4/PWM_1.c **** *
 478:.\Generated_Source\PSoC4/PWM_1.c **** *******************************************************************************/
 479:.\Generated_Source\PSoC4/PWM_1.c **** void PWM_1_SetPWMSyncKill(uint32 syncKillEnable)
 480:.\Generated_Source\PSoC4/PWM_1.c **** {
 517              		.loc 1 480 0
 518              		.cfi_startproc
 519 0000 90B5     		push	{r4, r7, lr}
 520              		.cfi_def_cfa_offset 12
 521              		.cfi_offset 4, -12
 522              		.cfi_offset 7, -8
 523              		.cfi_offset 14, -4
 524 0002 85B0     		sub	sp, sp, #20
 525              		.cfi_def_cfa_offset 32
 526 0004 00AF     		add	r7, sp, #0
 527              		.cfi_def_cfa_register 7
 528 0006 7860     		str	r0, [r7, #4]
 481:.\Generated_Source\PSoC4/PWM_1.c ****     uint8 enableInterrupts;
 482:.\Generated_Source\PSoC4/PWM_1.c **** 
 483:.\Generated_Source\PSoC4/PWM_1.c ****     enableInterrupts = CyEnterCriticalSection();
 529              		.loc 1 483 0
 530 0008 3C1C     		mov	r4, r7
 531 000a 0F34     		add	r4, r4, #15
 532 000c FFF7FEFF 		bl	CyEnterCriticalSection
 533 0010 031C     		mov	r3, r0
 534 0012 2370     		strb	r3, [r4]
 484:.\Generated_Source\PSoC4/PWM_1.c **** 
 485:.\Generated_Source\PSoC4/PWM_1.c ****     PWM_1_CONTROL_REG &= (uint32)~PWM_1_PWM_SYNC_KILL_MASK;
 535              		.loc 1 485 0
 536 0014 0B4B     		ldr	r3, .L30
 537 0016 0B4A     		ldr	r2, .L30
 538 0018 1268     		ldr	r2, [r2]
 539 001a 0421     		mov	r1, #4
 540 001c 8A43     		bic	r2, r1
 541 001e 1A60     		str	r2, [r3]
ARM GAS  C:\Users\TINYWI~1\AppData\Local\Temp\ccrliPYO.s 			page 19


 486:.\Generated_Source\PSoC4/PWM_1.c ****     PWM_1_CONTROL_REG |= ((uint32)((syncKillEnable & PWM_1_1BIT_MASK)  <<
 542              		.loc 1 486 0
 543 0020 084B     		ldr	r3, .L30
 544 0022 084A     		ldr	r2, .L30
 545 0024 1168     		ldr	r1, [r2]
 546 0026 7868     		ldr	r0, [r7, #4]
 547 0028 0122     		mov	r2, #1
 548 002a 0240     		and	r2, r0
 549 002c 9200     		lsl	r2, r2, #2
 550 002e 0A43     		orr	r2, r1
 551 0030 1A60     		str	r2, [r3]
 487:.\Generated_Source\PSoC4/PWM_1.c ****                                                PWM_1_PWM_SYNC_KILL_SHIFT));
 488:.\Generated_Source\PSoC4/PWM_1.c **** 
 489:.\Generated_Source\PSoC4/PWM_1.c ****     CyExitCriticalSection(enableInterrupts);
 552              		.loc 1 489 0
 553 0032 3B1C     		mov	r3, r7
 554 0034 0F33     		add	r3, r3, #15
 555 0036 1B78     		ldrb	r3, [r3]
 556 0038 181C     		mov	r0, r3
 557 003a FFF7FEFF 		bl	CyExitCriticalSection
 490:.\Generated_Source\PSoC4/PWM_1.c **** }
 558              		.loc 1 490 0
 559 003e BD46     		mov	sp, r7
 560 0040 05B0     		add	sp, sp, #20
 561              		@ sp needed
 562 0042 90BD     		pop	{r4, r7, pc}
 563              	.L31:
 564              		.align	2
 565              	.L30:
 566 0044 40010540 		.word	1074069824
 567              		.cfi_endproc
 568              	.LFE9:
 569              		.size	PWM_1_SetPWMSyncKill, .-PWM_1_SetPWMSyncKill
 570              		.section	.text.PWM_1_SetPWMStopOnKill,"ax",%progbits
 571              		.align	2
 572              		.global	PWM_1_SetPWMStopOnKill
 573              		.code	16
 574              		.thumb_func
 575              		.type	PWM_1_SetPWMStopOnKill, %function
 576              	PWM_1_SetPWMStopOnKill:
 577              	.LFB10:
 491:.\Generated_Source\PSoC4/PWM_1.c **** 
 492:.\Generated_Source\PSoC4/PWM_1.c **** 
 493:.\Generated_Source\PSoC4/PWM_1.c **** /*******************************************************************************
 494:.\Generated_Source\PSoC4/PWM_1.c **** * Function Name: PWM_1_SetPWMStopOnKill
 495:.\Generated_Source\PSoC4/PWM_1.c **** ********************************************************************************
 496:.\Generated_Source\PSoC4/PWM_1.c **** *
 497:.\Generated_Source\PSoC4/PWM_1.c **** * Summary:
 498:.\Generated_Source\PSoC4/PWM_1.c **** *  Writes the register that controls whether the PWM kill signal (stop input)
 499:.\Generated_Source\PSoC4/PWM_1.c **** *  causes the PWM counter to stop.  By default the kill operation does not stop
 500:.\Generated_Source\PSoC4/PWM_1.c **** *  the counter.  This functionality is only applicable to the three PWM modes.
 501:.\Generated_Source\PSoC4/PWM_1.c **** *
 502:.\Generated_Source\PSoC4/PWM_1.c **** *
 503:.\Generated_Source\PSoC4/PWM_1.c **** * Parameters:
 504:.\Generated_Source\PSoC4/PWM_1.c **** *  stopOnKillEnable
 505:.\Generated_Source\PSoC4/PWM_1.c **** *   Values:
 506:.\Generated_Source\PSoC4/PWM_1.c **** *     - 0 - Don't stop
ARM GAS  C:\Users\TINYWI~1\AppData\Local\Temp\ccrliPYO.s 			page 20


 507:.\Generated_Source\PSoC4/PWM_1.c **** *     - 1 - Stop
 508:.\Generated_Source\PSoC4/PWM_1.c **** *
 509:.\Generated_Source\PSoC4/PWM_1.c **** * Return:
 510:.\Generated_Source\PSoC4/PWM_1.c **** *  None
 511:.\Generated_Source\PSoC4/PWM_1.c **** *
 512:.\Generated_Source\PSoC4/PWM_1.c **** *******************************************************************************/
 513:.\Generated_Source\PSoC4/PWM_1.c **** void PWM_1_SetPWMStopOnKill(uint32 stopOnKillEnable)
 514:.\Generated_Source\PSoC4/PWM_1.c **** {
 578              		.loc 1 514 0
 579              		.cfi_startproc
 580 0000 90B5     		push	{r4, r7, lr}
 581              		.cfi_def_cfa_offset 12
 582              		.cfi_offset 4, -12
 583              		.cfi_offset 7, -8
 584              		.cfi_offset 14, -4
 585 0002 85B0     		sub	sp, sp, #20
 586              		.cfi_def_cfa_offset 32
 587 0004 00AF     		add	r7, sp, #0
 588              		.cfi_def_cfa_register 7
 589 0006 7860     		str	r0, [r7, #4]
 515:.\Generated_Source\PSoC4/PWM_1.c ****     uint8 enableInterrupts;
 516:.\Generated_Source\PSoC4/PWM_1.c **** 
 517:.\Generated_Source\PSoC4/PWM_1.c ****     enableInterrupts = CyEnterCriticalSection();
 590              		.loc 1 517 0
 591 0008 3C1C     		mov	r4, r7
 592 000a 0F34     		add	r4, r4, #15
 593 000c FFF7FEFF 		bl	CyEnterCriticalSection
 594 0010 031C     		mov	r3, r0
 595 0012 2370     		strb	r3, [r4]
 518:.\Generated_Source\PSoC4/PWM_1.c **** 
 519:.\Generated_Source\PSoC4/PWM_1.c ****     PWM_1_CONTROL_REG &= (uint32)~PWM_1_PWM_STOP_KILL_MASK;
 596              		.loc 1 519 0
 597 0014 0B4B     		ldr	r3, .L33
 598 0016 0B4A     		ldr	r2, .L33
 599 0018 1268     		ldr	r2, [r2]
 600 001a 0821     		mov	r1, #8
 601 001c 8A43     		bic	r2, r1
 602 001e 1A60     		str	r2, [r3]
 520:.\Generated_Source\PSoC4/PWM_1.c ****     PWM_1_CONTROL_REG |= ((uint32)((stopOnKillEnable & PWM_1_1BIT_MASK)  <<
 603              		.loc 1 520 0
 604 0020 084B     		ldr	r3, .L33
 605 0022 084A     		ldr	r2, .L33
 606 0024 1168     		ldr	r1, [r2]
 607 0026 7868     		ldr	r0, [r7, #4]
 608 0028 0122     		mov	r2, #1
 609 002a 0240     		and	r2, r0
 610 002c D200     		lsl	r2, r2, #3
 611 002e 0A43     		orr	r2, r1
 612 0030 1A60     		str	r2, [r3]
 521:.\Generated_Source\PSoC4/PWM_1.c ****                                                          PWM_1_PWM_STOP_KILL_SHIFT));
 522:.\Generated_Source\PSoC4/PWM_1.c **** 
 523:.\Generated_Source\PSoC4/PWM_1.c ****     CyExitCriticalSection(enableInterrupts);
 613              		.loc 1 523 0
 614 0032 3B1C     		mov	r3, r7
 615 0034 0F33     		add	r3, r3, #15
 616 0036 1B78     		ldrb	r3, [r3]
 617 0038 181C     		mov	r0, r3
ARM GAS  C:\Users\TINYWI~1\AppData\Local\Temp\ccrliPYO.s 			page 21


 618 003a FFF7FEFF 		bl	CyExitCriticalSection
 524:.\Generated_Source\PSoC4/PWM_1.c **** }
 619              		.loc 1 524 0
 620 003e BD46     		mov	sp, r7
 621 0040 05B0     		add	sp, sp, #20
 622              		@ sp needed
 623 0042 90BD     		pop	{r4, r7, pc}
 624              	.L34:
 625              		.align	2
 626              	.L33:
 627 0044 40010540 		.word	1074069824
 628              		.cfi_endproc
 629              	.LFE10:
 630              		.size	PWM_1_SetPWMStopOnKill, .-PWM_1_SetPWMStopOnKill
 631              		.section	.text.PWM_1_SetPWMDeadTime,"ax",%progbits
 632              		.align	2
 633              		.global	PWM_1_SetPWMDeadTime
 634              		.code	16
 635              		.thumb_func
 636              		.type	PWM_1_SetPWMDeadTime, %function
 637              	PWM_1_SetPWMDeadTime:
 638              	.LFB11:
 525:.\Generated_Source\PSoC4/PWM_1.c **** 
 526:.\Generated_Source\PSoC4/PWM_1.c **** 
 527:.\Generated_Source\PSoC4/PWM_1.c **** /*******************************************************************************
 528:.\Generated_Source\PSoC4/PWM_1.c **** * Function Name: PWM_1_SetPWMDeadTime
 529:.\Generated_Source\PSoC4/PWM_1.c **** ********************************************************************************
 530:.\Generated_Source\PSoC4/PWM_1.c **** *
 531:.\Generated_Source\PSoC4/PWM_1.c **** * Summary:
 532:.\Generated_Source\PSoC4/PWM_1.c **** *  Writes the dead time control value.  This value delays the rising edge of
 533:.\Generated_Source\PSoC4/PWM_1.c **** *  both the line and line_n signals the designated number of cycles resulting
 534:.\Generated_Source\PSoC4/PWM_1.c **** *  in both signals being inactive for that many cycles.  This functionality is
 535:.\Generated_Source\PSoC4/PWM_1.c **** *  only applicable to the PWM in the dead time mode.
 536:.\Generated_Source\PSoC4/PWM_1.c **** 
 537:.\Generated_Source\PSoC4/PWM_1.c **** *
 538:.\Generated_Source\PSoC4/PWM_1.c **** * Parameters:
 539:.\Generated_Source\PSoC4/PWM_1.c **** *  Dead time to insert
 540:.\Generated_Source\PSoC4/PWM_1.c **** *   Values: 0 to 255
 541:.\Generated_Source\PSoC4/PWM_1.c **** *
 542:.\Generated_Source\PSoC4/PWM_1.c **** * Return:
 543:.\Generated_Source\PSoC4/PWM_1.c **** *  None
 544:.\Generated_Source\PSoC4/PWM_1.c **** *
 545:.\Generated_Source\PSoC4/PWM_1.c **** *******************************************************************************/
 546:.\Generated_Source\PSoC4/PWM_1.c **** void PWM_1_SetPWMDeadTime(uint32 deadTime)
 547:.\Generated_Source\PSoC4/PWM_1.c **** {
 639              		.loc 1 547 0
 640              		.cfi_startproc
 641 0000 90B5     		push	{r4, r7, lr}
 642              		.cfi_def_cfa_offset 12
 643              		.cfi_offset 4, -12
 644              		.cfi_offset 7, -8
 645              		.cfi_offset 14, -4
 646 0002 85B0     		sub	sp, sp, #20
 647              		.cfi_def_cfa_offset 32
 648 0004 00AF     		add	r7, sp, #0
 649              		.cfi_def_cfa_register 7
 650 0006 7860     		str	r0, [r7, #4]
ARM GAS  C:\Users\TINYWI~1\AppData\Local\Temp\ccrliPYO.s 			page 22


 548:.\Generated_Source\PSoC4/PWM_1.c ****     uint8 enableInterrupts;
 549:.\Generated_Source\PSoC4/PWM_1.c **** 
 550:.\Generated_Source\PSoC4/PWM_1.c ****     enableInterrupts = CyEnterCriticalSection();
 651              		.loc 1 550 0
 652 0008 3C1C     		mov	r4, r7
 653 000a 0F34     		add	r4, r4, #15
 654 000c FFF7FEFF 		bl	CyEnterCriticalSection
 655 0010 031C     		mov	r3, r0
 656 0012 2370     		strb	r3, [r4]
 551:.\Generated_Source\PSoC4/PWM_1.c **** 
 552:.\Generated_Source\PSoC4/PWM_1.c ****     PWM_1_CONTROL_REG &= (uint32)~PWM_1_PRESCALER_MASK;
 657              		.loc 1 552 0
 658 0014 0B4B     		ldr	r3, .L36
 659 0016 0B4A     		ldr	r2, .L36
 660 0018 1168     		ldr	r1, [r2]
 661 001a 0B4A     		ldr	r2, .L36+4
 662 001c 0A40     		and	r2, r1
 663 001e 1A60     		str	r2, [r3]
 553:.\Generated_Source\PSoC4/PWM_1.c ****     PWM_1_CONTROL_REG |= ((uint32)((deadTime & PWM_1_8BIT_MASK) <<
 664              		.loc 1 553 0
 665 0020 084B     		ldr	r3, .L36
 666 0022 084A     		ldr	r2, .L36
 667 0024 1168     		ldr	r1, [r2]
 668 0026 7A68     		ldr	r2, [r7, #4]
 669 0028 1202     		lsl	r2, r2, #8
 670 002a 1204     		lsl	r2, r2, #16
 671 002c 120C     		lsr	r2, r2, #16
 672 002e 0A43     		orr	r2, r1
 673 0030 1A60     		str	r2, [r3]
 554:.\Generated_Source\PSoC4/PWM_1.c ****                                                           PWM_1_PRESCALER_SHIFT));
 555:.\Generated_Source\PSoC4/PWM_1.c **** 
 556:.\Generated_Source\PSoC4/PWM_1.c ****     CyExitCriticalSection(enableInterrupts);
 674              		.loc 1 556 0
 675 0032 3B1C     		mov	r3, r7
 676 0034 0F33     		add	r3, r3, #15
 677 0036 1B78     		ldrb	r3, [r3]
 678 0038 181C     		mov	r0, r3
 679 003a FFF7FEFF 		bl	CyExitCriticalSection
 557:.\Generated_Source\PSoC4/PWM_1.c **** }
 680              		.loc 1 557 0
 681 003e BD46     		mov	sp, r7
 682 0040 05B0     		add	sp, sp, #20
 683              		@ sp needed
 684 0042 90BD     		pop	{r4, r7, pc}
 685              	.L37:
 686              		.align	2
 687              	.L36:
 688 0044 40010540 		.word	1074069824
 689 0048 FF00FFFF 		.word	-65281
 690              		.cfi_endproc
 691              	.LFE11:
 692              		.size	PWM_1_SetPWMDeadTime, .-PWM_1_SetPWMDeadTime
 693              		.section	.text.PWM_1_SetPWMInvert,"ax",%progbits
 694              		.align	2
 695              		.global	PWM_1_SetPWMInvert
 696              		.code	16
 697              		.thumb_func
ARM GAS  C:\Users\TINYWI~1\AppData\Local\Temp\ccrliPYO.s 			page 23


 698              		.type	PWM_1_SetPWMInvert, %function
 699              	PWM_1_SetPWMInvert:
 700              	.LFB12:
 558:.\Generated_Source\PSoC4/PWM_1.c **** 
 559:.\Generated_Source\PSoC4/PWM_1.c **** 
 560:.\Generated_Source\PSoC4/PWM_1.c **** /*******************************************************************************
 561:.\Generated_Source\PSoC4/PWM_1.c **** * Function Name: PWM_1_SetPWMInvert
 562:.\Generated_Source\PSoC4/PWM_1.c **** ********************************************************************************
 563:.\Generated_Source\PSoC4/PWM_1.c **** *
 564:.\Generated_Source\PSoC4/PWM_1.c **** * Summary:
 565:.\Generated_Source\PSoC4/PWM_1.c **** *  Writes the bits that control whether the line and line_n outputs are
 566:.\Generated_Source\PSoC4/PWM_1.c **** *  inverted from their normal output values.  This functionality is only
 567:.\Generated_Source\PSoC4/PWM_1.c **** *  applicable to the three PWM modes.
 568:.\Generated_Source\PSoC4/PWM_1.c **** *
 569:.\Generated_Source\PSoC4/PWM_1.c **** * Parameters:
 570:.\Generated_Source\PSoC4/PWM_1.c **** *  mask: Mask of outputs to invert.
 571:.\Generated_Source\PSoC4/PWM_1.c **** *   Values:
 572:.\Generated_Source\PSoC4/PWM_1.c **** *         - PWM_1_INVERT_LINE   - Inverts the line output
 573:.\Generated_Source\PSoC4/PWM_1.c **** *         - PWM_1_INVERT_LINE_N - Inverts the line_n output
 574:.\Generated_Source\PSoC4/PWM_1.c **** *
 575:.\Generated_Source\PSoC4/PWM_1.c **** * Return:
 576:.\Generated_Source\PSoC4/PWM_1.c **** *  None
 577:.\Generated_Source\PSoC4/PWM_1.c **** *
 578:.\Generated_Source\PSoC4/PWM_1.c **** *******************************************************************************/
 579:.\Generated_Source\PSoC4/PWM_1.c **** void PWM_1_SetPWMInvert(uint32 mask)
 580:.\Generated_Source\PSoC4/PWM_1.c **** {
 701              		.loc 1 580 0
 702              		.cfi_startproc
 703 0000 90B5     		push	{r4, r7, lr}
 704              		.cfi_def_cfa_offset 12
 705              		.cfi_offset 4, -12
 706              		.cfi_offset 7, -8
 707              		.cfi_offset 14, -4
 708 0002 85B0     		sub	sp, sp, #20
 709              		.cfi_def_cfa_offset 32
 710 0004 00AF     		add	r7, sp, #0
 711              		.cfi_def_cfa_register 7
 712 0006 7860     		str	r0, [r7, #4]
 581:.\Generated_Source\PSoC4/PWM_1.c ****     uint8 enableInterrupts;
 582:.\Generated_Source\PSoC4/PWM_1.c **** 
 583:.\Generated_Source\PSoC4/PWM_1.c ****     enableInterrupts = CyEnterCriticalSection();
 713              		.loc 1 583 0
 714 0008 3C1C     		mov	r4, r7
 715 000a 0F34     		add	r4, r4, #15
 716 000c FFF7FEFF 		bl	CyEnterCriticalSection
 717 0010 031C     		mov	r3, r0
 718 0012 2370     		strb	r3, [r4]
 584:.\Generated_Source\PSoC4/PWM_1.c **** 
 585:.\Generated_Source\PSoC4/PWM_1.c ****     PWM_1_CONTROL_REG &= (uint32)~PWM_1_INV_OUT_MASK;
 719              		.loc 1 585 0
 720 0014 0A4B     		ldr	r3, .L39
 721 0016 0A4A     		ldr	r2, .L39
 722 0018 1168     		ldr	r1, [r2]
 723 001a 0A4A     		ldr	r2, .L39+4
 724 001c 0A40     		and	r2, r1
 725 001e 1A60     		str	r2, [r3]
 586:.\Generated_Source\PSoC4/PWM_1.c ****     PWM_1_CONTROL_REG |= mask;
ARM GAS  C:\Users\TINYWI~1\AppData\Local\Temp\ccrliPYO.s 			page 24


 726              		.loc 1 586 0
 727 0020 074B     		ldr	r3, .L39
 728 0022 074A     		ldr	r2, .L39
 729 0024 1168     		ldr	r1, [r2]
 730 0026 7A68     		ldr	r2, [r7, #4]
 731 0028 0A43     		orr	r2, r1
 732 002a 1A60     		str	r2, [r3]
 587:.\Generated_Source\PSoC4/PWM_1.c **** 
 588:.\Generated_Source\PSoC4/PWM_1.c ****     CyExitCriticalSection(enableInterrupts);
 733              		.loc 1 588 0
 734 002c 3B1C     		mov	r3, r7
 735 002e 0F33     		add	r3, r3, #15
 736 0030 1B78     		ldrb	r3, [r3]
 737 0032 181C     		mov	r0, r3
 738 0034 FFF7FEFF 		bl	CyExitCriticalSection
 589:.\Generated_Source\PSoC4/PWM_1.c **** }
 739              		.loc 1 589 0
 740 0038 BD46     		mov	sp, r7
 741 003a 05B0     		add	sp, sp, #20
 742              		@ sp needed
 743 003c 90BD     		pop	{r4, r7, pc}
 744              	.L40:
 745 003e C046     		.align	2
 746              	.L39:
 747 0040 40010540 		.word	1074069824
 748 0044 FFFFCFFF 		.word	-3145729
 749              		.cfi_endproc
 750              	.LFE12:
 751              		.size	PWM_1_SetPWMInvert, .-PWM_1_SetPWMInvert
 752              		.section	.text.PWM_1_WriteCounter,"ax",%progbits
 753              		.align	2
 754              		.global	PWM_1_WriteCounter
 755              		.code	16
 756              		.thumb_func
 757              		.type	PWM_1_WriteCounter, %function
 758              	PWM_1_WriteCounter:
 759              	.LFB13:
 590:.\Generated_Source\PSoC4/PWM_1.c **** 
 591:.\Generated_Source\PSoC4/PWM_1.c **** 
 592:.\Generated_Source\PSoC4/PWM_1.c **** 
 593:.\Generated_Source\PSoC4/PWM_1.c **** /*******************************************************************************
 594:.\Generated_Source\PSoC4/PWM_1.c **** * Function Name: PWM_1_WriteCounter
 595:.\Generated_Source\PSoC4/PWM_1.c **** ********************************************************************************
 596:.\Generated_Source\PSoC4/PWM_1.c **** *
 597:.\Generated_Source\PSoC4/PWM_1.c **** * Summary:
 598:.\Generated_Source\PSoC4/PWM_1.c **** *  Writes a new 16bit counter value directly into the counter register, thus
 599:.\Generated_Source\PSoC4/PWM_1.c **** *  setting the counter (not the period) to the value written. It is not
 600:.\Generated_Source\PSoC4/PWM_1.c **** *  advised to write to this field when the counter is running.
 601:.\Generated_Source\PSoC4/PWM_1.c **** *
 602:.\Generated_Source\PSoC4/PWM_1.c **** * Parameters:
 603:.\Generated_Source\PSoC4/PWM_1.c **** *  count: value to write
 604:.\Generated_Source\PSoC4/PWM_1.c **** *
 605:.\Generated_Source\PSoC4/PWM_1.c **** * Return:
 606:.\Generated_Source\PSoC4/PWM_1.c **** *  None
 607:.\Generated_Source\PSoC4/PWM_1.c **** *
 608:.\Generated_Source\PSoC4/PWM_1.c **** *******************************************************************************/
 609:.\Generated_Source\PSoC4/PWM_1.c **** void PWM_1_WriteCounter(uint32 count)
ARM GAS  C:\Users\TINYWI~1\AppData\Local\Temp\ccrliPYO.s 			page 25


 610:.\Generated_Source\PSoC4/PWM_1.c **** {
 760              		.loc 1 610 0
 761              		.cfi_startproc
 762 0000 80B5     		push	{r7, lr}
 763              		.cfi_def_cfa_offset 8
 764              		.cfi_offset 7, -8
 765              		.cfi_offset 14, -4
 766 0002 82B0     		sub	sp, sp, #8
 767              		.cfi_def_cfa_offset 16
 768 0004 00AF     		add	r7, sp, #0
 769              		.cfi_def_cfa_register 7
 770 0006 7860     		str	r0, [r7, #4]
 611:.\Generated_Source\PSoC4/PWM_1.c ****     PWM_1_COUNTER_REG = (count & PWM_1_16BIT_MASK);
 771              		.loc 1 611 0
 772 0008 034B     		ldr	r3, .L42
 773 000a 7A68     		ldr	r2, [r7, #4]
 774 000c 1204     		lsl	r2, r2, #16
 775 000e 120C     		lsr	r2, r2, #16
 776 0010 1A60     		str	r2, [r3]
 612:.\Generated_Source\PSoC4/PWM_1.c **** }
 777              		.loc 1 612 0
 778 0012 BD46     		mov	sp, r7
 779 0014 02B0     		add	sp, sp, #8
 780              		@ sp needed
 781 0016 80BD     		pop	{r7, pc}
 782              	.L43:
 783              		.align	2
 784              	.L42:
 785 0018 48010540 		.word	1074069832
 786              		.cfi_endproc
 787              	.LFE13:
 788              		.size	PWM_1_WriteCounter, .-PWM_1_WriteCounter
 789              		.section	.text.PWM_1_ReadCounter,"ax",%progbits
 790              		.align	2
 791              		.global	PWM_1_ReadCounter
 792              		.code	16
 793              		.thumb_func
 794              		.type	PWM_1_ReadCounter, %function
 795              	PWM_1_ReadCounter:
 796              	.LFB14:
 613:.\Generated_Source\PSoC4/PWM_1.c **** 
 614:.\Generated_Source\PSoC4/PWM_1.c **** 
 615:.\Generated_Source\PSoC4/PWM_1.c **** /*******************************************************************************
 616:.\Generated_Source\PSoC4/PWM_1.c **** * Function Name: PWM_1_ReadCounter
 617:.\Generated_Source\PSoC4/PWM_1.c **** ********************************************************************************
 618:.\Generated_Source\PSoC4/PWM_1.c **** *
 619:.\Generated_Source\PSoC4/PWM_1.c **** * Summary:
 620:.\Generated_Source\PSoC4/PWM_1.c **** *  Reads the current counter value.
 621:.\Generated_Source\PSoC4/PWM_1.c **** *
 622:.\Generated_Source\PSoC4/PWM_1.c **** * Parameters:
 623:.\Generated_Source\PSoC4/PWM_1.c **** *  None
 624:.\Generated_Source\PSoC4/PWM_1.c **** *
 625:.\Generated_Source\PSoC4/PWM_1.c **** * Return:
 626:.\Generated_Source\PSoC4/PWM_1.c **** *  Current counter value
 627:.\Generated_Source\PSoC4/PWM_1.c **** *
 628:.\Generated_Source\PSoC4/PWM_1.c **** *******************************************************************************/
 629:.\Generated_Source\PSoC4/PWM_1.c **** uint32 PWM_1_ReadCounter(void)
ARM GAS  C:\Users\TINYWI~1\AppData\Local\Temp\ccrliPYO.s 			page 26


 630:.\Generated_Source\PSoC4/PWM_1.c **** {
 797              		.loc 1 630 0
 798              		.cfi_startproc
 799 0000 80B5     		push	{r7, lr}
 800              		.cfi_def_cfa_offset 8
 801              		.cfi_offset 7, -8
 802              		.cfi_offset 14, -4
 803 0002 00AF     		add	r7, sp, #0
 804              		.cfi_def_cfa_register 7
 631:.\Generated_Source\PSoC4/PWM_1.c ****     return (PWM_1_COUNTER_REG & PWM_1_16BIT_MASK);
 805              		.loc 1 631 0
 806 0004 034B     		ldr	r3, .L46
 807 0006 1B68     		ldr	r3, [r3]
 808 0008 1B04     		lsl	r3, r3, #16
 809 000a 1B0C     		lsr	r3, r3, #16
 632:.\Generated_Source\PSoC4/PWM_1.c **** }
 810              		.loc 1 632 0
 811 000c 181C     		mov	r0, r3
 812 000e BD46     		mov	sp, r7
 813              		@ sp needed
 814 0010 80BD     		pop	{r7, pc}
 815              	.L47:
 816 0012 C046     		.align	2
 817              	.L46:
 818 0014 48010540 		.word	1074069832
 819              		.cfi_endproc
 820              	.LFE14:
 821              		.size	PWM_1_ReadCounter, .-PWM_1_ReadCounter
 822              		.section	.text.PWM_1_SetCounterMode,"ax",%progbits
 823              		.align	2
 824              		.global	PWM_1_SetCounterMode
 825              		.code	16
 826              		.thumb_func
 827              		.type	PWM_1_SetCounterMode, %function
 828              	PWM_1_SetCounterMode:
 829              	.LFB15:
 633:.\Generated_Source\PSoC4/PWM_1.c **** 
 634:.\Generated_Source\PSoC4/PWM_1.c **** 
 635:.\Generated_Source\PSoC4/PWM_1.c **** /*******************************************************************************
 636:.\Generated_Source\PSoC4/PWM_1.c **** * Function Name: PWM_1_SetCounterMode
 637:.\Generated_Source\PSoC4/PWM_1.c **** ********************************************************************************
 638:.\Generated_Source\PSoC4/PWM_1.c **** *
 639:.\Generated_Source\PSoC4/PWM_1.c **** * Summary:
 640:.\Generated_Source\PSoC4/PWM_1.c **** *  Sets the counter mode.  Applicable to all modes except Quadrature Decoder
 641:.\Generated_Source\PSoC4/PWM_1.c **** *  and the PWM with a pseudo random output.
 642:.\Generated_Source\PSoC4/PWM_1.c **** *
 643:.\Generated_Source\PSoC4/PWM_1.c **** * Parameters:
 644:.\Generated_Source\PSoC4/PWM_1.c **** *  counterMode: Enumerated counter type values
 645:.\Generated_Source\PSoC4/PWM_1.c **** *   Values:
 646:.\Generated_Source\PSoC4/PWM_1.c **** *     - PWM_1_COUNT_UP       - Counts up
 647:.\Generated_Source\PSoC4/PWM_1.c **** *     - PWM_1_COUNT_DOWN     - Counts down
 648:.\Generated_Source\PSoC4/PWM_1.c **** *     - PWM_1_COUNT_UPDOWN0  - Counts up and down. Terminal count
 649:.\Generated_Source\PSoC4/PWM_1.c **** *                                         generated when counter reaches 0
 650:.\Generated_Source\PSoC4/PWM_1.c **** *     - PWM_1_COUNT_UPDOWN1  - Counts up and down. Terminal count
 651:.\Generated_Source\PSoC4/PWM_1.c **** *                                         generated both when counter reaches 0
 652:.\Generated_Source\PSoC4/PWM_1.c **** *                                         and period
 653:.\Generated_Source\PSoC4/PWM_1.c **** *
ARM GAS  C:\Users\TINYWI~1\AppData\Local\Temp\ccrliPYO.s 			page 27


 654:.\Generated_Source\PSoC4/PWM_1.c **** * Return:
 655:.\Generated_Source\PSoC4/PWM_1.c **** *  None
 656:.\Generated_Source\PSoC4/PWM_1.c **** *
 657:.\Generated_Source\PSoC4/PWM_1.c **** *******************************************************************************/
 658:.\Generated_Source\PSoC4/PWM_1.c **** void PWM_1_SetCounterMode(uint32 counterMode)
 659:.\Generated_Source\PSoC4/PWM_1.c **** {
 830              		.loc 1 659 0
 831              		.cfi_startproc
 832 0000 90B5     		push	{r4, r7, lr}
 833              		.cfi_def_cfa_offset 12
 834              		.cfi_offset 4, -12
 835              		.cfi_offset 7, -8
 836              		.cfi_offset 14, -4
 837 0002 85B0     		sub	sp, sp, #20
 838              		.cfi_def_cfa_offset 32
 839 0004 00AF     		add	r7, sp, #0
 840              		.cfi_def_cfa_register 7
 841 0006 7860     		str	r0, [r7, #4]
 660:.\Generated_Source\PSoC4/PWM_1.c ****     uint8 enableInterrupts;
 661:.\Generated_Source\PSoC4/PWM_1.c **** 
 662:.\Generated_Source\PSoC4/PWM_1.c ****     enableInterrupts = CyEnterCriticalSection();
 842              		.loc 1 662 0
 843 0008 3C1C     		mov	r4, r7
 844 000a 0F34     		add	r4, r4, #15
 845 000c FFF7FEFF 		bl	CyEnterCriticalSection
 846 0010 031C     		mov	r3, r0
 847 0012 2370     		strb	r3, [r4]
 663:.\Generated_Source\PSoC4/PWM_1.c **** 
 664:.\Generated_Source\PSoC4/PWM_1.c ****     PWM_1_CONTROL_REG &= (uint32)~PWM_1_UPDOWN_MASK;
 848              		.loc 1 664 0
 849 0014 0A4B     		ldr	r3, .L49
 850 0016 0A4A     		ldr	r2, .L49
 851 0018 1168     		ldr	r1, [r2]
 852 001a 0A4A     		ldr	r2, .L49+4
 853 001c 0A40     		and	r2, r1
 854 001e 1A60     		str	r2, [r3]
 665:.\Generated_Source\PSoC4/PWM_1.c ****     PWM_1_CONTROL_REG |= counterMode;
 855              		.loc 1 665 0
 856 0020 074B     		ldr	r3, .L49
 857 0022 074A     		ldr	r2, .L49
 858 0024 1168     		ldr	r1, [r2]
 859 0026 7A68     		ldr	r2, [r7, #4]
 860 0028 0A43     		orr	r2, r1
 861 002a 1A60     		str	r2, [r3]
 666:.\Generated_Source\PSoC4/PWM_1.c **** 
 667:.\Generated_Source\PSoC4/PWM_1.c ****     CyExitCriticalSection(enableInterrupts);
 862              		.loc 1 667 0
 863 002c 3B1C     		mov	r3, r7
 864 002e 0F33     		add	r3, r3, #15
 865 0030 1B78     		ldrb	r3, [r3]
 866 0032 181C     		mov	r0, r3
 867 0034 FFF7FEFF 		bl	CyExitCriticalSection
 668:.\Generated_Source\PSoC4/PWM_1.c **** }
 868              		.loc 1 668 0
 869 0038 BD46     		mov	sp, r7
 870 003a 05B0     		add	sp, sp, #20
 871              		@ sp needed
ARM GAS  C:\Users\TINYWI~1\AppData\Local\Temp\ccrliPYO.s 			page 28


 872 003c 90BD     		pop	{r4, r7, pc}
 873              	.L50:
 874 003e C046     		.align	2
 875              	.L49:
 876 0040 40010540 		.word	1074069824
 877 0044 FFFFFCFF 		.word	-196609
 878              		.cfi_endproc
 879              	.LFE15:
 880              		.size	PWM_1_SetCounterMode, .-PWM_1_SetCounterMode
 881              		.section	.text.PWM_1_WritePeriod,"ax",%progbits
 882              		.align	2
 883              		.global	PWM_1_WritePeriod
 884              		.code	16
 885              		.thumb_func
 886              		.type	PWM_1_WritePeriod, %function
 887              	PWM_1_WritePeriod:
 888              	.LFB16:
 669:.\Generated_Source\PSoC4/PWM_1.c **** 
 670:.\Generated_Source\PSoC4/PWM_1.c **** 
 671:.\Generated_Source\PSoC4/PWM_1.c **** /*******************************************************************************
 672:.\Generated_Source\PSoC4/PWM_1.c **** * Function Name: PWM_1_WritePeriod
 673:.\Generated_Source\PSoC4/PWM_1.c **** ********************************************************************************
 674:.\Generated_Source\PSoC4/PWM_1.c **** *
 675:.\Generated_Source\PSoC4/PWM_1.c **** * Summary:
 676:.\Generated_Source\PSoC4/PWM_1.c **** *  Writes the 16 bit period register with the new period value.
 677:.\Generated_Source\PSoC4/PWM_1.c **** *  To cause the counter to count for N cycles this register should be written
 678:.\Generated_Source\PSoC4/PWM_1.c **** *  with N-1 (counts from 0 to period inclusive).
 679:.\Generated_Source\PSoC4/PWM_1.c **** *
 680:.\Generated_Source\PSoC4/PWM_1.c **** * Parameters:
 681:.\Generated_Source\PSoC4/PWM_1.c **** *  period: Period value
 682:.\Generated_Source\PSoC4/PWM_1.c **** *
 683:.\Generated_Source\PSoC4/PWM_1.c **** * Return:
 684:.\Generated_Source\PSoC4/PWM_1.c **** *  None
 685:.\Generated_Source\PSoC4/PWM_1.c **** *
 686:.\Generated_Source\PSoC4/PWM_1.c **** *******************************************************************************/
 687:.\Generated_Source\PSoC4/PWM_1.c **** void PWM_1_WritePeriod(uint32 period)
 688:.\Generated_Source\PSoC4/PWM_1.c **** {
 889              		.loc 1 688 0
 890              		.cfi_startproc
 891 0000 80B5     		push	{r7, lr}
 892              		.cfi_def_cfa_offset 8
 893              		.cfi_offset 7, -8
 894              		.cfi_offset 14, -4
 895 0002 82B0     		sub	sp, sp, #8
 896              		.cfi_def_cfa_offset 16
 897 0004 00AF     		add	r7, sp, #0
 898              		.cfi_def_cfa_register 7
 899 0006 7860     		str	r0, [r7, #4]
 689:.\Generated_Source\PSoC4/PWM_1.c ****     PWM_1_PERIOD_REG = (period & PWM_1_16BIT_MASK);
 900              		.loc 1 689 0
 901 0008 034B     		ldr	r3, .L52
 902 000a 7A68     		ldr	r2, [r7, #4]
 903 000c 1204     		lsl	r2, r2, #16
 904 000e 120C     		lsr	r2, r2, #16
 905 0010 1A60     		str	r2, [r3]
 690:.\Generated_Source\PSoC4/PWM_1.c **** }
 906              		.loc 1 690 0
ARM GAS  C:\Users\TINYWI~1\AppData\Local\Temp\ccrliPYO.s 			page 29


 907 0012 BD46     		mov	sp, r7
 908 0014 02B0     		add	sp, sp, #8
 909              		@ sp needed
 910 0016 80BD     		pop	{r7, pc}
 911              	.L53:
 912              		.align	2
 913              	.L52:
 914 0018 54010540 		.word	1074069844
 915              		.cfi_endproc
 916              	.LFE16:
 917              		.size	PWM_1_WritePeriod, .-PWM_1_WritePeriod
 918              		.section	.text.PWM_1_ReadPeriod,"ax",%progbits
 919              		.align	2
 920              		.global	PWM_1_ReadPeriod
 921              		.code	16
 922              		.thumb_func
 923              		.type	PWM_1_ReadPeriod, %function
 924              	PWM_1_ReadPeriod:
 925              	.LFB17:
 691:.\Generated_Source\PSoC4/PWM_1.c **** 
 692:.\Generated_Source\PSoC4/PWM_1.c **** 
 693:.\Generated_Source\PSoC4/PWM_1.c **** /*******************************************************************************
 694:.\Generated_Source\PSoC4/PWM_1.c **** * Function Name: PWM_1_ReadPeriod
 695:.\Generated_Source\PSoC4/PWM_1.c **** ********************************************************************************
 696:.\Generated_Source\PSoC4/PWM_1.c **** *
 697:.\Generated_Source\PSoC4/PWM_1.c **** * Summary:
 698:.\Generated_Source\PSoC4/PWM_1.c **** *  Reads the 16 bit period register.
 699:.\Generated_Source\PSoC4/PWM_1.c **** *
 700:.\Generated_Source\PSoC4/PWM_1.c **** * Parameters:
 701:.\Generated_Source\PSoC4/PWM_1.c **** *  None
 702:.\Generated_Source\PSoC4/PWM_1.c **** *
 703:.\Generated_Source\PSoC4/PWM_1.c **** * Return:
 704:.\Generated_Source\PSoC4/PWM_1.c **** *  Period value
 705:.\Generated_Source\PSoC4/PWM_1.c **** *
 706:.\Generated_Source\PSoC4/PWM_1.c **** *******************************************************************************/
 707:.\Generated_Source\PSoC4/PWM_1.c **** uint32 PWM_1_ReadPeriod(void)
 708:.\Generated_Source\PSoC4/PWM_1.c **** {
 926              		.loc 1 708 0
 927              		.cfi_startproc
 928 0000 80B5     		push	{r7, lr}
 929              		.cfi_def_cfa_offset 8
 930              		.cfi_offset 7, -8
 931              		.cfi_offset 14, -4
 932 0002 00AF     		add	r7, sp, #0
 933              		.cfi_def_cfa_register 7
 709:.\Generated_Source\PSoC4/PWM_1.c ****     return (PWM_1_PERIOD_REG & PWM_1_16BIT_MASK);
 934              		.loc 1 709 0
 935 0004 034B     		ldr	r3, .L56
 936 0006 1B68     		ldr	r3, [r3]
 937 0008 1B04     		lsl	r3, r3, #16
 938 000a 1B0C     		lsr	r3, r3, #16
 710:.\Generated_Source\PSoC4/PWM_1.c **** }
 939              		.loc 1 710 0
 940 000c 181C     		mov	r0, r3
 941 000e BD46     		mov	sp, r7
 942              		@ sp needed
 943 0010 80BD     		pop	{r7, pc}
ARM GAS  C:\Users\TINYWI~1\AppData\Local\Temp\ccrliPYO.s 			page 30


 944              	.L57:
 945 0012 C046     		.align	2
 946              	.L56:
 947 0014 54010540 		.word	1074069844
 948              		.cfi_endproc
 949              	.LFE17:
 950              		.size	PWM_1_ReadPeriod, .-PWM_1_ReadPeriod
 951              		.section	.text.PWM_1_SetCompareSwap,"ax",%progbits
 952              		.align	2
 953              		.global	PWM_1_SetCompareSwap
 954              		.code	16
 955              		.thumb_func
 956              		.type	PWM_1_SetCompareSwap, %function
 957              	PWM_1_SetCompareSwap:
 958              	.LFB18:
 711:.\Generated_Source\PSoC4/PWM_1.c **** 
 712:.\Generated_Source\PSoC4/PWM_1.c **** 
 713:.\Generated_Source\PSoC4/PWM_1.c **** /*******************************************************************************
 714:.\Generated_Source\PSoC4/PWM_1.c **** * Function Name: PWM_1_SetCompareSwap
 715:.\Generated_Source\PSoC4/PWM_1.c **** ********************************************************************************
 716:.\Generated_Source\PSoC4/PWM_1.c **** *
 717:.\Generated_Source\PSoC4/PWM_1.c **** * Summary:
 718:.\Generated_Source\PSoC4/PWM_1.c **** *  Writes the register that controls whether the compare registers are
 719:.\Generated_Source\PSoC4/PWM_1.c **** *  swapped. When enabled in the Timer/Counter mode(without capture) the swap
 720:.\Generated_Source\PSoC4/PWM_1.c **** *  occurs at a TC event. In the PWM mode the swap occurs at the next TC event
 721:.\Generated_Source\PSoC4/PWM_1.c **** *  following a hardware switch event.
 722:.\Generated_Source\PSoC4/PWM_1.c **** *
 723:.\Generated_Source\PSoC4/PWM_1.c **** * Parameters:
 724:.\Generated_Source\PSoC4/PWM_1.c **** *  swapEnable
 725:.\Generated_Source\PSoC4/PWM_1.c **** *   Values:
 726:.\Generated_Source\PSoC4/PWM_1.c **** *     - 0 - Disable swap
 727:.\Generated_Source\PSoC4/PWM_1.c **** *     - 1 - Enable swap
 728:.\Generated_Source\PSoC4/PWM_1.c **** *
 729:.\Generated_Source\PSoC4/PWM_1.c **** * Return:
 730:.\Generated_Source\PSoC4/PWM_1.c **** *  None
 731:.\Generated_Source\PSoC4/PWM_1.c **** *
 732:.\Generated_Source\PSoC4/PWM_1.c **** *******************************************************************************/
 733:.\Generated_Source\PSoC4/PWM_1.c **** void PWM_1_SetCompareSwap(uint32 swapEnable)
 734:.\Generated_Source\PSoC4/PWM_1.c **** {
 959              		.loc 1 734 0
 960              		.cfi_startproc
 961 0000 90B5     		push	{r4, r7, lr}
 962              		.cfi_def_cfa_offset 12
 963              		.cfi_offset 4, -12
 964              		.cfi_offset 7, -8
 965              		.cfi_offset 14, -4
 966 0002 85B0     		sub	sp, sp, #20
 967              		.cfi_def_cfa_offset 32
 968 0004 00AF     		add	r7, sp, #0
 969              		.cfi_def_cfa_register 7
 970 0006 7860     		str	r0, [r7, #4]
 735:.\Generated_Source\PSoC4/PWM_1.c ****     uint8 enableInterrupts;
 736:.\Generated_Source\PSoC4/PWM_1.c **** 
 737:.\Generated_Source\PSoC4/PWM_1.c ****     enableInterrupts = CyEnterCriticalSection();
 971              		.loc 1 737 0
 972 0008 3C1C     		mov	r4, r7
 973 000a 0F34     		add	r4, r4, #15
ARM GAS  C:\Users\TINYWI~1\AppData\Local\Temp\ccrliPYO.s 			page 31


 974 000c FFF7FEFF 		bl	CyEnterCriticalSection
 975 0010 031C     		mov	r3, r0
 976 0012 2370     		strb	r3, [r4]
 738:.\Generated_Source\PSoC4/PWM_1.c **** 
 739:.\Generated_Source\PSoC4/PWM_1.c ****     PWM_1_CONTROL_REG &= (uint32)~PWM_1_RELOAD_CC_MASK;
 977              		.loc 1 739 0
 978 0014 0B4B     		ldr	r3, .L59
 979 0016 0B4A     		ldr	r2, .L59
 980 0018 1268     		ldr	r2, [r2]
 981 001a 0121     		mov	r1, #1
 982 001c 8A43     		bic	r2, r1
 983 001e 1A60     		str	r2, [r3]
 740:.\Generated_Source\PSoC4/PWM_1.c ****     PWM_1_CONTROL_REG |= (swapEnable & PWM_1_1BIT_MASK);
 984              		.loc 1 740 0
 985 0020 084B     		ldr	r3, .L59
 986 0022 084A     		ldr	r2, .L59
 987 0024 1168     		ldr	r1, [r2]
 988 0026 7868     		ldr	r0, [r7, #4]
 989 0028 0122     		mov	r2, #1
 990 002a 0240     		and	r2, r0
 991 002c 0A43     		orr	r2, r1
 992 002e 1A60     		str	r2, [r3]
 741:.\Generated_Source\PSoC4/PWM_1.c **** 
 742:.\Generated_Source\PSoC4/PWM_1.c ****     CyExitCriticalSection(enableInterrupts);
 993              		.loc 1 742 0
 994 0030 3B1C     		mov	r3, r7
 995 0032 0F33     		add	r3, r3, #15
 996 0034 1B78     		ldrb	r3, [r3]
 997 0036 181C     		mov	r0, r3
 998 0038 FFF7FEFF 		bl	CyExitCriticalSection
 743:.\Generated_Source\PSoC4/PWM_1.c **** }
 999              		.loc 1 743 0
 1000 003c BD46     		mov	sp, r7
 1001 003e 05B0     		add	sp, sp, #20
 1002              		@ sp needed
 1003 0040 90BD     		pop	{r4, r7, pc}
 1004              	.L60:
 1005 0042 C046     		.align	2
 1006              	.L59:
 1007 0044 40010540 		.word	1074069824
 1008              		.cfi_endproc
 1009              	.LFE18:
 1010              		.size	PWM_1_SetCompareSwap, .-PWM_1_SetCompareSwap
 1011              		.section	.text.PWM_1_WritePeriodBuf,"ax",%progbits
 1012              		.align	2
 1013              		.global	PWM_1_WritePeriodBuf
 1014              		.code	16
 1015              		.thumb_func
 1016              		.type	PWM_1_WritePeriodBuf, %function
 1017              	PWM_1_WritePeriodBuf:
 1018              	.LFB19:
 744:.\Generated_Source\PSoC4/PWM_1.c **** 
 745:.\Generated_Source\PSoC4/PWM_1.c **** 
 746:.\Generated_Source\PSoC4/PWM_1.c **** /*******************************************************************************
 747:.\Generated_Source\PSoC4/PWM_1.c **** * Function Name: PWM_1_WritePeriodBuf
 748:.\Generated_Source\PSoC4/PWM_1.c **** ********************************************************************************
 749:.\Generated_Source\PSoC4/PWM_1.c **** *
ARM GAS  C:\Users\TINYWI~1\AppData\Local\Temp\ccrliPYO.s 			page 32


 750:.\Generated_Source\PSoC4/PWM_1.c **** * Summary:
 751:.\Generated_Source\PSoC4/PWM_1.c **** *  Writes the 16 bit period buf register with the new period value.
 752:.\Generated_Source\PSoC4/PWM_1.c **** *
 753:.\Generated_Source\PSoC4/PWM_1.c **** * Parameters:
 754:.\Generated_Source\PSoC4/PWM_1.c **** *  periodBuf: Period value
 755:.\Generated_Source\PSoC4/PWM_1.c **** *
 756:.\Generated_Source\PSoC4/PWM_1.c **** * Return:
 757:.\Generated_Source\PSoC4/PWM_1.c **** *  None
 758:.\Generated_Source\PSoC4/PWM_1.c **** *
 759:.\Generated_Source\PSoC4/PWM_1.c **** *******************************************************************************/
 760:.\Generated_Source\PSoC4/PWM_1.c **** void PWM_1_WritePeriodBuf(uint32 periodBuf)
 761:.\Generated_Source\PSoC4/PWM_1.c **** {
 1019              		.loc 1 761 0
 1020              		.cfi_startproc
 1021 0000 80B5     		push	{r7, lr}
 1022              		.cfi_def_cfa_offset 8
 1023              		.cfi_offset 7, -8
 1024              		.cfi_offset 14, -4
 1025 0002 82B0     		sub	sp, sp, #8
 1026              		.cfi_def_cfa_offset 16
 1027 0004 00AF     		add	r7, sp, #0
 1028              		.cfi_def_cfa_register 7
 1029 0006 7860     		str	r0, [r7, #4]
 762:.\Generated_Source\PSoC4/PWM_1.c ****     PWM_1_PERIOD_BUF_REG = (periodBuf & PWM_1_16BIT_MASK);
 1030              		.loc 1 762 0
 1031 0008 034B     		ldr	r3, .L62
 1032 000a 7A68     		ldr	r2, [r7, #4]
 1033 000c 1204     		lsl	r2, r2, #16
 1034 000e 120C     		lsr	r2, r2, #16
 1035 0010 1A60     		str	r2, [r3]
 763:.\Generated_Source\PSoC4/PWM_1.c **** }
 1036              		.loc 1 763 0
 1037 0012 BD46     		mov	sp, r7
 1038 0014 02B0     		add	sp, sp, #8
 1039              		@ sp needed
 1040 0016 80BD     		pop	{r7, pc}
 1041              	.L63:
 1042              		.align	2
 1043              	.L62:
 1044 0018 58010540 		.word	1074069848
 1045              		.cfi_endproc
 1046              	.LFE19:
 1047              		.size	PWM_1_WritePeriodBuf, .-PWM_1_WritePeriodBuf
 1048              		.section	.text.PWM_1_ReadPeriodBuf,"ax",%progbits
 1049              		.align	2
 1050              		.global	PWM_1_ReadPeriodBuf
 1051              		.code	16
 1052              		.thumb_func
 1053              		.type	PWM_1_ReadPeriodBuf, %function
 1054              	PWM_1_ReadPeriodBuf:
 1055              	.LFB20:
 764:.\Generated_Source\PSoC4/PWM_1.c **** 
 765:.\Generated_Source\PSoC4/PWM_1.c **** 
 766:.\Generated_Source\PSoC4/PWM_1.c **** /*******************************************************************************
 767:.\Generated_Source\PSoC4/PWM_1.c **** * Function Name: PWM_1_ReadPeriodBuf
 768:.\Generated_Source\PSoC4/PWM_1.c **** ********************************************************************************
 769:.\Generated_Source\PSoC4/PWM_1.c **** *
ARM GAS  C:\Users\TINYWI~1\AppData\Local\Temp\ccrliPYO.s 			page 33


 770:.\Generated_Source\PSoC4/PWM_1.c **** * Summary:
 771:.\Generated_Source\PSoC4/PWM_1.c **** *  Reads the 16 bit period buf register.
 772:.\Generated_Source\PSoC4/PWM_1.c **** *
 773:.\Generated_Source\PSoC4/PWM_1.c **** * Parameters:
 774:.\Generated_Source\PSoC4/PWM_1.c **** *  None
 775:.\Generated_Source\PSoC4/PWM_1.c **** *
 776:.\Generated_Source\PSoC4/PWM_1.c **** * Return:
 777:.\Generated_Source\PSoC4/PWM_1.c **** *  Period value
 778:.\Generated_Source\PSoC4/PWM_1.c **** *
 779:.\Generated_Source\PSoC4/PWM_1.c **** *******************************************************************************/
 780:.\Generated_Source\PSoC4/PWM_1.c **** uint32 PWM_1_ReadPeriodBuf(void)
 781:.\Generated_Source\PSoC4/PWM_1.c **** {
 1056              		.loc 1 781 0
 1057              		.cfi_startproc
 1058 0000 80B5     		push	{r7, lr}
 1059              		.cfi_def_cfa_offset 8
 1060              		.cfi_offset 7, -8
 1061              		.cfi_offset 14, -4
 1062 0002 00AF     		add	r7, sp, #0
 1063              		.cfi_def_cfa_register 7
 782:.\Generated_Source\PSoC4/PWM_1.c ****     return (PWM_1_PERIOD_BUF_REG & PWM_1_16BIT_MASK);
 1064              		.loc 1 782 0
 1065 0004 034B     		ldr	r3, .L66
 1066 0006 1B68     		ldr	r3, [r3]
 1067 0008 1B04     		lsl	r3, r3, #16
 1068 000a 1B0C     		lsr	r3, r3, #16
 783:.\Generated_Source\PSoC4/PWM_1.c **** }
 1069              		.loc 1 783 0
 1070 000c 181C     		mov	r0, r3
 1071 000e BD46     		mov	sp, r7
 1072              		@ sp needed
 1073 0010 80BD     		pop	{r7, pc}
 1074              	.L67:
 1075 0012 C046     		.align	2
 1076              	.L66:
 1077 0014 58010540 		.word	1074069848
 1078              		.cfi_endproc
 1079              	.LFE20:
 1080              		.size	PWM_1_ReadPeriodBuf, .-PWM_1_ReadPeriodBuf
 1081              		.section	.text.PWM_1_SetPeriodSwap,"ax",%progbits
 1082              		.align	2
 1083              		.global	PWM_1_SetPeriodSwap
 1084              		.code	16
 1085              		.thumb_func
 1086              		.type	PWM_1_SetPeriodSwap, %function
 1087              	PWM_1_SetPeriodSwap:
 1088              	.LFB21:
 784:.\Generated_Source\PSoC4/PWM_1.c **** 
 785:.\Generated_Source\PSoC4/PWM_1.c **** 
 786:.\Generated_Source\PSoC4/PWM_1.c **** /*******************************************************************************
 787:.\Generated_Source\PSoC4/PWM_1.c **** * Function Name: PWM_1_SetPeriodSwap
 788:.\Generated_Source\PSoC4/PWM_1.c **** ********************************************************************************
 789:.\Generated_Source\PSoC4/PWM_1.c **** *
 790:.\Generated_Source\PSoC4/PWM_1.c **** * Summary:
 791:.\Generated_Source\PSoC4/PWM_1.c **** *  Writes the register that controls whether the period registers are
 792:.\Generated_Source\PSoC4/PWM_1.c **** *  swapped. When enabled in Timer/Counter mode the swap occurs at a TC event.
 793:.\Generated_Source\PSoC4/PWM_1.c **** *  In the PWM mode the swap occurs at the next TC event following a hardware
ARM GAS  C:\Users\TINYWI~1\AppData\Local\Temp\ccrliPYO.s 			page 34


 794:.\Generated_Source\PSoC4/PWM_1.c **** *  switch event.
 795:.\Generated_Source\PSoC4/PWM_1.c **** *
 796:.\Generated_Source\PSoC4/PWM_1.c **** * Parameters:
 797:.\Generated_Source\PSoC4/PWM_1.c **** *  swapEnable
 798:.\Generated_Source\PSoC4/PWM_1.c **** *   Values:
 799:.\Generated_Source\PSoC4/PWM_1.c **** *     - 0 - Disable swap
 800:.\Generated_Source\PSoC4/PWM_1.c **** *     - 1 - Enable swap
 801:.\Generated_Source\PSoC4/PWM_1.c **** *
 802:.\Generated_Source\PSoC4/PWM_1.c **** * Return:
 803:.\Generated_Source\PSoC4/PWM_1.c **** *  None
 804:.\Generated_Source\PSoC4/PWM_1.c **** *
 805:.\Generated_Source\PSoC4/PWM_1.c **** *******************************************************************************/
 806:.\Generated_Source\PSoC4/PWM_1.c **** void PWM_1_SetPeriodSwap(uint32 swapEnable)
 807:.\Generated_Source\PSoC4/PWM_1.c **** {
 1089              		.loc 1 807 0
 1090              		.cfi_startproc
 1091 0000 90B5     		push	{r4, r7, lr}
 1092              		.cfi_def_cfa_offset 12
 1093              		.cfi_offset 4, -12
 1094              		.cfi_offset 7, -8
 1095              		.cfi_offset 14, -4
 1096 0002 85B0     		sub	sp, sp, #20
 1097              		.cfi_def_cfa_offset 32
 1098 0004 00AF     		add	r7, sp, #0
 1099              		.cfi_def_cfa_register 7
 1100 0006 7860     		str	r0, [r7, #4]
 808:.\Generated_Source\PSoC4/PWM_1.c ****     uint8 enableInterrupts;
 809:.\Generated_Source\PSoC4/PWM_1.c **** 
 810:.\Generated_Source\PSoC4/PWM_1.c ****     enableInterrupts = CyEnterCriticalSection();
 1101              		.loc 1 810 0
 1102 0008 3C1C     		mov	r4, r7
 1103 000a 0F34     		add	r4, r4, #15
 1104 000c FFF7FEFF 		bl	CyEnterCriticalSection
 1105 0010 031C     		mov	r3, r0
 1106 0012 2370     		strb	r3, [r4]
 811:.\Generated_Source\PSoC4/PWM_1.c **** 
 812:.\Generated_Source\PSoC4/PWM_1.c ****     PWM_1_CONTROL_REG &= (uint32)~PWM_1_RELOAD_PERIOD_MASK;
 1107              		.loc 1 812 0
 1108 0014 0B4B     		ldr	r3, .L69
 1109 0016 0B4A     		ldr	r2, .L69
 1110 0018 1268     		ldr	r2, [r2]
 1111 001a 0221     		mov	r1, #2
 1112 001c 8A43     		bic	r2, r1
 1113 001e 1A60     		str	r2, [r3]
 813:.\Generated_Source\PSoC4/PWM_1.c ****     PWM_1_CONTROL_REG |= ((uint32)((swapEnable & PWM_1_1BIT_MASK) <<
 1114              		.loc 1 813 0
 1115 0020 084B     		ldr	r3, .L69
 1116 0022 084A     		ldr	r2, .L69
 1117 0024 1168     		ldr	r1, [r2]
 1118 0026 7868     		ldr	r0, [r7, #4]
 1119 0028 0122     		mov	r2, #1
 1120 002a 0240     		and	r2, r0
 1121 002c 5200     		lsl	r2, r2, #1
 1122 002e 0A43     		orr	r2, r1
 1123 0030 1A60     		str	r2, [r3]
 814:.\Generated_Source\PSoC4/PWM_1.c ****                                                             PWM_1_RELOAD_PERIOD_SHIFT));
 815:.\Generated_Source\PSoC4/PWM_1.c **** 
ARM GAS  C:\Users\TINYWI~1\AppData\Local\Temp\ccrliPYO.s 			page 35


 816:.\Generated_Source\PSoC4/PWM_1.c ****     CyExitCriticalSection(enableInterrupts);
 1124              		.loc 1 816 0
 1125 0032 3B1C     		mov	r3, r7
 1126 0034 0F33     		add	r3, r3, #15
 1127 0036 1B78     		ldrb	r3, [r3]
 1128 0038 181C     		mov	r0, r3
 1129 003a FFF7FEFF 		bl	CyExitCriticalSection
 817:.\Generated_Source\PSoC4/PWM_1.c **** }
 1130              		.loc 1 817 0
 1131 003e BD46     		mov	sp, r7
 1132 0040 05B0     		add	sp, sp, #20
 1133              		@ sp needed
 1134 0042 90BD     		pop	{r4, r7, pc}
 1135              	.L70:
 1136              		.align	2
 1137              	.L69:
 1138 0044 40010540 		.word	1074069824
 1139              		.cfi_endproc
 1140              	.LFE21:
 1141              		.size	PWM_1_SetPeriodSwap, .-PWM_1_SetPeriodSwap
 1142              		.section	.text.PWM_1_WriteCompare,"ax",%progbits
 1143              		.align	2
 1144              		.global	PWM_1_WriteCompare
 1145              		.code	16
 1146              		.thumb_func
 1147              		.type	PWM_1_WriteCompare, %function
 1148              	PWM_1_WriteCompare:
 1149              	.LFB22:
 818:.\Generated_Source\PSoC4/PWM_1.c **** 
 819:.\Generated_Source\PSoC4/PWM_1.c **** 
 820:.\Generated_Source\PSoC4/PWM_1.c **** /*******************************************************************************
 821:.\Generated_Source\PSoC4/PWM_1.c **** * Function Name: PWM_1_WriteCompare
 822:.\Generated_Source\PSoC4/PWM_1.c **** ********************************************************************************
 823:.\Generated_Source\PSoC4/PWM_1.c **** *
 824:.\Generated_Source\PSoC4/PWM_1.c **** * Summary:
 825:.\Generated_Source\PSoC4/PWM_1.c **** *  Writes the 16 bit compare register with the new compare value. Not
 826:.\Generated_Source\PSoC4/PWM_1.c **** *  applicable for Timer/Counter with Capture or in Quadrature Decoder modes.
 827:.\Generated_Source\PSoC4/PWM_1.c **** *
 828:.\Generated_Source\PSoC4/PWM_1.c **** * Parameters:
 829:.\Generated_Source\PSoC4/PWM_1.c **** *  compare: Compare value
 830:.\Generated_Source\PSoC4/PWM_1.c **** *
 831:.\Generated_Source\PSoC4/PWM_1.c **** * Return:
 832:.\Generated_Source\PSoC4/PWM_1.c **** *  None
 833:.\Generated_Source\PSoC4/PWM_1.c **** *
 834:.\Generated_Source\PSoC4/PWM_1.c **** *******************************************************************************/
 835:.\Generated_Source\PSoC4/PWM_1.c **** void PWM_1_WriteCompare(uint32 compare)
 836:.\Generated_Source\PSoC4/PWM_1.c **** {
 1150              		.loc 1 836 0
 1151              		.cfi_startproc
 1152 0000 80B5     		push	{r7, lr}
 1153              		.cfi_def_cfa_offset 8
 1154              		.cfi_offset 7, -8
 1155              		.cfi_offset 14, -4
 1156 0002 82B0     		sub	sp, sp, #8
 1157              		.cfi_def_cfa_offset 16
 1158 0004 00AF     		add	r7, sp, #0
 1159              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\TINYWI~1\AppData\Local\Temp\ccrliPYO.s 			page 36


 1160 0006 7860     		str	r0, [r7, #4]
 837:.\Generated_Source\PSoC4/PWM_1.c ****     #if (PWM_1_CY_TCPWM_4000)
 838:.\Generated_Source\PSoC4/PWM_1.c ****         uint32 currentMode;
 839:.\Generated_Source\PSoC4/PWM_1.c ****     #endif /* (PWM_1_CY_TCPWM_4000) */
 840:.\Generated_Source\PSoC4/PWM_1.c **** 
 841:.\Generated_Source\PSoC4/PWM_1.c ****     #if (PWM_1_CY_TCPWM_4000)
 842:.\Generated_Source\PSoC4/PWM_1.c ****         currentMode = ((PWM_1_CONTROL_REG & PWM_1_UPDOWN_MASK) >> PWM_1_UPDOWN_SHIFT);
 843:.\Generated_Source\PSoC4/PWM_1.c **** 
 844:.\Generated_Source\PSoC4/PWM_1.c ****         if (((uint32)PWM_1__COUNT_DOWN == currentMode) && (0xFFFFu != compare))
 845:.\Generated_Source\PSoC4/PWM_1.c ****         {
 846:.\Generated_Source\PSoC4/PWM_1.c ****             compare++;
 847:.\Generated_Source\PSoC4/PWM_1.c ****         }
 848:.\Generated_Source\PSoC4/PWM_1.c ****         else if (((uint32)PWM_1__COUNT_UP == currentMode) && (0u != compare))
 849:.\Generated_Source\PSoC4/PWM_1.c ****         {
 850:.\Generated_Source\PSoC4/PWM_1.c ****             compare--;
 851:.\Generated_Source\PSoC4/PWM_1.c ****         }
 852:.\Generated_Source\PSoC4/PWM_1.c ****         else
 853:.\Generated_Source\PSoC4/PWM_1.c ****         {
 854:.\Generated_Source\PSoC4/PWM_1.c ****         }
 855:.\Generated_Source\PSoC4/PWM_1.c ****         
 856:.\Generated_Source\PSoC4/PWM_1.c ****     
 857:.\Generated_Source\PSoC4/PWM_1.c ****     #endif /* (PWM_1_CY_TCPWM_4000) */
 858:.\Generated_Source\PSoC4/PWM_1.c ****     
 859:.\Generated_Source\PSoC4/PWM_1.c ****     PWM_1_COMP_CAP_REG = (compare & PWM_1_16BIT_MASK);
 1161              		.loc 1 859 0
 1162 0008 034B     		ldr	r3, .L72
 1163 000a 7A68     		ldr	r2, [r7, #4]
 1164 000c 1204     		lsl	r2, r2, #16
 1165 000e 120C     		lsr	r2, r2, #16
 1166 0010 1A60     		str	r2, [r3]
 860:.\Generated_Source\PSoC4/PWM_1.c **** }
 1167              		.loc 1 860 0
 1168 0012 BD46     		mov	sp, r7
 1169 0014 02B0     		add	sp, sp, #8
 1170              		@ sp needed
 1171 0016 80BD     		pop	{r7, pc}
 1172              	.L73:
 1173              		.align	2
 1174              	.L72:
 1175 0018 4C010540 		.word	1074069836
 1176              		.cfi_endproc
 1177              	.LFE22:
 1178              		.size	PWM_1_WriteCompare, .-PWM_1_WriteCompare
 1179              		.section	.text.PWM_1_ReadCompare,"ax",%progbits
 1180              		.align	2
 1181              		.global	PWM_1_ReadCompare
 1182              		.code	16
 1183              		.thumb_func
 1184              		.type	PWM_1_ReadCompare, %function
 1185              	PWM_1_ReadCompare:
 1186              	.LFB23:
 861:.\Generated_Source\PSoC4/PWM_1.c **** 
 862:.\Generated_Source\PSoC4/PWM_1.c **** 
 863:.\Generated_Source\PSoC4/PWM_1.c **** /*******************************************************************************
 864:.\Generated_Source\PSoC4/PWM_1.c **** * Function Name: PWM_1_ReadCompare
 865:.\Generated_Source\PSoC4/PWM_1.c **** ********************************************************************************
 866:.\Generated_Source\PSoC4/PWM_1.c **** *
ARM GAS  C:\Users\TINYWI~1\AppData\Local\Temp\ccrliPYO.s 			page 37


 867:.\Generated_Source\PSoC4/PWM_1.c **** * Summary:
 868:.\Generated_Source\PSoC4/PWM_1.c **** *  Reads the compare register. Not applicable for Timer/Counter with Capture
 869:.\Generated_Source\PSoC4/PWM_1.c **** *  or in Quadrature Decoder modes.
 870:.\Generated_Source\PSoC4/PWM_1.c **** *
 871:.\Generated_Source\PSoC4/PWM_1.c **** * Parameters:
 872:.\Generated_Source\PSoC4/PWM_1.c **** *  None
 873:.\Generated_Source\PSoC4/PWM_1.c **** *
 874:.\Generated_Source\PSoC4/PWM_1.c **** * Return:
 875:.\Generated_Source\PSoC4/PWM_1.c **** *  Compare value
 876:.\Generated_Source\PSoC4/PWM_1.c **** *
 877:.\Generated_Source\PSoC4/PWM_1.c **** *******************************************************************************/
 878:.\Generated_Source\PSoC4/PWM_1.c **** uint32 PWM_1_ReadCompare(void)
 879:.\Generated_Source\PSoC4/PWM_1.c **** {
 1187              		.loc 1 879 0
 1188              		.cfi_startproc
 1189 0000 80B5     		push	{r7, lr}
 1190              		.cfi_def_cfa_offset 8
 1191              		.cfi_offset 7, -8
 1192              		.cfi_offset 14, -4
 1193 0002 00AF     		add	r7, sp, #0
 1194              		.cfi_def_cfa_register 7
 880:.\Generated_Source\PSoC4/PWM_1.c ****     #if (PWM_1_CY_TCPWM_4000)
 881:.\Generated_Source\PSoC4/PWM_1.c ****         uint32 currentMode;
 882:.\Generated_Source\PSoC4/PWM_1.c ****         uint32 regVal;
 883:.\Generated_Source\PSoC4/PWM_1.c ****     #endif /* (PWM_1_CY_TCPWM_4000) */
 884:.\Generated_Source\PSoC4/PWM_1.c **** 
 885:.\Generated_Source\PSoC4/PWM_1.c ****     #if (PWM_1_CY_TCPWM_4000)
 886:.\Generated_Source\PSoC4/PWM_1.c ****         currentMode = ((PWM_1_CONTROL_REG & PWM_1_UPDOWN_MASK) >> PWM_1_UPDOWN_SHIFT);
 887:.\Generated_Source\PSoC4/PWM_1.c ****         
 888:.\Generated_Source\PSoC4/PWM_1.c ****         regVal = PWM_1_COMP_CAP_REG;
 889:.\Generated_Source\PSoC4/PWM_1.c ****         
 890:.\Generated_Source\PSoC4/PWM_1.c ****         if (((uint32)PWM_1__COUNT_DOWN == currentMode) && (0u != regVal))
 891:.\Generated_Source\PSoC4/PWM_1.c ****         {
 892:.\Generated_Source\PSoC4/PWM_1.c ****             regVal--;
 893:.\Generated_Source\PSoC4/PWM_1.c ****         }
 894:.\Generated_Source\PSoC4/PWM_1.c ****         else if (((uint32)PWM_1__COUNT_UP == currentMode) && (0xFFFFu != regVal))
 895:.\Generated_Source\PSoC4/PWM_1.c ****         {
 896:.\Generated_Source\PSoC4/PWM_1.c ****             regVal++;
 897:.\Generated_Source\PSoC4/PWM_1.c ****         }
 898:.\Generated_Source\PSoC4/PWM_1.c ****         else
 899:.\Generated_Source\PSoC4/PWM_1.c ****         {
 900:.\Generated_Source\PSoC4/PWM_1.c ****         }
 901:.\Generated_Source\PSoC4/PWM_1.c **** 
 902:.\Generated_Source\PSoC4/PWM_1.c ****         return (regVal & PWM_1_16BIT_MASK);
 903:.\Generated_Source\PSoC4/PWM_1.c ****     #else
 904:.\Generated_Source\PSoC4/PWM_1.c ****         return (PWM_1_COMP_CAP_REG & PWM_1_16BIT_MASK);
 1195              		.loc 1 904 0
 1196 0004 034B     		ldr	r3, .L76
 1197 0006 1B68     		ldr	r3, [r3]
 1198 0008 1B04     		lsl	r3, r3, #16
 1199 000a 1B0C     		lsr	r3, r3, #16
 905:.\Generated_Source\PSoC4/PWM_1.c ****     #endif /* (PWM_1_CY_TCPWM_4000) */
 906:.\Generated_Source\PSoC4/PWM_1.c **** }
 1200              		.loc 1 906 0
 1201 000c 181C     		mov	r0, r3
 1202 000e BD46     		mov	sp, r7
 1203              		@ sp needed
ARM GAS  C:\Users\TINYWI~1\AppData\Local\Temp\ccrliPYO.s 			page 38


 1204 0010 80BD     		pop	{r7, pc}
 1205              	.L77:
 1206 0012 C046     		.align	2
 1207              	.L76:
 1208 0014 4C010540 		.word	1074069836
 1209              		.cfi_endproc
 1210              	.LFE23:
 1211              		.size	PWM_1_ReadCompare, .-PWM_1_ReadCompare
 1212              		.section	.text.PWM_1_WriteCompareBuf,"ax",%progbits
 1213              		.align	2
 1214              		.global	PWM_1_WriteCompareBuf
 1215              		.code	16
 1216              		.thumb_func
 1217              		.type	PWM_1_WriteCompareBuf, %function
 1218              	PWM_1_WriteCompareBuf:
 1219              	.LFB24:
 907:.\Generated_Source\PSoC4/PWM_1.c **** 
 908:.\Generated_Source\PSoC4/PWM_1.c **** 
 909:.\Generated_Source\PSoC4/PWM_1.c **** /*******************************************************************************
 910:.\Generated_Source\PSoC4/PWM_1.c **** * Function Name: PWM_1_WriteCompareBuf
 911:.\Generated_Source\PSoC4/PWM_1.c **** ********************************************************************************
 912:.\Generated_Source\PSoC4/PWM_1.c **** *
 913:.\Generated_Source\PSoC4/PWM_1.c **** * Summary:
 914:.\Generated_Source\PSoC4/PWM_1.c **** *  Writes the 16 bit compare buffer register with the new compare value. Not
 915:.\Generated_Source\PSoC4/PWM_1.c **** *  applicable for Timer/Counter with Capture or in Quadrature Decoder modes.
 916:.\Generated_Source\PSoC4/PWM_1.c **** *
 917:.\Generated_Source\PSoC4/PWM_1.c **** * Parameters:
 918:.\Generated_Source\PSoC4/PWM_1.c **** *  compareBuf: Compare value
 919:.\Generated_Source\PSoC4/PWM_1.c **** *
 920:.\Generated_Source\PSoC4/PWM_1.c **** * Return:
 921:.\Generated_Source\PSoC4/PWM_1.c **** *  None
 922:.\Generated_Source\PSoC4/PWM_1.c **** *
 923:.\Generated_Source\PSoC4/PWM_1.c **** *******************************************************************************/
 924:.\Generated_Source\PSoC4/PWM_1.c **** void PWM_1_WriteCompareBuf(uint32 compareBuf)
 925:.\Generated_Source\PSoC4/PWM_1.c **** {
 1220              		.loc 1 925 0
 1221              		.cfi_startproc
 1222 0000 80B5     		push	{r7, lr}
 1223              		.cfi_def_cfa_offset 8
 1224              		.cfi_offset 7, -8
 1225              		.cfi_offset 14, -4
 1226 0002 82B0     		sub	sp, sp, #8
 1227              		.cfi_def_cfa_offset 16
 1228 0004 00AF     		add	r7, sp, #0
 1229              		.cfi_def_cfa_register 7
 1230 0006 7860     		str	r0, [r7, #4]
 926:.\Generated_Source\PSoC4/PWM_1.c ****     #if (PWM_1_CY_TCPWM_4000)
 927:.\Generated_Source\PSoC4/PWM_1.c ****         uint32 currentMode;
 928:.\Generated_Source\PSoC4/PWM_1.c ****     #endif /* (PWM_1_CY_TCPWM_4000) */
 929:.\Generated_Source\PSoC4/PWM_1.c **** 
 930:.\Generated_Source\PSoC4/PWM_1.c ****     #if (PWM_1_CY_TCPWM_4000)
 931:.\Generated_Source\PSoC4/PWM_1.c ****         currentMode = ((PWM_1_CONTROL_REG & PWM_1_UPDOWN_MASK) >> PWM_1_UPDOWN_SHIFT);
 932:.\Generated_Source\PSoC4/PWM_1.c **** 
 933:.\Generated_Source\PSoC4/PWM_1.c ****         if (((uint32)PWM_1__COUNT_DOWN == currentMode) && (0xFFFFu != compareBuf))
 934:.\Generated_Source\PSoC4/PWM_1.c ****         {
 935:.\Generated_Source\PSoC4/PWM_1.c ****             compareBuf++;
 936:.\Generated_Source\PSoC4/PWM_1.c ****         }
ARM GAS  C:\Users\TINYWI~1\AppData\Local\Temp\ccrliPYO.s 			page 39


 937:.\Generated_Source\PSoC4/PWM_1.c ****         else if (((uint32)PWM_1__COUNT_UP == currentMode) && (0u != compareBuf))
 938:.\Generated_Source\PSoC4/PWM_1.c ****         {
 939:.\Generated_Source\PSoC4/PWM_1.c ****             compareBuf --;
 940:.\Generated_Source\PSoC4/PWM_1.c ****         }
 941:.\Generated_Source\PSoC4/PWM_1.c ****         else
 942:.\Generated_Source\PSoC4/PWM_1.c ****         {
 943:.\Generated_Source\PSoC4/PWM_1.c ****         }
 944:.\Generated_Source\PSoC4/PWM_1.c ****     #endif /* (PWM_1_CY_TCPWM_4000) */
 945:.\Generated_Source\PSoC4/PWM_1.c ****     
 946:.\Generated_Source\PSoC4/PWM_1.c ****     PWM_1_COMP_CAP_BUF_REG = (compareBuf & PWM_1_16BIT_MASK);
 1231              		.loc 1 946 0
 1232 0008 034B     		ldr	r3, .L79
 1233 000a 7A68     		ldr	r2, [r7, #4]
 1234 000c 1204     		lsl	r2, r2, #16
 1235 000e 120C     		lsr	r2, r2, #16
 1236 0010 1A60     		str	r2, [r3]
 947:.\Generated_Source\PSoC4/PWM_1.c **** }
 1237              		.loc 1 947 0
 1238 0012 BD46     		mov	sp, r7
 1239 0014 02B0     		add	sp, sp, #8
 1240              		@ sp needed
 1241 0016 80BD     		pop	{r7, pc}
 1242              	.L80:
 1243              		.align	2
 1244              	.L79:
 1245 0018 50010540 		.word	1074069840
 1246              		.cfi_endproc
 1247              	.LFE24:
 1248              		.size	PWM_1_WriteCompareBuf, .-PWM_1_WriteCompareBuf
 1249              		.section	.text.PWM_1_ReadCompareBuf,"ax",%progbits
 1250              		.align	2
 1251              		.global	PWM_1_ReadCompareBuf
 1252              		.code	16
 1253              		.thumb_func
 1254              		.type	PWM_1_ReadCompareBuf, %function
 1255              	PWM_1_ReadCompareBuf:
 1256              	.LFB25:
 948:.\Generated_Source\PSoC4/PWM_1.c **** 
 949:.\Generated_Source\PSoC4/PWM_1.c **** 
 950:.\Generated_Source\PSoC4/PWM_1.c **** /*******************************************************************************
 951:.\Generated_Source\PSoC4/PWM_1.c **** * Function Name: PWM_1_ReadCompareBuf
 952:.\Generated_Source\PSoC4/PWM_1.c **** ********************************************************************************
 953:.\Generated_Source\PSoC4/PWM_1.c **** *
 954:.\Generated_Source\PSoC4/PWM_1.c **** * Summary:
 955:.\Generated_Source\PSoC4/PWM_1.c **** *  Reads the compare buffer register. Not applicable for Timer/Counter with
 956:.\Generated_Source\PSoC4/PWM_1.c **** *  Capture or in Quadrature Decoder modes.
 957:.\Generated_Source\PSoC4/PWM_1.c **** *
 958:.\Generated_Source\PSoC4/PWM_1.c **** * Parameters:
 959:.\Generated_Source\PSoC4/PWM_1.c **** *  None
 960:.\Generated_Source\PSoC4/PWM_1.c **** *
 961:.\Generated_Source\PSoC4/PWM_1.c **** * Return:
 962:.\Generated_Source\PSoC4/PWM_1.c **** *  Compare buffer value
 963:.\Generated_Source\PSoC4/PWM_1.c **** *
 964:.\Generated_Source\PSoC4/PWM_1.c **** *******************************************************************************/
 965:.\Generated_Source\PSoC4/PWM_1.c **** uint32 PWM_1_ReadCompareBuf(void)
 966:.\Generated_Source\PSoC4/PWM_1.c **** {
 1257              		.loc 1 966 0
ARM GAS  C:\Users\TINYWI~1\AppData\Local\Temp\ccrliPYO.s 			page 40


 1258              		.cfi_startproc
 1259 0000 80B5     		push	{r7, lr}
 1260              		.cfi_def_cfa_offset 8
 1261              		.cfi_offset 7, -8
 1262              		.cfi_offset 14, -4
 1263 0002 00AF     		add	r7, sp, #0
 1264              		.cfi_def_cfa_register 7
 967:.\Generated_Source\PSoC4/PWM_1.c ****     #if (PWM_1_CY_TCPWM_4000)
 968:.\Generated_Source\PSoC4/PWM_1.c ****         uint32 currentMode;
 969:.\Generated_Source\PSoC4/PWM_1.c ****         uint32 regVal;
 970:.\Generated_Source\PSoC4/PWM_1.c ****     #endif /* (PWM_1_CY_TCPWM_4000) */
 971:.\Generated_Source\PSoC4/PWM_1.c **** 
 972:.\Generated_Source\PSoC4/PWM_1.c ****     #if (PWM_1_CY_TCPWM_4000)
 973:.\Generated_Source\PSoC4/PWM_1.c ****         currentMode = ((PWM_1_CONTROL_REG & PWM_1_UPDOWN_MASK) >> PWM_1_UPDOWN_SHIFT);
 974:.\Generated_Source\PSoC4/PWM_1.c **** 
 975:.\Generated_Source\PSoC4/PWM_1.c ****         regVal = PWM_1_COMP_CAP_BUF_REG;
 976:.\Generated_Source\PSoC4/PWM_1.c ****         
 977:.\Generated_Source\PSoC4/PWM_1.c ****         if (((uint32)PWM_1__COUNT_DOWN == currentMode) && (0u != regVal))
 978:.\Generated_Source\PSoC4/PWM_1.c ****         {
 979:.\Generated_Source\PSoC4/PWM_1.c ****             regVal--;
 980:.\Generated_Source\PSoC4/PWM_1.c ****         }
 981:.\Generated_Source\PSoC4/PWM_1.c ****         else if (((uint32)PWM_1__COUNT_UP == currentMode) && (0xFFFFu != regVal))
 982:.\Generated_Source\PSoC4/PWM_1.c ****         {
 983:.\Generated_Source\PSoC4/PWM_1.c ****             regVal++;
 984:.\Generated_Source\PSoC4/PWM_1.c ****         }
 985:.\Generated_Source\PSoC4/PWM_1.c ****         else
 986:.\Generated_Source\PSoC4/PWM_1.c ****         {
 987:.\Generated_Source\PSoC4/PWM_1.c ****         }
 988:.\Generated_Source\PSoC4/PWM_1.c **** 
 989:.\Generated_Source\PSoC4/PWM_1.c ****         return (regVal & PWM_1_16BIT_MASK);
 990:.\Generated_Source\PSoC4/PWM_1.c ****     #else
 991:.\Generated_Source\PSoC4/PWM_1.c ****         return (PWM_1_COMP_CAP_BUF_REG & PWM_1_16BIT_MASK);
 1265              		.loc 1 991 0
 1266 0004 034B     		ldr	r3, .L83
 1267 0006 1B68     		ldr	r3, [r3]
 1268 0008 1B04     		lsl	r3, r3, #16
 1269 000a 1B0C     		lsr	r3, r3, #16
 992:.\Generated_Source\PSoC4/PWM_1.c ****     #endif /* (PWM_1_CY_TCPWM_4000) */
 993:.\Generated_Source\PSoC4/PWM_1.c **** }
 1270              		.loc 1 993 0
 1271 000c 181C     		mov	r0, r3
 1272 000e BD46     		mov	sp, r7
 1273              		@ sp needed
 1274 0010 80BD     		pop	{r7, pc}
 1275              	.L84:
 1276 0012 C046     		.align	2
 1277              	.L83:
 1278 0014 50010540 		.word	1074069840
 1279              		.cfi_endproc
 1280              	.LFE25:
 1281              		.size	PWM_1_ReadCompareBuf, .-PWM_1_ReadCompareBuf
 1282              		.section	.text.PWM_1_ReadCapture,"ax",%progbits
 1283              		.align	2
 1284              		.global	PWM_1_ReadCapture
 1285              		.code	16
 1286              		.thumb_func
 1287              		.type	PWM_1_ReadCapture, %function
ARM GAS  C:\Users\TINYWI~1\AppData\Local\Temp\ccrliPYO.s 			page 41


 1288              	PWM_1_ReadCapture:
 1289              	.LFB26:
 994:.\Generated_Source\PSoC4/PWM_1.c **** 
 995:.\Generated_Source\PSoC4/PWM_1.c **** 
 996:.\Generated_Source\PSoC4/PWM_1.c **** /*******************************************************************************
 997:.\Generated_Source\PSoC4/PWM_1.c **** * Function Name: PWM_1_ReadCapture
 998:.\Generated_Source\PSoC4/PWM_1.c **** ********************************************************************************
 999:.\Generated_Source\PSoC4/PWM_1.c **** *
1000:.\Generated_Source\PSoC4/PWM_1.c **** * Summary:
1001:.\Generated_Source\PSoC4/PWM_1.c **** *  Reads the captured counter value. This API is applicable only for
1002:.\Generated_Source\PSoC4/PWM_1.c **** *  Timer/Counter with the capture mode and Quadrature Decoder modes.
1003:.\Generated_Source\PSoC4/PWM_1.c **** *
1004:.\Generated_Source\PSoC4/PWM_1.c **** * Parameters:
1005:.\Generated_Source\PSoC4/PWM_1.c **** *  None
1006:.\Generated_Source\PSoC4/PWM_1.c **** *
1007:.\Generated_Source\PSoC4/PWM_1.c **** * Return:
1008:.\Generated_Source\PSoC4/PWM_1.c **** *  Capture value
1009:.\Generated_Source\PSoC4/PWM_1.c **** *
1010:.\Generated_Source\PSoC4/PWM_1.c **** *******************************************************************************/
1011:.\Generated_Source\PSoC4/PWM_1.c **** uint32 PWM_1_ReadCapture(void)
1012:.\Generated_Source\PSoC4/PWM_1.c **** {
 1290              		.loc 1 1012 0
 1291              		.cfi_startproc
 1292 0000 80B5     		push	{r7, lr}
 1293              		.cfi_def_cfa_offset 8
 1294              		.cfi_offset 7, -8
 1295              		.cfi_offset 14, -4
 1296 0002 00AF     		add	r7, sp, #0
 1297              		.cfi_def_cfa_register 7
1013:.\Generated_Source\PSoC4/PWM_1.c ****     return (PWM_1_COMP_CAP_REG & PWM_1_16BIT_MASK);
 1298              		.loc 1 1013 0
 1299 0004 034B     		ldr	r3, .L87
 1300 0006 1B68     		ldr	r3, [r3]
 1301 0008 1B04     		lsl	r3, r3, #16
 1302 000a 1B0C     		lsr	r3, r3, #16
1014:.\Generated_Source\PSoC4/PWM_1.c **** }
 1303              		.loc 1 1014 0
 1304 000c 181C     		mov	r0, r3
 1305 000e BD46     		mov	sp, r7
 1306              		@ sp needed
 1307 0010 80BD     		pop	{r7, pc}
 1308              	.L88:
 1309 0012 C046     		.align	2
 1310              	.L87:
 1311 0014 4C010540 		.word	1074069836
 1312              		.cfi_endproc
 1313              	.LFE26:
 1314              		.size	PWM_1_ReadCapture, .-PWM_1_ReadCapture
 1315              		.section	.text.PWM_1_ReadCaptureBuf,"ax",%progbits
 1316              		.align	2
 1317              		.global	PWM_1_ReadCaptureBuf
 1318              		.code	16
 1319              		.thumb_func
 1320              		.type	PWM_1_ReadCaptureBuf, %function
 1321              	PWM_1_ReadCaptureBuf:
 1322              	.LFB27:
1015:.\Generated_Source\PSoC4/PWM_1.c **** 
ARM GAS  C:\Users\TINYWI~1\AppData\Local\Temp\ccrliPYO.s 			page 42


1016:.\Generated_Source\PSoC4/PWM_1.c **** 
1017:.\Generated_Source\PSoC4/PWM_1.c **** /*******************************************************************************
1018:.\Generated_Source\PSoC4/PWM_1.c **** * Function Name: PWM_1_ReadCaptureBuf
1019:.\Generated_Source\PSoC4/PWM_1.c **** ********************************************************************************
1020:.\Generated_Source\PSoC4/PWM_1.c **** *
1021:.\Generated_Source\PSoC4/PWM_1.c **** * Summary:
1022:.\Generated_Source\PSoC4/PWM_1.c **** *  Reads the capture buffer register. This API is applicable only for
1023:.\Generated_Source\PSoC4/PWM_1.c **** *  Timer/Counter with the capture mode and Quadrature Decoder modes.
1024:.\Generated_Source\PSoC4/PWM_1.c **** *
1025:.\Generated_Source\PSoC4/PWM_1.c **** * Parameters:
1026:.\Generated_Source\PSoC4/PWM_1.c **** *  None
1027:.\Generated_Source\PSoC4/PWM_1.c **** *
1028:.\Generated_Source\PSoC4/PWM_1.c **** * Return:
1029:.\Generated_Source\PSoC4/PWM_1.c **** *  Capture buffer value
1030:.\Generated_Source\PSoC4/PWM_1.c **** *
1031:.\Generated_Source\PSoC4/PWM_1.c **** *******************************************************************************/
1032:.\Generated_Source\PSoC4/PWM_1.c **** uint32 PWM_1_ReadCaptureBuf(void)
1033:.\Generated_Source\PSoC4/PWM_1.c **** {
 1323              		.loc 1 1033 0
 1324              		.cfi_startproc
 1325 0000 80B5     		push	{r7, lr}
 1326              		.cfi_def_cfa_offset 8
 1327              		.cfi_offset 7, -8
 1328              		.cfi_offset 14, -4
 1329 0002 00AF     		add	r7, sp, #0
 1330              		.cfi_def_cfa_register 7
1034:.\Generated_Source\PSoC4/PWM_1.c ****     return (PWM_1_COMP_CAP_BUF_REG & PWM_1_16BIT_MASK);
 1331              		.loc 1 1034 0
 1332 0004 034B     		ldr	r3, .L91
 1333 0006 1B68     		ldr	r3, [r3]
 1334 0008 1B04     		lsl	r3, r3, #16
 1335 000a 1B0C     		lsr	r3, r3, #16
1035:.\Generated_Source\PSoC4/PWM_1.c **** }
 1336              		.loc 1 1035 0
 1337 000c 181C     		mov	r0, r3
 1338 000e BD46     		mov	sp, r7
 1339              		@ sp needed
 1340 0010 80BD     		pop	{r7, pc}
 1341              	.L92:
 1342 0012 C046     		.align	2
 1343              	.L91:
 1344 0014 50010540 		.word	1074069840
 1345              		.cfi_endproc
 1346              	.LFE27:
 1347              		.size	PWM_1_ReadCaptureBuf, .-PWM_1_ReadCaptureBuf
 1348              		.section	.text.PWM_1_SetCaptureMode,"ax",%progbits
 1349              		.align	2
 1350              		.global	PWM_1_SetCaptureMode
 1351              		.code	16
 1352              		.thumb_func
 1353              		.type	PWM_1_SetCaptureMode, %function
 1354              	PWM_1_SetCaptureMode:
 1355              	.LFB28:
1036:.\Generated_Source\PSoC4/PWM_1.c **** 
1037:.\Generated_Source\PSoC4/PWM_1.c **** 
1038:.\Generated_Source\PSoC4/PWM_1.c **** /*******************************************************************************
1039:.\Generated_Source\PSoC4/PWM_1.c **** * Function Name: PWM_1_SetCaptureMode
ARM GAS  C:\Users\TINYWI~1\AppData\Local\Temp\ccrliPYO.s 			page 43


1040:.\Generated_Source\PSoC4/PWM_1.c **** ********************************************************************************
1041:.\Generated_Source\PSoC4/PWM_1.c **** *
1042:.\Generated_Source\PSoC4/PWM_1.c **** * Summary:
1043:.\Generated_Source\PSoC4/PWM_1.c **** *  Sets the capture trigger mode. For PWM mode this is the switch input.
1044:.\Generated_Source\PSoC4/PWM_1.c **** *  This input is not applicable to the Timer/Counter without Capture and
1045:.\Generated_Source\PSoC4/PWM_1.c **** *  Quadrature Decoder modes.
1046:.\Generated_Source\PSoC4/PWM_1.c **** *
1047:.\Generated_Source\PSoC4/PWM_1.c **** * Parameters:
1048:.\Generated_Source\PSoC4/PWM_1.c **** *  triggerMode: Enumerated trigger mode value
1049:.\Generated_Source\PSoC4/PWM_1.c **** *   Values:
1050:.\Generated_Source\PSoC4/PWM_1.c **** *     - PWM_1_TRIG_LEVEL     - Level
1051:.\Generated_Source\PSoC4/PWM_1.c **** *     - PWM_1_TRIG_RISING    - Rising edge
1052:.\Generated_Source\PSoC4/PWM_1.c **** *     - PWM_1_TRIG_FALLING   - Falling edge
1053:.\Generated_Source\PSoC4/PWM_1.c **** *     - PWM_1_TRIG_BOTH      - Both rising and falling edge
1054:.\Generated_Source\PSoC4/PWM_1.c **** *
1055:.\Generated_Source\PSoC4/PWM_1.c **** * Return:
1056:.\Generated_Source\PSoC4/PWM_1.c **** *  None
1057:.\Generated_Source\PSoC4/PWM_1.c **** *
1058:.\Generated_Source\PSoC4/PWM_1.c **** *******************************************************************************/
1059:.\Generated_Source\PSoC4/PWM_1.c **** void PWM_1_SetCaptureMode(uint32 triggerMode)
1060:.\Generated_Source\PSoC4/PWM_1.c **** {
 1356              		.loc 1 1060 0
 1357              		.cfi_startproc
 1358 0000 90B5     		push	{r4, r7, lr}
 1359              		.cfi_def_cfa_offset 12
 1360              		.cfi_offset 4, -12
 1361              		.cfi_offset 7, -8
 1362              		.cfi_offset 14, -4
 1363 0002 85B0     		sub	sp, sp, #20
 1364              		.cfi_def_cfa_offset 32
 1365 0004 00AF     		add	r7, sp, #0
 1366              		.cfi_def_cfa_register 7
 1367 0006 7860     		str	r0, [r7, #4]
1061:.\Generated_Source\PSoC4/PWM_1.c ****     uint8 enableInterrupts;
1062:.\Generated_Source\PSoC4/PWM_1.c **** 
1063:.\Generated_Source\PSoC4/PWM_1.c ****     enableInterrupts = CyEnterCriticalSection();
 1368              		.loc 1 1063 0
 1369 0008 3C1C     		mov	r4, r7
 1370 000a 0F34     		add	r4, r4, #15
 1371 000c FFF7FEFF 		bl	CyEnterCriticalSection
 1372 0010 031C     		mov	r3, r0
 1373 0012 2370     		strb	r3, [r4]
1064:.\Generated_Source\PSoC4/PWM_1.c **** 
1065:.\Generated_Source\PSoC4/PWM_1.c ****     PWM_1_TRIG_CONTROL1_REG &= (uint32)~PWM_1_CAPTURE_MASK;
 1374              		.loc 1 1065 0
 1375 0014 0A4B     		ldr	r3, .L94
 1376 0016 0A4A     		ldr	r2, .L94
 1377 0018 1268     		ldr	r2, [r2]
 1378 001a 0321     		mov	r1, #3
 1379 001c 8A43     		bic	r2, r1
 1380 001e 1A60     		str	r2, [r3]
1066:.\Generated_Source\PSoC4/PWM_1.c ****     PWM_1_TRIG_CONTROL1_REG |= triggerMode;
 1381              		.loc 1 1066 0
 1382 0020 074B     		ldr	r3, .L94
 1383 0022 074A     		ldr	r2, .L94
 1384 0024 1168     		ldr	r1, [r2]
 1385 0026 7A68     		ldr	r2, [r7, #4]
ARM GAS  C:\Users\TINYWI~1\AppData\Local\Temp\ccrliPYO.s 			page 44


 1386 0028 0A43     		orr	r2, r1
 1387 002a 1A60     		str	r2, [r3]
1067:.\Generated_Source\PSoC4/PWM_1.c **** 
1068:.\Generated_Source\PSoC4/PWM_1.c ****     CyExitCriticalSection(enableInterrupts);
 1388              		.loc 1 1068 0
 1389 002c 3B1C     		mov	r3, r7
 1390 002e 0F33     		add	r3, r3, #15
 1391 0030 1B78     		ldrb	r3, [r3]
 1392 0032 181C     		mov	r0, r3
 1393 0034 FFF7FEFF 		bl	CyExitCriticalSection
1069:.\Generated_Source\PSoC4/PWM_1.c **** }
 1394              		.loc 1 1069 0
 1395 0038 BD46     		mov	sp, r7
 1396 003a 05B0     		add	sp, sp, #20
 1397              		@ sp needed
 1398 003c 90BD     		pop	{r4, r7, pc}
 1399              	.L95:
 1400 003e C046     		.align	2
 1401              	.L94:
 1402 0040 64010540 		.word	1074069860
 1403              		.cfi_endproc
 1404              	.LFE28:
 1405              		.size	PWM_1_SetCaptureMode, .-PWM_1_SetCaptureMode
 1406              		.section	.text.PWM_1_SetReloadMode,"ax",%progbits
 1407              		.align	2
 1408              		.global	PWM_1_SetReloadMode
 1409              		.code	16
 1410              		.thumb_func
 1411              		.type	PWM_1_SetReloadMode, %function
 1412              	PWM_1_SetReloadMode:
 1413              	.LFB29:
1070:.\Generated_Source\PSoC4/PWM_1.c **** 
1071:.\Generated_Source\PSoC4/PWM_1.c **** 
1072:.\Generated_Source\PSoC4/PWM_1.c **** /*******************************************************************************
1073:.\Generated_Source\PSoC4/PWM_1.c **** * Function Name: PWM_1_SetReloadMode
1074:.\Generated_Source\PSoC4/PWM_1.c **** ********************************************************************************
1075:.\Generated_Source\PSoC4/PWM_1.c **** *
1076:.\Generated_Source\PSoC4/PWM_1.c **** * Summary:
1077:.\Generated_Source\PSoC4/PWM_1.c **** *  Sets the reload trigger mode. For Quadrature Decoder mode this is the index
1078:.\Generated_Source\PSoC4/PWM_1.c **** *  input.
1079:.\Generated_Source\PSoC4/PWM_1.c **** *
1080:.\Generated_Source\PSoC4/PWM_1.c **** * Parameters:
1081:.\Generated_Source\PSoC4/PWM_1.c **** *  triggerMode: Enumerated trigger mode value
1082:.\Generated_Source\PSoC4/PWM_1.c **** *   Values:
1083:.\Generated_Source\PSoC4/PWM_1.c **** *     - PWM_1_TRIG_LEVEL     - Level
1084:.\Generated_Source\PSoC4/PWM_1.c **** *     - PWM_1_TRIG_RISING    - Rising edge
1085:.\Generated_Source\PSoC4/PWM_1.c **** *     - PWM_1_TRIG_FALLING   - Falling edge
1086:.\Generated_Source\PSoC4/PWM_1.c **** *     - PWM_1_TRIG_BOTH      - Both rising and falling edge
1087:.\Generated_Source\PSoC4/PWM_1.c **** *
1088:.\Generated_Source\PSoC4/PWM_1.c **** * Return:
1089:.\Generated_Source\PSoC4/PWM_1.c **** *  None
1090:.\Generated_Source\PSoC4/PWM_1.c **** *
1091:.\Generated_Source\PSoC4/PWM_1.c **** *******************************************************************************/
1092:.\Generated_Source\PSoC4/PWM_1.c **** void PWM_1_SetReloadMode(uint32 triggerMode)
1093:.\Generated_Source\PSoC4/PWM_1.c **** {
 1414              		.loc 1 1093 0
 1415              		.cfi_startproc
ARM GAS  C:\Users\TINYWI~1\AppData\Local\Temp\ccrliPYO.s 			page 45


 1416 0000 90B5     		push	{r4, r7, lr}
 1417              		.cfi_def_cfa_offset 12
 1418              		.cfi_offset 4, -12
 1419              		.cfi_offset 7, -8
 1420              		.cfi_offset 14, -4
 1421 0002 85B0     		sub	sp, sp, #20
 1422              		.cfi_def_cfa_offset 32
 1423 0004 00AF     		add	r7, sp, #0
 1424              		.cfi_def_cfa_register 7
 1425 0006 7860     		str	r0, [r7, #4]
1094:.\Generated_Source\PSoC4/PWM_1.c ****     uint8 enableInterrupts;
1095:.\Generated_Source\PSoC4/PWM_1.c **** 
1096:.\Generated_Source\PSoC4/PWM_1.c ****     enableInterrupts = CyEnterCriticalSection();
 1426              		.loc 1 1096 0
 1427 0008 3C1C     		mov	r4, r7
 1428 000a 0F34     		add	r4, r4, #15
 1429 000c FFF7FEFF 		bl	CyEnterCriticalSection
 1430 0010 031C     		mov	r3, r0
 1431 0012 2370     		strb	r3, [r4]
1097:.\Generated_Source\PSoC4/PWM_1.c **** 
1098:.\Generated_Source\PSoC4/PWM_1.c ****     PWM_1_TRIG_CONTROL1_REG &= (uint32)~PWM_1_RELOAD_MASK;
 1432              		.loc 1 1098 0
 1433 0014 0A4B     		ldr	r3, .L97
 1434 0016 0A4A     		ldr	r2, .L97
 1435 0018 1268     		ldr	r2, [r2]
 1436 001a 3021     		mov	r1, #48
 1437 001c 8A43     		bic	r2, r1
 1438 001e 1A60     		str	r2, [r3]
1099:.\Generated_Source\PSoC4/PWM_1.c ****     PWM_1_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << PWM_1_RELOAD_SHIFT));
 1439              		.loc 1 1099 0
 1440 0020 074B     		ldr	r3, .L97
 1441 0022 074A     		ldr	r2, .L97
 1442 0024 1168     		ldr	r1, [r2]
 1443 0026 7A68     		ldr	r2, [r7, #4]
 1444 0028 1201     		lsl	r2, r2, #4
 1445 002a 0A43     		orr	r2, r1
 1446 002c 1A60     		str	r2, [r3]
1100:.\Generated_Source\PSoC4/PWM_1.c **** 
1101:.\Generated_Source\PSoC4/PWM_1.c ****     CyExitCriticalSection(enableInterrupts);
 1447              		.loc 1 1101 0
 1448 002e 3B1C     		mov	r3, r7
 1449 0030 0F33     		add	r3, r3, #15
 1450 0032 1B78     		ldrb	r3, [r3]
 1451 0034 181C     		mov	r0, r3
 1452 0036 FFF7FEFF 		bl	CyExitCriticalSection
1102:.\Generated_Source\PSoC4/PWM_1.c **** }
 1453              		.loc 1 1102 0
 1454 003a BD46     		mov	sp, r7
 1455 003c 05B0     		add	sp, sp, #20
 1456              		@ sp needed
 1457 003e 90BD     		pop	{r4, r7, pc}
 1458              	.L98:
 1459              		.align	2
 1460              	.L97:
 1461 0040 64010540 		.word	1074069860
 1462              		.cfi_endproc
 1463              	.LFE29:
ARM GAS  C:\Users\TINYWI~1\AppData\Local\Temp\ccrliPYO.s 			page 46


 1464              		.size	PWM_1_SetReloadMode, .-PWM_1_SetReloadMode
 1465              		.section	.text.PWM_1_SetStartMode,"ax",%progbits
 1466              		.align	2
 1467              		.global	PWM_1_SetStartMode
 1468              		.code	16
 1469              		.thumb_func
 1470              		.type	PWM_1_SetStartMode, %function
 1471              	PWM_1_SetStartMode:
 1472              	.LFB30:
1103:.\Generated_Source\PSoC4/PWM_1.c **** 
1104:.\Generated_Source\PSoC4/PWM_1.c **** 
1105:.\Generated_Source\PSoC4/PWM_1.c **** /*******************************************************************************
1106:.\Generated_Source\PSoC4/PWM_1.c **** * Function Name: PWM_1_SetStartMode
1107:.\Generated_Source\PSoC4/PWM_1.c **** ********************************************************************************
1108:.\Generated_Source\PSoC4/PWM_1.c **** *
1109:.\Generated_Source\PSoC4/PWM_1.c **** * Summary:
1110:.\Generated_Source\PSoC4/PWM_1.c **** *  Sets the start trigger mode. For Quadrature Decoder mode this is the
1111:.\Generated_Source\PSoC4/PWM_1.c **** *  phiB input.
1112:.\Generated_Source\PSoC4/PWM_1.c **** *
1113:.\Generated_Source\PSoC4/PWM_1.c **** * Parameters:
1114:.\Generated_Source\PSoC4/PWM_1.c **** *  triggerMode: Enumerated trigger mode value
1115:.\Generated_Source\PSoC4/PWM_1.c **** *   Values:
1116:.\Generated_Source\PSoC4/PWM_1.c **** *     - PWM_1_TRIG_LEVEL     - Level
1117:.\Generated_Source\PSoC4/PWM_1.c **** *     - PWM_1_TRIG_RISING    - Rising edge
1118:.\Generated_Source\PSoC4/PWM_1.c **** *     - PWM_1_TRIG_FALLING   - Falling edge
1119:.\Generated_Source\PSoC4/PWM_1.c **** *     - PWM_1_TRIG_BOTH      - Both rising and falling edge
1120:.\Generated_Source\PSoC4/PWM_1.c **** *
1121:.\Generated_Source\PSoC4/PWM_1.c **** * Return:
1122:.\Generated_Source\PSoC4/PWM_1.c **** *  None
1123:.\Generated_Source\PSoC4/PWM_1.c **** *
1124:.\Generated_Source\PSoC4/PWM_1.c **** *******************************************************************************/
1125:.\Generated_Source\PSoC4/PWM_1.c **** void PWM_1_SetStartMode(uint32 triggerMode)
1126:.\Generated_Source\PSoC4/PWM_1.c **** {
 1473              		.loc 1 1126 0
 1474              		.cfi_startproc
 1475 0000 90B5     		push	{r4, r7, lr}
 1476              		.cfi_def_cfa_offset 12
 1477              		.cfi_offset 4, -12
 1478              		.cfi_offset 7, -8
 1479              		.cfi_offset 14, -4
 1480 0002 85B0     		sub	sp, sp, #20
 1481              		.cfi_def_cfa_offset 32
 1482 0004 00AF     		add	r7, sp, #0
 1483              		.cfi_def_cfa_register 7
 1484 0006 7860     		str	r0, [r7, #4]
1127:.\Generated_Source\PSoC4/PWM_1.c ****     uint8 enableInterrupts;
1128:.\Generated_Source\PSoC4/PWM_1.c **** 
1129:.\Generated_Source\PSoC4/PWM_1.c ****     enableInterrupts = CyEnterCriticalSection();
 1485              		.loc 1 1129 0
 1486 0008 3C1C     		mov	r4, r7
 1487 000a 0F34     		add	r4, r4, #15
 1488 000c FFF7FEFF 		bl	CyEnterCriticalSection
 1489 0010 031C     		mov	r3, r0
 1490 0012 2370     		strb	r3, [r4]
1130:.\Generated_Source\PSoC4/PWM_1.c **** 
1131:.\Generated_Source\PSoC4/PWM_1.c ****     PWM_1_TRIG_CONTROL1_REG &= (uint32)~PWM_1_START_MASK;
 1491              		.loc 1 1131 0
ARM GAS  C:\Users\TINYWI~1\AppData\Local\Temp\ccrliPYO.s 			page 47


 1492 0014 0A4B     		ldr	r3, .L100
 1493 0016 0A4A     		ldr	r2, .L100
 1494 0018 1168     		ldr	r1, [r2]
 1495 001a 0A4A     		ldr	r2, .L100+4
 1496 001c 0A40     		and	r2, r1
 1497 001e 1A60     		str	r2, [r3]
1132:.\Generated_Source\PSoC4/PWM_1.c ****     PWM_1_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << PWM_1_START_SHIFT));
 1498              		.loc 1 1132 0
 1499 0020 074B     		ldr	r3, .L100
 1500 0022 074A     		ldr	r2, .L100
 1501 0024 1168     		ldr	r1, [r2]
 1502 0026 7A68     		ldr	r2, [r7, #4]
 1503 0028 1202     		lsl	r2, r2, #8
 1504 002a 0A43     		orr	r2, r1
 1505 002c 1A60     		str	r2, [r3]
1133:.\Generated_Source\PSoC4/PWM_1.c **** 
1134:.\Generated_Source\PSoC4/PWM_1.c ****     CyExitCriticalSection(enableInterrupts);
 1506              		.loc 1 1134 0
 1507 002e 3B1C     		mov	r3, r7
 1508 0030 0F33     		add	r3, r3, #15
 1509 0032 1B78     		ldrb	r3, [r3]
 1510 0034 181C     		mov	r0, r3
 1511 0036 FFF7FEFF 		bl	CyExitCriticalSection
1135:.\Generated_Source\PSoC4/PWM_1.c **** }
 1512              		.loc 1 1135 0
 1513 003a BD46     		mov	sp, r7
 1514 003c 05B0     		add	sp, sp, #20
 1515              		@ sp needed
 1516 003e 90BD     		pop	{r4, r7, pc}
 1517              	.L101:
 1518              		.align	2
 1519              	.L100:
 1520 0040 64010540 		.word	1074069860
 1521 0044 FFFCFFFF 		.word	-769
 1522              		.cfi_endproc
 1523              	.LFE30:
 1524              		.size	PWM_1_SetStartMode, .-PWM_1_SetStartMode
 1525              		.section	.text.PWM_1_SetStopMode,"ax",%progbits
 1526              		.align	2
 1527              		.global	PWM_1_SetStopMode
 1528              		.code	16
 1529              		.thumb_func
 1530              		.type	PWM_1_SetStopMode, %function
 1531              	PWM_1_SetStopMode:
 1532              	.LFB31:
1136:.\Generated_Source\PSoC4/PWM_1.c **** 
1137:.\Generated_Source\PSoC4/PWM_1.c **** 
1138:.\Generated_Source\PSoC4/PWM_1.c **** /*******************************************************************************
1139:.\Generated_Source\PSoC4/PWM_1.c **** * Function Name: PWM_1_SetStopMode
1140:.\Generated_Source\PSoC4/PWM_1.c **** ********************************************************************************
1141:.\Generated_Source\PSoC4/PWM_1.c **** *
1142:.\Generated_Source\PSoC4/PWM_1.c **** * Summary:
1143:.\Generated_Source\PSoC4/PWM_1.c **** *  Sets the stop trigger mode. For PWM mode this is the kill input.
1144:.\Generated_Source\PSoC4/PWM_1.c **** *
1145:.\Generated_Source\PSoC4/PWM_1.c **** * Parameters:
1146:.\Generated_Source\PSoC4/PWM_1.c **** *  triggerMode: Enumerated trigger mode value
1147:.\Generated_Source\PSoC4/PWM_1.c **** *   Values:
ARM GAS  C:\Users\TINYWI~1\AppData\Local\Temp\ccrliPYO.s 			page 48


1148:.\Generated_Source\PSoC4/PWM_1.c **** *     - PWM_1_TRIG_LEVEL     - Level
1149:.\Generated_Source\PSoC4/PWM_1.c **** *     - PWM_1_TRIG_RISING    - Rising edge
1150:.\Generated_Source\PSoC4/PWM_1.c **** *     - PWM_1_TRIG_FALLING   - Falling edge
1151:.\Generated_Source\PSoC4/PWM_1.c **** *     - PWM_1_TRIG_BOTH      - Both rising and falling edge
1152:.\Generated_Source\PSoC4/PWM_1.c **** *
1153:.\Generated_Source\PSoC4/PWM_1.c **** * Return:
1154:.\Generated_Source\PSoC4/PWM_1.c **** *  None
1155:.\Generated_Source\PSoC4/PWM_1.c **** *
1156:.\Generated_Source\PSoC4/PWM_1.c **** *******************************************************************************/
1157:.\Generated_Source\PSoC4/PWM_1.c **** void PWM_1_SetStopMode(uint32 triggerMode)
1158:.\Generated_Source\PSoC4/PWM_1.c **** {
 1533              		.loc 1 1158 0
 1534              		.cfi_startproc
 1535 0000 90B5     		push	{r4, r7, lr}
 1536              		.cfi_def_cfa_offset 12
 1537              		.cfi_offset 4, -12
 1538              		.cfi_offset 7, -8
 1539              		.cfi_offset 14, -4
 1540 0002 85B0     		sub	sp, sp, #20
 1541              		.cfi_def_cfa_offset 32
 1542 0004 00AF     		add	r7, sp, #0
 1543              		.cfi_def_cfa_register 7
 1544 0006 7860     		str	r0, [r7, #4]
1159:.\Generated_Source\PSoC4/PWM_1.c ****     uint8 enableInterrupts;
1160:.\Generated_Source\PSoC4/PWM_1.c **** 
1161:.\Generated_Source\PSoC4/PWM_1.c ****     enableInterrupts = CyEnterCriticalSection();
 1545              		.loc 1 1161 0
 1546 0008 3C1C     		mov	r4, r7
 1547 000a 0F34     		add	r4, r4, #15
 1548 000c FFF7FEFF 		bl	CyEnterCriticalSection
 1549 0010 031C     		mov	r3, r0
 1550 0012 2370     		strb	r3, [r4]
1162:.\Generated_Source\PSoC4/PWM_1.c **** 
1163:.\Generated_Source\PSoC4/PWM_1.c ****     PWM_1_TRIG_CONTROL1_REG &= (uint32)~PWM_1_STOP_MASK;
 1551              		.loc 1 1163 0
 1552 0014 0A4B     		ldr	r3, .L103
 1553 0016 0A4A     		ldr	r2, .L103
 1554 0018 1268     		ldr	r2, [r2]
 1555 001a C021     		mov	r1, #192
 1556 001c 8A43     		bic	r2, r1
 1557 001e 1A60     		str	r2, [r3]
1164:.\Generated_Source\PSoC4/PWM_1.c ****     PWM_1_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << PWM_1_STOP_SHIFT));
 1558              		.loc 1 1164 0
 1559 0020 074B     		ldr	r3, .L103
 1560 0022 074A     		ldr	r2, .L103
 1561 0024 1168     		ldr	r1, [r2]
 1562 0026 7A68     		ldr	r2, [r7, #4]
 1563 0028 9201     		lsl	r2, r2, #6
 1564 002a 0A43     		orr	r2, r1
 1565 002c 1A60     		str	r2, [r3]
1165:.\Generated_Source\PSoC4/PWM_1.c **** 
1166:.\Generated_Source\PSoC4/PWM_1.c ****     CyExitCriticalSection(enableInterrupts);
 1566              		.loc 1 1166 0
 1567 002e 3B1C     		mov	r3, r7
 1568 0030 0F33     		add	r3, r3, #15
 1569 0032 1B78     		ldrb	r3, [r3]
 1570 0034 181C     		mov	r0, r3
ARM GAS  C:\Users\TINYWI~1\AppData\Local\Temp\ccrliPYO.s 			page 49


 1571 0036 FFF7FEFF 		bl	CyExitCriticalSection
1167:.\Generated_Source\PSoC4/PWM_1.c **** }
 1572              		.loc 1 1167 0
 1573 003a BD46     		mov	sp, r7
 1574 003c 05B0     		add	sp, sp, #20
 1575              		@ sp needed
 1576 003e 90BD     		pop	{r4, r7, pc}
 1577              	.L104:
 1578              		.align	2
 1579              	.L103:
 1580 0040 64010540 		.word	1074069860
 1581              		.cfi_endproc
 1582              	.LFE31:
 1583              		.size	PWM_1_SetStopMode, .-PWM_1_SetStopMode
 1584              		.section	.text.PWM_1_SetCountMode,"ax",%progbits
 1585              		.align	2
 1586              		.global	PWM_1_SetCountMode
 1587              		.code	16
 1588              		.thumb_func
 1589              		.type	PWM_1_SetCountMode, %function
 1590              	PWM_1_SetCountMode:
 1591              	.LFB32:
1168:.\Generated_Source\PSoC4/PWM_1.c **** 
1169:.\Generated_Source\PSoC4/PWM_1.c **** 
1170:.\Generated_Source\PSoC4/PWM_1.c **** /*******************************************************************************
1171:.\Generated_Source\PSoC4/PWM_1.c **** * Function Name: PWM_1_SetCountMode
1172:.\Generated_Source\PSoC4/PWM_1.c **** ********************************************************************************
1173:.\Generated_Source\PSoC4/PWM_1.c **** *
1174:.\Generated_Source\PSoC4/PWM_1.c **** * Summary:
1175:.\Generated_Source\PSoC4/PWM_1.c **** *  Sets the count trigger mode. For Quadrature Decoder mode this is the phiA
1176:.\Generated_Source\PSoC4/PWM_1.c **** *  input.
1177:.\Generated_Source\PSoC4/PWM_1.c **** *
1178:.\Generated_Source\PSoC4/PWM_1.c **** * Parameters:
1179:.\Generated_Source\PSoC4/PWM_1.c **** *  triggerMode: Enumerated trigger mode value
1180:.\Generated_Source\PSoC4/PWM_1.c **** *   Values:
1181:.\Generated_Source\PSoC4/PWM_1.c **** *     - PWM_1_TRIG_LEVEL     - Level
1182:.\Generated_Source\PSoC4/PWM_1.c **** *     - PWM_1_TRIG_RISING    - Rising edge
1183:.\Generated_Source\PSoC4/PWM_1.c **** *     - PWM_1_TRIG_FALLING   - Falling edge
1184:.\Generated_Source\PSoC4/PWM_1.c **** *     - PWM_1_TRIG_BOTH      - Both rising and falling edge
1185:.\Generated_Source\PSoC4/PWM_1.c **** *
1186:.\Generated_Source\PSoC4/PWM_1.c **** * Return:
1187:.\Generated_Source\PSoC4/PWM_1.c **** *  None
1188:.\Generated_Source\PSoC4/PWM_1.c **** *
1189:.\Generated_Source\PSoC4/PWM_1.c **** *******************************************************************************/
1190:.\Generated_Source\PSoC4/PWM_1.c **** void PWM_1_SetCountMode(uint32 triggerMode)
1191:.\Generated_Source\PSoC4/PWM_1.c **** {
 1592              		.loc 1 1191 0
 1593              		.cfi_startproc
 1594 0000 90B5     		push	{r4, r7, lr}
 1595              		.cfi_def_cfa_offset 12
 1596              		.cfi_offset 4, -12
 1597              		.cfi_offset 7, -8
 1598              		.cfi_offset 14, -4
 1599 0002 85B0     		sub	sp, sp, #20
 1600              		.cfi_def_cfa_offset 32
 1601 0004 00AF     		add	r7, sp, #0
 1602              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\TINYWI~1\AppData\Local\Temp\ccrliPYO.s 			page 50


 1603 0006 7860     		str	r0, [r7, #4]
1192:.\Generated_Source\PSoC4/PWM_1.c ****     uint8 enableInterrupts;
1193:.\Generated_Source\PSoC4/PWM_1.c **** 
1194:.\Generated_Source\PSoC4/PWM_1.c ****     enableInterrupts = CyEnterCriticalSection();
 1604              		.loc 1 1194 0
 1605 0008 3C1C     		mov	r4, r7
 1606 000a 0F34     		add	r4, r4, #15
 1607 000c FFF7FEFF 		bl	CyEnterCriticalSection
 1608 0010 031C     		mov	r3, r0
 1609 0012 2370     		strb	r3, [r4]
1195:.\Generated_Source\PSoC4/PWM_1.c **** 
1196:.\Generated_Source\PSoC4/PWM_1.c ****     PWM_1_TRIG_CONTROL1_REG &= (uint32)~PWM_1_COUNT_MASK;
 1610              		.loc 1 1196 0
 1611 0014 0A4B     		ldr	r3, .L106
 1612 0016 0A4A     		ldr	r2, .L106
 1613 0018 1268     		ldr	r2, [r2]
 1614 001a 0C21     		mov	r1, #12
 1615 001c 8A43     		bic	r2, r1
 1616 001e 1A60     		str	r2, [r3]
1197:.\Generated_Source\PSoC4/PWM_1.c ****     PWM_1_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << PWM_1_COUNT_SHIFT));
 1617              		.loc 1 1197 0
 1618 0020 074B     		ldr	r3, .L106
 1619 0022 074A     		ldr	r2, .L106
 1620 0024 1168     		ldr	r1, [r2]
 1621 0026 7A68     		ldr	r2, [r7, #4]
 1622 0028 9200     		lsl	r2, r2, #2
 1623 002a 0A43     		orr	r2, r1
 1624 002c 1A60     		str	r2, [r3]
1198:.\Generated_Source\PSoC4/PWM_1.c **** 
1199:.\Generated_Source\PSoC4/PWM_1.c ****     CyExitCriticalSection(enableInterrupts);
 1625              		.loc 1 1199 0
 1626 002e 3B1C     		mov	r3, r7
 1627 0030 0F33     		add	r3, r3, #15
 1628 0032 1B78     		ldrb	r3, [r3]
 1629 0034 181C     		mov	r0, r3
 1630 0036 FFF7FEFF 		bl	CyExitCriticalSection
1200:.\Generated_Source\PSoC4/PWM_1.c **** }
 1631              		.loc 1 1200 0
 1632 003a BD46     		mov	sp, r7
 1633 003c 05B0     		add	sp, sp, #20
 1634              		@ sp needed
 1635 003e 90BD     		pop	{r4, r7, pc}
 1636              	.L107:
 1637              		.align	2
 1638              	.L106:
 1639 0040 64010540 		.word	1074069860
 1640              		.cfi_endproc
 1641              	.LFE32:
 1642              		.size	PWM_1_SetCountMode, .-PWM_1_SetCountMode
 1643              		.section	.text.PWM_1_TriggerCommand,"ax",%progbits
 1644              		.align	2
 1645              		.global	PWM_1_TriggerCommand
 1646              		.code	16
 1647              		.thumb_func
 1648              		.type	PWM_1_TriggerCommand, %function
 1649              	PWM_1_TriggerCommand:
 1650              	.LFB33:
ARM GAS  C:\Users\TINYWI~1\AppData\Local\Temp\ccrliPYO.s 			page 51


1201:.\Generated_Source\PSoC4/PWM_1.c **** 
1202:.\Generated_Source\PSoC4/PWM_1.c **** 
1203:.\Generated_Source\PSoC4/PWM_1.c **** /*******************************************************************************
1204:.\Generated_Source\PSoC4/PWM_1.c **** * Function Name: PWM_1_TriggerCommand
1205:.\Generated_Source\PSoC4/PWM_1.c **** ********************************************************************************
1206:.\Generated_Source\PSoC4/PWM_1.c **** *
1207:.\Generated_Source\PSoC4/PWM_1.c **** * Summary:
1208:.\Generated_Source\PSoC4/PWM_1.c **** *  Triggers the designated command to occur on the designated TCPWM instances.
1209:.\Generated_Source\PSoC4/PWM_1.c **** *  The mask can be used to apply this command simultaneously to more than one
1210:.\Generated_Source\PSoC4/PWM_1.c **** *  instance.  This allows multiple TCPWM instances to be synchronized.
1211:.\Generated_Source\PSoC4/PWM_1.c **** *
1212:.\Generated_Source\PSoC4/PWM_1.c **** * Parameters:
1213:.\Generated_Source\PSoC4/PWM_1.c **** *  mask: A combination of mask bits for each instance of the TCPWM that the
1214:.\Generated_Source\PSoC4/PWM_1.c **** *        command should apply to.  This function from one instance can be used
1215:.\Generated_Source\PSoC4/PWM_1.c **** *        to apply the command to any of the instances in the design.
1216:.\Generated_Source\PSoC4/PWM_1.c **** *        The mask value for a specific instance is available with the MASK
1217:.\Generated_Source\PSoC4/PWM_1.c **** *        define.
1218:.\Generated_Source\PSoC4/PWM_1.c **** *  command: Enumerated command values. Capture command only applicable for
1219:.\Generated_Source\PSoC4/PWM_1.c **** *           Timer/Counter with Capture and PWM modes.
1220:.\Generated_Source\PSoC4/PWM_1.c **** *   Values:
1221:.\Generated_Source\PSoC4/PWM_1.c **** *     - PWM_1_CMD_CAPTURE    - Trigger Capture command
1222:.\Generated_Source\PSoC4/PWM_1.c **** *     - PWM_1_CMD_RELOAD     - Trigger Reload command
1223:.\Generated_Source\PSoC4/PWM_1.c **** *     - PWM_1_CMD_STOP       - Trigger Stop command
1224:.\Generated_Source\PSoC4/PWM_1.c **** *     - PWM_1_CMD_START      - Trigger Start command
1225:.\Generated_Source\PSoC4/PWM_1.c **** *
1226:.\Generated_Source\PSoC4/PWM_1.c **** * Return:
1227:.\Generated_Source\PSoC4/PWM_1.c **** *  None
1228:.\Generated_Source\PSoC4/PWM_1.c **** *
1229:.\Generated_Source\PSoC4/PWM_1.c **** *******************************************************************************/
1230:.\Generated_Source\PSoC4/PWM_1.c **** void PWM_1_TriggerCommand(uint32 mask, uint32 command)
1231:.\Generated_Source\PSoC4/PWM_1.c **** {
 1651              		.loc 1 1231 0
 1652              		.cfi_startproc
 1653 0000 90B5     		push	{r4, r7, lr}
 1654              		.cfi_def_cfa_offset 12
 1655              		.cfi_offset 4, -12
 1656              		.cfi_offset 7, -8
 1657              		.cfi_offset 14, -4
 1658 0002 85B0     		sub	sp, sp, #20
 1659              		.cfi_def_cfa_offset 32
 1660 0004 00AF     		add	r7, sp, #0
 1661              		.cfi_def_cfa_register 7
 1662 0006 7860     		str	r0, [r7, #4]
 1663 0008 3960     		str	r1, [r7]
1232:.\Generated_Source\PSoC4/PWM_1.c ****     uint8 enableInterrupts;
1233:.\Generated_Source\PSoC4/PWM_1.c **** 
1234:.\Generated_Source\PSoC4/PWM_1.c ****     enableInterrupts = CyEnterCriticalSection();
 1664              		.loc 1 1234 0
 1665 000a 3C1C     		mov	r4, r7
 1666 000c 0F34     		add	r4, r4, #15
 1667 000e FFF7FEFF 		bl	CyEnterCriticalSection
 1668 0012 031C     		mov	r3, r0
 1669 0014 2370     		strb	r3, [r4]
1235:.\Generated_Source\PSoC4/PWM_1.c **** 
1236:.\Generated_Source\PSoC4/PWM_1.c ****     PWM_1_COMMAND_REG = ((uint32)(mask << command));
 1670              		.loc 1 1236 0
 1671 0016 084B     		ldr	r3, .L109
ARM GAS  C:\Users\TINYWI~1\AppData\Local\Temp\ccrliPYO.s 			page 52


 1672 0018 3A68     		ldr	r2, [r7]
 1673 001a 7968     		ldr	r1, [r7, #4]
 1674 001c 081C     		mov	r0, r1
 1675 001e 9040     		lsl	r0, r0, r2
 1676 0020 021C     		mov	r2, r0
 1677 0022 1A60     		str	r2, [r3]
1237:.\Generated_Source\PSoC4/PWM_1.c **** 
1238:.\Generated_Source\PSoC4/PWM_1.c ****     CyExitCriticalSection(enableInterrupts);
 1678              		.loc 1 1238 0
 1679 0024 3B1C     		mov	r3, r7
 1680 0026 0F33     		add	r3, r3, #15
 1681 0028 1B78     		ldrb	r3, [r3]
 1682 002a 181C     		mov	r0, r3
 1683 002c FFF7FEFF 		bl	CyExitCriticalSection
1239:.\Generated_Source\PSoC4/PWM_1.c **** }
 1684              		.loc 1 1239 0
 1685 0030 BD46     		mov	sp, r7
 1686 0032 05B0     		add	sp, sp, #20
 1687              		@ sp needed
 1688 0034 90BD     		pop	{r4, r7, pc}
 1689              	.L110:
 1690 0036 C046     		.align	2
 1691              	.L109:
 1692 0038 08000540 		.word	1074069512
 1693              		.cfi_endproc
 1694              	.LFE33:
 1695              		.size	PWM_1_TriggerCommand, .-PWM_1_TriggerCommand
 1696              		.section	.text.PWM_1_ReadStatus,"ax",%progbits
 1697              		.align	2
 1698              		.global	PWM_1_ReadStatus
 1699              		.code	16
 1700              		.thumb_func
 1701              		.type	PWM_1_ReadStatus, %function
 1702              	PWM_1_ReadStatus:
 1703              	.LFB34:
1240:.\Generated_Source\PSoC4/PWM_1.c **** 
1241:.\Generated_Source\PSoC4/PWM_1.c **** 
1242:.\Generated_Source\PSoC4/PWM_1.c **** /*******************************************************************************
1243:.\Generated_Source\PSoC4/PWM_1.c **** * Function Name: PWM_1_ReadStatus
1244:.\Generated_Source\PSoC4/PWM_1.c **** ********************************************************************************
1245:.\Generated_Source\PSoC4/PWM_1.c **** *
1246:.\Generated_Source\PSoC4/PWM_1.c **** * Summary:
1247:.\Generated_Source\PSoC4/PWM_1.c **** *  Reads the status of the PWM_1.
1248:.\Generated_Source\PSoC4/PWM_1.c **** *
1249:.\Generated_Source\PSoC4/PWM_1.c **** * Parameters:
1250:.\Generated_Source\PSoC4/PWM_1.c **** *  None
1251:.\Generated_Source\PSoC4/PWM_1.c **** *
1252:.\Generated_Source\PSoC4/PWM_1.c **** * Return:
1253:.\Generated_Source\PSoC4/PWM_1.c **** *  Status
1254:.\Generated_Source\PSoC4/PWM_1.c **** *   Values:
1255:.\Generated_Source\PSoC4/PWM_1.c **** *     - PWM_1_STATUS_DOWN    - Set if counting down
1256:.\Generated_Source\PSoC4/PWM_1.c **** *     - PWM_1_STATUS_RUNNING - Set if counter is running
1257:.\Generated_Source\PSoC4/PWM_1.c **** *
1258:.\Generated_Source\PSoC4/PWM_1.c **** *******************************************************************************/
1259:.\Generated_Source\PSoC4/PWM_1.c **** uint32 PWM_1_ReadStatus(void)
1260:.\Generated_Source\PSoC4/PWM_1.c **** {
 1704              		.loc 1 1260 0
ARM GAS  C:\Users\TINYWI~1\AppData\Local\Temp\ccrliPYO.s 			page 53


 1705              		.cfi_startproc
 1706 0000 80B5     		push	{r7, lr}
 1707              		.cfi_def_cfa_offset 8
 1708              		.cfi_offset 7, -8
 1709              		.cfi_offset 14, -4
 1710 0002 00AF     		add	r7, sp, #0
 1711              		.cfi_def_cfa_register 7
1261:.\Generated_Source\PSoC4/PWM_1.c ****     return ((PWM_1_STATUS_REG >> PWM_1_RUNNING_STATUS_SHIFT) |
 1712              		.loc 1 1261 0
 1713 0004 054B     		ldr	r3, .L113
 1714 0006 1B68     		ldr	r3, [r3]
 1715 0008 9A0F     		lsr	r2, r3, #30
1262:.\Generated_Source\PSoC4/PWM_1.c ****             (PWM_1_STATUS_REG & PWM_1_STATUS_DOWN));
 1716              		.loc 1 1262 0
 1717 000a 044B     		ldr	r3, .L113
 1718 000c 1968     		ldr	r1, [r3]
 1719 000e 0123     		mov	r3, #1
 1720 0010 0B40     		and	r3, r1
1261:.\Generated_Source\PSoC4/PWM_1.c ****     return ((PWM_1_STATUS_REG >> PWM_1_RUNNING_STATUS_SHIFT) |
 1721              		.loc 1 1261 0
 1722 0012 1343     		orr	r3, r2
1263:.\Generated_Source\PSoC4/PWM_1.c **** }
 1723              		.loc 1 1263 0
 1724 0014 181C     		mov	r0, r3
 1725 0016 BD46     		mov	sp, r7
 1726              		@ sp needed
 1727 0018 80BD     		pop	{r7, pc}
 1728              	.L114:
 1729 001a C046     		.align	2
 1730              	.L113:
 1731 001c 44010540 		.word	1074069828
 1732              		.cfi_endproc
 1733              	.LFE34:
 1734              		.size	PWM_1_ReadStatus, .-PWM_1_ReadStatus
 1735              		.section	.text.PWM_1_SetInterruptMode,"ax",%progbits
 1736              		.align	2
 1737              		.global	PWM_1_SetInterruptMode
 1738              		.code	16
 1739              		.thumb_func
 1740              		.type	PWM_1_SetInterruptMode, %function
 1741              	PWM_1_SetInterruptMode:
 1742              	.LFB35:
1264:.\Generated_Source\PSoC4/PWM_1.c **** 
1265:.\Generated_Source\PSoC4/PWM_1.c **** 
1266:.\Generated_Source\PSoC4/PWM_1.c **** /*******************************************************************************
1267:.\Generated_Source\PSoC4/PWM_1.c **** * Function Name: PWM_1_SetInterruptMode
1268:.\Generated_Source\PSoC4/PWM_1.c **** ********************************************************************************
1269:.\Generated_Source\PSoC4/PWM_1.c **** *
1270:.\Generated_Source\PSoC4/PWM_1.c **** * Summary:
1271:.\Generated_Source\PSoC4/PWM_1.c **** *  Sets the interrupt mask to control which interrupt
1272:.\Generated_Source\PSoC4/PWM_1.c **** *  requests generate the interrupt signal.
1273:.\Generated_Source\PSoC4/PWM_1.c **** *
1274:.\Generated_Source\PSoC4/PWM_1.c **** * Parameters:
1275:.\Generated_Source\PSoC4/PWM_1.c **** *   interruptMask: Mask of bits to be enabled
1276:.\Generated_Source\PSoC4/PWM_1.c **** *   Values:
1277:.\Generated_Source\PSoC4/PWM_1.c **** *     - PWM_1_INTR_MASK_TC       - Terminal count mask
1278:.\Generated_Source\PSoC4/PWM_1.c **** *     - PWM_1_INTR_MASK_CC_MATCH - Compare count / capture mask
ARM GAS  C:\Users\TINYWI~1\AppData\Local\Temp\ccrliPYO.s 			page 54


1279:.\Generated_Source\PSoC4/PWM_1.c **** *
1280:.\Generated_Source\PSoC4/PWM_1.c **** * Return:
1281:.\Generated_Source\PSoC4/PWM_1.c **** *  None
1282:.\Generated_Source\PSoC4/PWM_1.c **** *
1283:.\Generated_Source\PSoC4/PWM_1.c **** *******************************************************************************/
1284:.\Generated_Source\PSoC4/PWM_1.c **** void PWM_1_SetInterruptMode(uint32 interruptMask)
1285:.\Generated_Source\PSoC4/PWM_1.c **** {
 1743              		.loc 1 1285 0
 1744              		.cfi_startproc
 1745 0000 80B5     		push	{r7, lr}
 1746              		.cfi_def_cfa_offset 8
 1747              		.cfi_offset 7, -8
 1748              		.cfi_offset 14, -4
 1749 0002 82B0     		sub	sp, sp, #8
 1750              		.cfi_def_cfa_offset 16
 1751 0004 00AF     		add	r7, sp, #0
 1752              		.cfi_def_cfa_register 7
 1753 0006 7860     		str	r0, [r7, #4]
1286:.\Generated_Source\PSoC4/PWM_1.c ****     PWM_1_INTERRUPT_MASK_REG =  interruptMask;
 1754              		.loc 1 1286 0
 1755 0008 024B     		ldr	r3, .L116
 1756 000a 7A68     		ldr	r2, [r7, #4]
 1757 000c 1A60     		str	r2, [r3]
1287:.\Generated_Source\PSoC4/PWM_1.c **** }
 1758              		.loc 1 1287 0
 1759 000e BD46     		mov	sp, r7
 1760 0010 02B0     		add	sp, sp, #8
 1761              		@ sp needed
 1762 0012 80BD     		pop	{r7, pc}
 1763              	.L117:
 1764              		.align	2
 1765              	.L116:
 1766 0014 78010540 		.word	1074069880
 1767              		.cfi_endproc
 1768              	.LFE35:
 1769              		.size	PWM_1_SetInterruptMode, .-PWM_1_SetInterruptMode
 1770              		.section	.text.PWM_1_GetInterruptSourceMasked,"ax",%progbits
 1771              		.align	2
 1772              		.global	PWM_1_GetInterruptSourceMasked
 1773              		.code	16
 1774              		.thumb_func
 1775              		.type	PWM_1_GetInterruptSourceMasked, %function
 1776              	PWM_1_GetInterruptSourceMasked:
 1777              	.LFB36:
1288:.\Generated_Source\PSoC4/PWM_1.c **** 
1289:.\Generated_Source\PSoC4/PWM_1.c **** 
1290:.\Generated_Source\PSoC4/PWM_1.c **** /*******************************************************************************
1291:.\Generated_Source\PSoC4/PWM_1.c **** * Function Name: PWM_1_GetInterruptSourceMasked
1292:.\Generated_Source\PSoC4/PWM_1.c **** ********************************************************************************
1293:.\Generated_Source\PSoC4/PWM_1.c **** *
1294:.\Generated_Source\PSoC4/PWM_1.c **** * Summary:
1295:.\Generated_Source\PSoC4/PWM_1.c **** *  Gets the interrupt requests masked by the interrupt mask.
1296:.\Generated_Source\PSoC4/PWM_1.c **** *
1297:.\Generated_Source\PSoC4/PWM_1.c **** * Parameters:
1298:.\Generated_Source\PSoC4/PWM_1.c **** *   None
1299:.\Generated_Source\PSoC4/PWM_1.c **** *
1300:.\Generated_Source\PSoC4/PWM_1.c **** * Return:
ARM GAS  C:\Users\TINYWI~1\AppData\Local\Temp\ccrliPYO.s 			page 55


1301:.\Generated_Source\PSoC4/PWM_1.c **** *  Masked interrupt source
1302:.\Generated_Source\PSoC4/PWM_1.c **** *   Values:
1303:.\Generated_Source\PSoC4/PWM_1.c **** *     - PWM_1_INTR_MASK_TC       - Terminal count mask
1304:.\Generated_Source\PSoC4/PWM_1.c **** *     - PWM_1_INTR_MASK_CC_MATCH - Compare count / capture mask
1305:.\Generated_Source\PSoC4/PWM_1.c **** *
1306:.\Generated_Source\PSoC4/PWM_1.c **** *******************************************************************************/
1307:.\Generated_Source\PSoC4/PWM_1.c **** uint32 PWM_1_GetInterruptSourceMasked(void)
1308:.\Generated_Source\PSoC4/PWM_1.c **** {
 1778              		.loc 1 1308 0
 1779              		.cfi_startproc
 1780 0000 80B5     		push	{r7, lr}
 1781              		.cfi_def_cfa_offset 8
 1782              		.cfi_offset 7, -8
 1783              		.cfi_offset 14, -4
 1784 0002 00AF     		add	r7, sp, #0
 1785              		.cfi_def_cfa_register 7
1309:.\Generated_Source\PSoC4/PWM_1.c ****     return (PWM_1_INTERRUPT_MASKED_REG);
 1786              		.loc 1 1309 0
 1787 0004 024B     		ldr	r3, .L120
 1788 0006 1B68     		ldr	r3, [r3]
1310:.\Generated_Source\PSoC4/PWM_1.c **** }
 1789              		.loc 1 1310 0
 1790 0008 181C     		mov	r0, r3
 1791 000a BD46     		mov	sp, r7
 1792              		@ sp needed
 1793 000c 80BD     		pop	{r7, pc}
 1794              	.L121:
 1795 000e C046     		.align	2
 1796              	.L120:
 1797 0010 7C010540 		.word	1074069884
 1798              		.cfi_endproc
 1799              	.LFE36:
 1800              		.size	PWM_1_GetInterruptSourceMasked, .-PWM_1_GetInterruptSourceMasked
 1801              		.section	.text.PWM_1_GetInterruptSource,"ax",%progbits
 1802              		.align	2
 1803              		.global	PWM_1_GetInterruptSource
 1804              		.code	16
 1805              		.thumb_func
 1806              		.type	PWM_1_GetInterruptSource, %function
 1807              	PWM_1_GetInterruptSource:
 1808              	.LFB37:
1311:.\Generated_Source\PSoC4/PWM_1.c **** 
1312:.\Generated_Source\PSoC4/PWM_1.c **** 
1313:.\Generated_Source\PSoC4/PWM_1.c **** /*******************************************************************************
1314:.\Generated_Source\PSoC4/PWM_1.c **** * Function Name: PWM_1_GetInterruptSource
1315:.\Generated_Source\PSoC4/PWM_1.c **** ********************************************************************************
1316:.\Generated_Source\PSoC4/PWM_1.c **** *
1317:.\Generated_Source\PSoC4/PWM_1.c **** * Summary:
1318:.\Generated_Source\PSoC4/PWM_1.c **** *  Gets the interrupt requests (without masking).
1319:.\Generated_Source\PSoC4/PWM_1.c **** *
1320:.\Generated_Source\PSoC4/PWM_1.c **** * Parameters:
1321:.\Generated_Source\PSoC4/PWM_1.c **** *  None
1322:.\Generated_Source\PSoC4/PWM_1.c **** *
1323:.\Generated_Source\PSoC4/PWM_1.c **** * Return:
1324:.\Generated_Source\PSoC4/PWM_1.c **** *  Interrupt request value
1325:.\Generated_Source\PSoC4/PWM_1.c **** *   Values:
1326:.\Generated_Source\PSoC4/PWM_1.c **** *     - PWM_1_INTR_MASK_TC       - Terminal count mask
ARM GAS  C:\Users\TINYWI~1\AppData\Local\Temp\ccrliPYO.s 			page 56


1327:.\Generated_Source\PSoC4/PWM_1.c **** *     - PWM_1_INTR_MASK_CC_MATCH - Compare count / capture mask
1328:.\Generated_Source\PSoC4/PWM_1.c **** *
1329:.\Generated_Source\PSoC4/PWM_1.c **** *******************************************************************************/
1330:.\Generated_Source\PSoC4/PWM_1.c **** uint32 PWM_1_GetInterruptSource(void)
1331:.\Generated_Source\PSoC4/PWM_1.c **** {
 1809              		.loc 1 1331 0
 1810              		.cfi_startproc
 1811 0000 80B5     		push	{r7, lr}
 1812              		.cfi_def_cfa_offset 8
 1813              		.cfi_offset 7, -8
 1814              		.cfi_offset 14, -4
 1815 0002 00AF     		add	r7, sp, #0
 1816              		.cfi_def_cfa_register 7
1332:.\Generated_Source\PSoC4/PWM_1.c ****     return (PWM_1_INTERRUPT_REQ_REG);
 1817              		.loc 1 1332 0
 1818 0004 024B     		ldr	r3, .L124
 1819 0006 1B68     		ldr	r3, [r3]
1333:.\Generated_Source\PSoC4/PWM_1.c **** }
 1820              		.loc 1 1333 0
 1821 0008 181C     		mov	r0, r3
 1822 000a BD46     		mov	sp, r7
 1823              		@ sp needed
 1824 000c 80BD     		pop	{r7, pc}
 1825              	.L125:
 1826 000e C046     		.align	2
 1827              	.L124:
 1828 0010 70010540 		.word	1074069872
 1829              		.cfi_endproc
 1830              	.LFE37:
 1831              		.size	PWM_1_GetInterruptSource, .-PWM_1_GetInterruptSource
 1832              		.section	.text.PWM_1_ClearInterrupt,"ax",%progbits
 1833              		.align	2
 1834              		.global	PWM_1_ClearInterrupt
 1835              		.code	16
 1836              		.thumb_func
 1837              		.type	PWM_1_ClearInterrupt, %function
 1838              	PWM_1_ClearInterrupt:
 1839              	.LFB38:
1334:.\Generated_Source\PSoC4/PWM_1.c **** 
1335:.\Generated_Source\PSoC4/PWM_1.c **** 
1336:.\Generated_Source\PSoC4/PWM_1.c **** /*******************************************************************************
1337:.\Generated_Source\PSoC4/PWM_1.c **** * Function Name: PWM_1_ClearInterrupt
1338:.\Generated_Source\PSoC4/PWM_1.c **** ********************************************************************************
1339:.\Generated_Source\PSoC4/PWM_1.c **** *
1340:.\Generated_Source\PSoC4/PWM_1.c **** * Summary:
1341:.\Generated_Source\PSoC4/PWM_1.c **** *  Clears the interrupt request.
1342:.\Generated_Source\PSoC4/PWM_1.c **** *
1343:.\Generated_Source\PSoC4/PWM_1.c **** * Parameters:
1344:.\Generated_Source\PSoC4/PWM_1.c **** *   interruptMask: Mask of interrupts to clear
1345:.\Generated_Source\PSoC4/PWM_1.c **** *   Values:
1346:.\Generated_Source\PSoC4/PWM_1.c **** *     - PWM_1_INTR_MASK_TC       - Terminal count mask
1347:.\Generated_Source\PSoC4/PWM_1.c **** *     - PWM_1_INTR_MASK_CC_MATCH - Compare count / capture mask
1348:.\Generated_Source\PSoC4/PWM_1.c **** *
1349:.\Generated_Source\PSoC4/PWM_1.c **** * Return:
1350:.\Generated_Source\PSoC4/PWM_1.c **** *  None
1351:.\Generated_Source\PSoC4/PWM_1.c **** *
1352:.\Generated_Source\PSoC4/PWM_1.c **** *******************************************************************************/
ARM GAS  C:\Users\TINYWI~1\AppData\Local\Temp\ccrliPYO.s 			page 57


1353:.\Generated_Source\PSoC4/PWM_1.c **** void PWM_1_ClearInterrupt(uint32 interruptMask)
1354:.\Generated_Source\PSoC4/PWM_1.c **** {
 1840              		.loc 1 1354 0
 1841              		.cfi_startproc
 1842 0000 80B5     		push	{r7, lr}
 1843              		.cfi_def_cfa_offset 8
 1844              		.cfi_offset 7, -8
 1845              		.cfi_offset 14, -4
 1846 0002 82B0     		sub	sp, sp, #8
 1847              		.cfi_def_cfa_offset 16
 1848 0004 00AF     		add	r7, sp, #0
 1849              		.cfi_def_cfa_register 7
 1850 0006 7860     		str	r0, [r7, #4]
1355:.\Generated_Source\PSoC4/PWM_1.c ****     PWM_1_INTERRUPT_REQ_REG = interruptMask;
 1851              		.loc 1 1355 0
 1852 0008 024B     		ldr	r3, .L127
 1853 000a 7A68     		ldr	r2, [r7, #4]
 1854 000c 1A60     		str	r2, [r3]
1356:.\Generated_Source\PSoC4/PWM_1.c **** }
 1855              		.loc 1 1356 0
 1856 000e BD46     		mov	sp, r7
 1857 0010 02B0     		add	sp, sp, #8
 1858              		@ sp needed
 1859 0012 80BD     		pop	{r7, pc}
 1860              	.L128:
 1861              		.align	2
 1862              	.L127:
 1863 0014 70010540 		.word	1074069872
 1864              		.cfi_endproc
 1865              	.LFE38:
 1866              		.size	PWM_1_ClearInterrupt, .-PWM_1_ClearInterrupt
 1867              		.section	.text.PWM_1_SetInterrupt,"ax",%progbits
 1868              		.align	2
 1869              		.global	PWM_1_SetInterrupt
 1870              		.code	16
 1871              		.thumb_func
 1872              		.type	PWM_1_SetInterrupt, %function
 1873              	PWM_1_SetInterrupt:
 1874              	.LFB39:
1357:.\Generated_Source\PSoC4/PWM_1.c **** 
1358:.\Generated_Source\PSoC4/PWM_1.c **** 
1359:.\Generated_Source\PSoC4/PWM_1.c **** /*******************************************************************************
1360:.\Generated_Source\PSoC4/PWM_1.c **** * Function Name: PWM_1_SetInterrupt
1361:.\Generated_Source\PSoC4/PWM_1.c **** ********************************************************************************
1362:.\Generated_Source\PSoC4/PWM_1.c **** *
1363:.\Generated_Source\PSoC4/PWM_1.c **** * Summary:
1364:.\Generated_Source\PSoC4/PWM_1.c **** *  Sets a software interrupt request.
1365:.\Generated_Source\PSoC4/PWM_1.c **** *
1366:.\Generated_Source\PSoC4/PWM_1.c **** * Parameters:
1367:.\Generated_Source\PSoC4/PWM_1.c **** *   interruptMask: Mask of interrupts to set
1368:.\Generated_Source\PSoC4/PWM_1.c **** *   Values:
1369:.\Generated_Source\PSoC4/PWM_1.c **** *     - PWM_1_INTR_MASK_TC       - Terminal count mask
1370:.\Generated_Source\PSoC4/PWM_1.c **** *     - PWM_1_INTR_MASK_CC_MATCH - Compare count / capture mask
1371:.\Generated_Source\PSoC4/PWM_1.c **** *
1372:.\Generated_Source\PSoC4/PWM_1.c **** * Return:
1373:.\Generated_Source\PSoC4/PWM_1.c **** *  None
1374:.\Generated_Source\PSoC4/PWM_1.c **** *
ARM GAS  C:\Users\TINYWI~1\AppData\Local\Temp\ccrliPYO.s 			page 58


1375:.\Generated_Source\PSoC4/PWM_1.c **** *******************************************************************************/
1376:.\Generated_Source\PSoC4/PWM_1.c **** void PWM_1_SetInterrupt(uint32 interruptMask)
1377:.\Generated_Source\PSoC4/PWM_1.c **** {
 1875              		.loc 1 1377 0
 1876              		.cfi_startproc
 1877 0000 80B5     		push	{r7, lr}
 1878              		.cfi_def_cfa_offset 8
 1879              		.cfi_offset 7, -8
 1880              		.cfi_offset 14, -4
 1881 0002 82B0     		sub	sp, sp, #8
 1882              		.cfi_def_cfa_offset 16
 1883 0004 00AF     		add	r7, sp, #0
 1884              		.cfi_def_cfa_register 7
 1885 0006 7860     		str	r0, [r7, #4]
1378:.\Generated_Source\PSoC4/PWM_1.c ****     PWM_1_INTERRUPT_SET_REG = interruptMask;
 1886              		.loc 1 1378 0
 1887 0008 024B     		ldr	r3, .L130
 1888 000a 7A68     		ldr	r2, [r7, #4]
 1889 000c 1A60     		str	r2, [r3]
1379:.\Generated_Source\PSoC4/PWM_1.c **** }
 1890              		.loc 1 1379 0
 1891 000e BD46     		mov	sp, r7
 1892 0010 02B0     		add	sp, sp, #8
 1893              		@ sp needed
 1894 0012 80BD     		pop	{r7, pc}
 1895              	.L131:
 1896              		.align	2
 1897              	.L130:
 1898 0014 74010540 		.word	1074069876
 1899              		.cfi_endproc
 1900              	.LFE39:
 1901              		.size	PWM_1_SetInterrupt, .-PWM_1_SetInterrupt
 1902              		.text
 1903              	.Letext0:
 1904              		.file 2 ".\\Generated_Source\\PSoC4\\cytypes.h"
 1905              		.section	.debug_info,"",%progbits
 1906              	.Ldebug_info0:
 1907 0000 EC060000 		.4byte	0x6ec
 1908 0004 0400     		.2byte	0x4
 1909 0006 00000000 		.4byte	.Ldebug_abbrev0
 1910 000a 04       		.byte	0x4
 1911 000b 01       		.uleb128 0x1
 1912 000c C9020000 		.4byte	.LASF76
 1913 0010 01       		.byte	0x1
 1914 0011 40020000 		.4byte	.LASF77
 1915 0015 4F040000 		.4byte	.LASF78
 1916 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1917 001d 00000000 		.4byte	0
 1918 0021 00000000 		.4byte	.Ldebug_line0
 1919 0025 02       		.uleb128 0x2
 1920 0026 01       		.byte	0x1
 1921 0027 06       		.byte	0x6
 1922 0028 BA000000 		.4byte	.LASF0
 1923 002c 02       		.uleb128 0x2
 1924 002d 01       		.byte	0x1
 1925 002e 08       		.byte	0x8
 1926 002f 7F030000 		.4byte	.LASF1
ARM GAS  C:\Users\TINYWI~1\AppData\Local\Temp\ccrliPYO.s 			page 59


 1927 0033 02       		.uleb128 0x2
 1928 0034 02       		.byte	0x2
 1929 0035 05       		.byte	0x5
 1930 0036 C8030000 		.4byte	.LASF2
 1931 003a 02       		.uleb128 0x2
 1932 003b 02       		.byte	0x2
 1933 003c 07       		.byte	0x7
 1934 003d BF010000 		.4byte	.LASF3
 1935 0041 02       		.uleb128 0x2
 1936 0042 04       		.byte	0x4
 1937 0043 05       		.byte	0x5
 1938 0044 EC000000 		.4byte	.LASF4
 1939 0048 02       		.uleb128 0x2
 1940 0049 04       		.byte	0x4
 1941 004a 07       		.byte	0x7
 1942 004b 80010000 		.4byte	.LASF5
 1943 004f 02       		.uleb128 0x2
 1944 0050 08       		.byte	0x8
 1945 0051 05       		.byte	0x5
 1946 0052 AC000000 		.4byte	.LASF6
 1947 0056 02       		.uleb128 0x2
 1948 0057 08       		.byte	0x8
 1949 0058 07       		.byte	0x7
 1950 0059 58000000 		.4byte	.LASF7
 1951 005d 03       		.uleb128 0x3
 1952 005e 04       		.byte	0x4
 1953 005f 05       		.byte	0x5
 1954 0060 696E7400 		.ascii	"int\000"
 1955 0064 02       		.uleb128 0x2
 1956 0065 04       		.byte	0x4
 1957 0066 07       		.byte	0x7
 1958 0067 5D010000 		.4byte	.LASF8
 1959 006b 04       		.uleb128 0x4
 1960 006c F5000000 		.4byte	.LASF9
 1961 0070 02       		.byte	0x2
 1962 0071 B3       		.byte	0xb3
 1963 0072 2C000000 		.4byte	0x2c
 1964 0076 04       		.uleb128 0x4
 1965 0077 27010000 		.4byte	.LASF10
 1966 007b 02       		.byte	0x2
 1967 007c B5       		.byte	0xb5
 1968 007d 48000000 		.4byte	0x48
 1969 0081 02       		.uleb128 0x2
 1970 0082 04       		.byte	0x4
 1971 0083 04       		.byte	0x4
 1972 0084 B9020000 		.4byte	.LASF11
 1973 0088 02       		.uleb128 0x2
 1974 0089 08       		.byte	0x8
 1975 008a 04       		.byte	0x4
 1976 008b FB000000 		.4byte	.LASF12
 1977 008f 02       		.uleb128 0x2
 1978 0090 01       		.byte	0x1
 1979 0091 08       		.byte	0x8
 1980 0092 1D040000 		.4byte	.LASF13
 1981 0096 05       		.uleb128 0x5
 1982 0097 F8010000 		.4byte	.LASF14
 1983 009b 02       		.byte	0x2
ARM GAS  C:\Users\TINYWI~1\AppData\Local\Temp\ccrliPYO.s 			page 60


 1984 009c 5F01     		.2byte	0x15f
 1985 009e A2000000 		.4byte	0xa2
 1986 00a2 06       		.uleb128 0x6
 1987 00a3 76000000 		.4byte	0x76
 1988 00a7 02       		.uleb128 0x2
 1989 00a8 04       		.byte	0x4
 1990 00a9 07       		.byte	0x7
 1991 00aa 28020000 		.4byte	.LASF15
 1992 00ae 07       		.uleb128 0x7
 1993 00af ED010000 		.4byte	.LASF16
 1994 00b3 01       		.byte	0x1
 1995 00b4 26       		.byte	0x26
 1996 00b5 00000000 		.4byte	.LFB0
 1997 00b9 5C000000 		.4byte	.LFE0-.LFB0
 1998 00bd 01       		.uleb128 0x1
 1999 00be 9C       		.byte	0x9c
 2000 00bf 08       		.uleb128 0x8
 2001 00c0 E0010000 		.4byte	.LASF18
 2002 00c4 01       		.byte	0x1
 2003 00c5 B1       		.byte	0xb1
 2004 00c6 00000000 		.4byte	.LFB1
 2005 00ca 38000000 		.4byte	.LFE1-.LFB1
 2006 00ce 01       		.uleb128 0x1
 2007 00cf 9C       		.byte	0x9c
 2008 00d0 E3000000 		.4byte	0xe3
 2009 00d4 09       		.uleb128 0x9
 2010 00d5 EC040000 		.4byte	.LASF20
 2011 00d9 01       		.byte	0x1
 2012 00da B3       		.byte	0xb3
 2013 00db 6B000000 		.4byte	0x6b
 2014 00df 02       		.uleb128 0x2
 2015 00e0 91       		.byte	0x91
 2016 00e1 6F       		.sleb128 -17
 2017 00e2 00       		.byte	0
 2018 00e3 07       		.uleb128 0x7
 2019 00e4 CC040000 		.4byte	.LASF17
 2020 00e8 01       		.byte	0x1
 2021 00e9 E0       		.byte	0xe0
 2022 00ea 00000000 		.4byte	.LFB2
 2023 00ee 24000000 		.4byte	.LFE2-.LFB2
 2024 00f2 01       		.uleb128 0x1
 2025 00f3 9C       		.byte	0x9c
 2026 00f4 08       		.uleb128 0x8
 2027 00f5 06000000 		.4byte	.LASF19
 2028 00f9 01       		.byte	0x1
 2029 00fa FA       		.byte	0xfa
 2030 00fb 00000000 		.4byte	.LFB3
 2031 00ff 30000000 		.4byte	.LFE3-.LFB3
 2032 0103 01       		.uleb128 0x1
 2033 0104 9C       		.byte	0x9c
 2034 0105 18010000 		.4byte	0x118
 2035 0109 09       		.uleb128 0x9
 2036 010a EC040000 		.4byte	.LASF20
 2037 010e 01       		.byte	0x1
 2038 010f FC       		.byte	0xfc
 2039 0110 6B000000 		.4byte	0x6b
 2040 0114 02       		.uleb128 0x2
ARM GAS  C:\Users\TINYWI~1\AppData\Local\Temp\ccrliPYO.s 			page 61


 2041 0115 91       		.byte	0x91
 2042 0116 6F       		.sleb128 -17
 2043 0117 00       		.byte	0
 2044 0118 0A       		.uleb128 0xa
 2045 0119 6A010000 		.4byte	.LASF21
 2046 011d 01       		.byte	0x1
 2047 011e 1F01     		.2byte	0x11f
 2048 0120 00000000 		.4byte	.LFB4
 2049 0124 48000000 		.4byte	.LFE4-.LFB4
 2050 0128 01       		.uleb128 0x1
 2051 0129 9C       		.byte	0x9c
 2052 012a 4D010000 		.4byte	0x14d
 2053 012e 0B       		.uleb128 0xb
 2054 012f 22040000 		.4byte	.LASF23
 2055 0133 01       		.byte	0x1
 2056 0134 1F01     		.2byte	0x11f
 2057 0136 76000000 		.4byte	0x76
 2058 013a 02       		.uleb128 0x2
 2059 013b 91       		.byte	0x91
 2060 013c 64       		.sleb128 -28
 2061 013d 0C       		.uleb128 0xc
 2062 013e EC040000 		.4byte	.LASF20
 2063 0142 01       		.byte	0x1
 2064 0143 2101     		.2byte	0x121
 2065 0145 6B000000 		.4byte	0x6b
 2066 0149 02       		.uleb128 0x2
 2067 014a 91       		.byte	0x91
 2068 014b 6F       		.sleb128 -17
 2069 014c 00       		.byte	0
 2070 014d 0A       		.uleb128 0xa
 2071 014e 32050000 		.4byte	.LASF22
 2072 0152 01       		.byte	0x1
 2073 0153 4001     		.2byte	0x140
 2074 0155 00000000 		.4byte	.LFB5
 2075 0159 48000000 		.4byte	.LFE5-.LFB5
 2076 015d 01       		.uleb128 0x1
 2077 015e 9C       		.byte	0x9c
 2078 015f 82010000 		.4byte	0x182
 2079 0163 0B       		.uleb128 0xb
 2080 0164 6F000000 		.4byte	.LASF24
 2081 0168 01       		.byte	0x1
 2082 0169 4001     		.2byte	0x140
 2083 016b 76000000 		.4byte	0x76
 2084 016f 02       		.uleb128 0x2
 2085 0170 91       		.byte	0x91
 2086 0171 64       		.sleb128 -28
 2087 0172 0C       		.uleb128 0xc
 2088 0173 EC040000 		.4byte	.LASF20
 2089 0177 01       		.byte	0x1
 2090 0178 4201     		.2byte	0x142
 2091 017a 6B000000 		.4byte	0x6b
 2092 017e 02       		.uleb128 0x2
 2093 017f 91       		.byte	0x91
 2094 0180 6F       		.sleb128 -17
 2095 0181 00       		.byte	0
 2096 0182 0A       		.uleb128 0xa
 2097 0183 3C040000 		.4byte	.LASF25
ARM GAS  C:\Users\TINYWI~1\AppData\Local\Temp\ccrliPYO.s 			page 62


 2098 0187 01       		.byte	0x1
 2099 0188 6501     		.2byte	0x165
 2100 018a 00000000 		.4byte	.LFB6
 2101 018e 48000000 		.4byte	.LFE6-.LFB6
 2102 0192 01       		.uleb128 0x1
 2103 0193 9C       		.byte	0x9c
 2104 0194 B7010000 		.4byte	0x1b7
 2105 0198 0B       		.uleb128 0xb
 2106 0199 BF020000 		.4byte	.LASF26
 2107 019d 01       		.byte	0x1
 2108 019e 6501     		.2byte	0x165
 2109 01a0 76000000 		.4byte	0x76
 2110 01a4 02       		.uleb128 0x2
 2111 01a5 91       		.byte	0x91
 2112 01a6 64       		.sleb128 -28
 2113 01a7 0C       		.uleb128 0xc
 2114 01a8 EC040000 		.4byte	.LASF20
 2115 01ac 01       		.byte	0x1
 2116 01ad 6701     		.2byte	0x167
 2117 01af 6B000000 		.4byte	0x6b
 2118 01b3 02       		.uleb128 0x2
 2119 01b4 91       		.byte	0x91
 2120 01b5 6F       		.sleb128 -17
 2121 01b6 00       		.byte	0
 2122 01b7 0A       		.uleb128 0xa
 2123 01b8 76000000 		.4byte	.LASF27
 2124 01bc 01       		.byte	0x1
 2125 01bd 8501     		.2byte	0x185
 2126 01bf 00000000 		.4byte	.LFB7
 2127 01c3 4C000000 		.4byte	.LFE7-.LFB7
 2128 01c7 01       		.uleb128 0x1
 2129 01c8 9C       		.byte	0x9c
 2130 01c9 EC010000 		.4byte	0x1ec
 2131 01cd 0B       		.uleb128 0xb
 2132 01ce D2010000 		.4byte	.LASF28
 2133 01d2 01       		.byte	0x1
 2134 01d3 8501     		.2byte	0x185
 2135 01d5 76000000 		.4byte	0x76
 2136 01d9 02       		.uleb128 0x2
 2137 01da 91       		.byte	0x91
 2138 01db 64       		.sleb128 -28
 2139 01dc 0C       		.uleb128 0xc
 2140 01dd EC040000 		.4byte	.LASF20
 2141 01e1 01       		.byte	0x1
 2142 01e2 8701     		.2byte	0x187
 2143 01e4 6B000000 		.4byte	0x6b
 2144 01e8 02       		.uleb128 0x2
 2145 01e9 91       		.byte	0x91
 2146 01ea 6F       		.sleb128 -17
 2147 01eb 00       		.byte	0
 2148 01ec 0D       		.uleb128 0xd
 2149 01ed 69020000 		.4byte	.LASF29
 2150 01f1 01       		.byte	0x1
 2151 01f2 BB01     		.2byte	0x1bb
 2152 01f4 00000000 		.4byte	.LFB8
 2153 01f8 1C000000 		.4byte	.LFE8-.LFB8
 2154 01fc 01       		.uleb128 0x1
ARM GAS  C:\Users\TINYWI~1\AppData\Local\Temp\ccrliPYO.s 			page 63


 2155 01fd 9C       		.byte	0x9c
 2156 01fe 12020000 		.4byte	0x212
 2157 0202 0B       		.uleb128 0xb
 2158 0203 92010000 		.4byte	.LASF30
 2159 0207 01       		.byte	0x1
 2160 0208 BB01     		.2byte	0x1bb
 2161 020a 76000000 		.4byte	0x76
 2162 020e 02       		.uleb128 0x2
 2163 020f 91       		.byte	0x91
 2164 0210 74       		.sleb128 -12
 2165 0211 00       		.byte	0
 2166 0212 0A       		.uleb128 0xa
 2167 0213 A2030000 		.4byte	.LASF31
 2168 0217 01       		.byte	0x1
 2169 0218 DF01     		.2byte	0x1df
 2170 021a 00000000 		.4byte	.LFB9
 2171 021e 48000000 		.4byte	.LFE9-.LFB9
 2172 0222 01       		.uleb128 0x1
 2173 0223 9C       		.byte	0x9c
 2174 0224 47020000 		.4byte	0x247
 2175 0228 0B       		.uleb128 0xb
 2176 0229 31020000 		.4byte	.LASF32
 2177 022d 01       		.byte	0x1
 2178 022e DF01     		.2byte	0x1df
 2179 0230 76000000 		.4byte	0x76
 2180 0234 02       		.uleb128 0x2
 2181 0235 91       		.byte	0x91
 2182 0236 64       		.sleb128 -28
 2183 0237 0C       		.uleb128 0xc
 2184 0238 EC040000 		.4byte	.LASF20
 2185 023c 01       		.byte	0x1
 2186 023d E101     		.2byte	0x1e1
 2187 023f 6B000000 		.4byte	0x6b
 2188 0243 02       		.uleb128 0x2
 2189 0244 91       		.byte	0x91
 2190 0245 6F       		.sleb128 -17
 2191 0246 00       		.byte	0
 2192 0247 0A       		.uleb128 0xa
 2193 0248 11020000 		.4byte	.LASF33
 2194 024c 01       		.byte	0x1
 2195 024d 0102     		.2byte	0x201
 2196 024f 00000000 		.4byte	.LFB10
 2197 0253 48000000 		.4byte	.LFE10-.LFB10
 2198 0257 01       		.uleb128 0x1
 2199 0258 9C       		.byte	0x9c
 2200 0259 7C020000 		.4byte	0x27c
 2201 025d 0B       		.uleb128 0xb
 2202 025e B7030000 		.4byte	.LASF34
 2203 0262 01       		.byte	0x1
 2204 0263 0102     		.2byte	0x201
 2205 0265 76000000 		.4byte	0x76
 2206 0269 02       		.uleb128 0x2
 2207 026a 91       		.byte	0x91
 2208 026b 64       		.sleb128 -28
 2209 026c 0C       		.uleb128 0xc
 2210 026d EC040000 		.4byte	.LASF20
 2211 0271 01       		.byte	0x1
ARM GAS  C:\Users\TINYWI~1\AppData\Local\Temp\ccrliPYO.s 			page 64


 2212 0272 0302     		.2byte	0x203
 2213 0274 6B000000 		.4byte	0x6b
 2214 0278 02       		.uleb128 0x2
 2215 0279 91       		.byte	0x91
 2216 027a 6F       		.sleb128 -17
 2217 027b 00       		.byte	0
 2218 027c 0A       		.uleb128 0xa
 2219 027d 8D030000 		.4byte	.LASF35
 2220 0281 01       		.byte	0x1
 2221 0282 2202     		.2byte	0x222
 2222 0284 00000000 		.4byte	.LFB11
 2223 0288 4C000000 		.4byte	.LFE11-.LFB11
 2224 028c 01       		.uleb128 0x1
 2225 028d 9C       		.byte	0x9c
 2226 028e B1020000 		.4byte	0x2b1
 2227 0292 0B       		.uleb128 0xb
 2228 0293 54010000 		.4byte	.LASF36
 2229 0297 01       		.byte	0x1
 2230 0298 2202     		.2byte	0x222
 2231 029a 76000000 		.4byte	0x76
 2232 029e 02       		.uleb128 0x2
 2233 029f 91       		.byte	0x91
 2234 02a0 64       		.sleb128 -28
 2235 02a1 0C       		.uleb128 0xc
 2236 02a2 EC040000 		.4byte	.LASF20
 2237 02a6 01       		.byte	0x1
 2238 02a7 2402     		.2byte	0x224
 2239 02a9 6B000000 		.4byte	0x6b
 2240 02ad 02       		.uleb128 0x2
 2241 02ae 91       		.byte	0x91
 2242 02af 6F       		.sleb128 -17
 2243 02b0 00       		.byte	0
 2244 02b1 0A       		.uleb128 0xa
 2245 02b2 59030000 		.4byte	.LASF37
 2246 02b6 01       		.byte	0x1
 2247 02b7 4302     		.2byte	0x243
 2248 02b9 00000000 		.4byte	.LFB12
 2249 02bd 48000000 		.4byte	.LFE12-.LFB12
 2250 02c1 01       		.uleb128 0x1
 2251 02c2 9C       		.byte	0x9c
 2252 02c3 E6020000 		.4byte	0x2e6
 2253 02c7 0B       		.uleb128 0xb
 2254 02c8 4F010000 		.4byte	.LASF38
 2255 02cc 01       		.byte	0x1
 2256 02cd 4302     		.2byte	0x243
 2257 02cf 76000000 		.4byte	0x76
 2258 02d3 02       		.uleb128 0x2
 2259 02d4 91       		.byte	0x91
 2260 02d5 64       		.sleb128 -28
 2261 02d6 0C       		.uleb128 0xc
 2262 02d7 EC040000 		.4byte	.LASF20
 2263 02db 01       		.byte	0x1
 2264 02dc 4502     		.2byte	0x245
 2265 02de 6B000000 		.4byte	0x6b
 2266 02e2 02       		.uleb128 0x2
 2267 02e3 91       		.byte	0x91
 2268 02e4 6F       		.sleb128 -17
ARM GAS  C:\Users\TINYWI~1\AppData\Local\Temp\ccrliPYO.s 			page 65


 2269 02e5 00       		.byte	0
 2270 02e6 0D       		.uleb128 0xd
 2271 02e7 FE010000 		.4byte	.LASF39
 2272 02eb 01       		.byte	0x1
 2273 02ec 6102     		.2byte	0x261
 2274 02ee 00000000 		.4byte	.LFB13
 2275 02f2 1C000000 		.4byte	.LFE13-.LFB13
 2276 02f6 01       		.uleb128 0x1
 2277 02f7 9C       		.byte	0x9c
 2278 02f8 0C030000 		.4byte	0x30c
 2279 02fc 0B       		.uleb128 0xb
 2280 02fd 00000000 		.4byte	.LASF40
 2281 0301 01       		.byte	0x1
 2282 0302 6102     		.2byte	0x261
 2283 0304 76000000 		.4byte	0x76
 2284 0308 02       		.uleb128 0x2
 2285 0309 91       		.byte	0x91
 2286 030a 74       		.sleb128 -12
 2287 030b 00       		.byte	0
 2288 030c 0E       		.uleb128 0xe
 2289 030d 02010000 		.4byte	.LASF45
 2290 0311 01       		.byte	0x1
 2291 0312 7502     		.2byte	0x275
 2292 0314 76000000 		.4byte	0x76
 2293 0318 00000000 		.4byte	.LFB14
 2294 031c 18000000 		.4byte	.LFE14-.LFB14
 2295 0320 01       		.uleb128 0x1
 2296 0321 9C       		.byte	0x9c
 2297 0322 0A       		.uleb128 0xa
 2298 0323 7A020000 		.4byte	.LASF41
 2299 0327 01       		.byte	0x1
 2300 0328 9202     		.2byte	0x292
 2301 032a 00000000 		.4byte	.LFB15
 2302 032e 48000000 		.4byte	.LFE15-.LFB15
 2303 0332 01       		.uleb128 0x1
 2304 0333 9C       		.byte	0x9c
 2305 0334 57030000 		.4byte	0x357
 2306 0338 0B       		.uleb128 0xb
 2307 0339 B5040000 		.4byte	.LASF42
 2308 033d 01       		.byte	0x1
 2309 033e 9202     		.2byte	0x292
 2310 0340 76000000 		.4byte	0x76
 2311 0344 02       		.uleb128 0x2
 2312 0345 91       		.byte	0x91
 2313 0346 64       		.sleb128 -28
 2314 0347 0C       		.uleb128 0xc
 2315 0348 EC040000 		.4byte	.LASF20
 2316 034c 01       		.byte	0x1
 2317 034d 9402     		.2byte	0x294
 2318 034f 6B000000 		.4byte	0x6b
 2319 0353 02       		.uleb128 0x2
 2320 0354 91       		.byte	0x91
 2321 0355 6F       		.sleb128 -17
 2322 0356 00       		.byte	0
 2323 0357 0D       		.uleb128 0xd
 2324 0358 FD040000 		.4byte	.LASF43
 2325 035c 01       		.byte	0x1
ARM GAS  C:\Users\TINYWI~1\AppData\Local\Temp\ccrliPYO.s 			page 66


 2326 035d AF02     		.2byte	0x2af
 2327 035f 00000000 		.4byte	.LFB16
 2328 0363 1C000000 		.4byte	.LFE16-.LFB16
 2329 0367 01       		.uleb128 0x1
 2330 0368 9C       		.byte	0x9c
 2331 0369 7D030000 		.4byte	0x37d
 2332 036d 0B       		.uleb128 0xb
 2333 036e 51000000 		.4byte	.LASF44
 2334 0372 01       		.byte	0x1
 2335 0373 AF02     		.2byte	0x2af
 2336 0375 76000000 		.4byte	0x76
 2337 0379 02       		.uleb128 0x2
 2338 037a 91       		.byte	0x91
 2339 037b 74       		.sleb128 -12
 2340 037c 00       		.byte	0
 2341 037d 0E       		.uleb128 0xe
 2342 037e 9B010000 		.4byte	.LASF46
 2343 0382 01       		.byte	0x1
 2344 0383 C302     		.2byte	0x2c3
 2345 0385 76000000 		.4byte	0x76
 2346 0389 00000000 		.4byte	.LFB17
 2347 038d 18000000 		.4byte	.LFE17-.LFB17
 2348 0391 01       		.uleb128 0x1
 2349 0392 9C       		.byte	0x9c
 2350 0393 0A       		.uleb128 0xa
 2351 0394 A4020000 		.4byte	.LASF47
 2352 0398 01       		.byte	0x1
 2353 0399 DD02     		.2byte	0x2dd
 2354 039b 00000000 		.4byte	.LFB18
 2355 039f 48000000 		.4byte	.LFE18-.LFB18
 2356 03a3 01       		.uleb128 0x1
 2357 03a4 9C       		.byte	0x9c
 2358 03a5 C8030000 		.4byte	0x3c8
 2359 03a9 0B       		.uleb128 0xb
 2360 03aa 42050000 		.4byte	.LASF48
 2361 03ae 01       		.byte	0x1
 2362 03af DD02     		.2byte	0x2dd
 2363 03b1 76000000 		.4byte	0x76
 2364 03b5 02       		.uleb128 0x2
 2365 03b6 91       		.byte	0x91
 2366 03b7 64       		.sleb128 -28
 2367 03b8 0C       		.uleb128 0xc
 2368 03b9 EC040000 		.4byte	.LASF20
 2369 03bd 01       		.byte	0x1
 2370 03be DF02     		.2byte	0x2df
 2371 03c0 6B000000 		.4byte	0x6b
 2372 03c4 02       		.uleb128 0x2
 2373 03c5 91       		.byte	0x91
 2374 03c6 6F       		.sleb128 -17
 2375 03c7 00       		.byte	0
 2376 03c8 0D       		.uleb128 0xd
 2377 03c9 3C000000 		.4byte	.LASF49
 2378 03cd 01       		.byte	0x1
 2379 03ce F802     		.2byte	0x2f8
 2380 03d0 00000000 		.4byte	.LFB19
 2381 03d4 1C000000 		.4byte	.LFE19-.LFB19
 2382 03d8 01       		.uleb128 0x1
ARM GAS  C:\Users\TINYWI~1\AppData\Local\Temp\ccrliPYO.s 			page 67


 2383 03d9 9C       		.byte	0x9c
 2384 03da EE030000 		.4byte	0x3ee
 2385 03de 0B       		.uleb128 0xb
 2386 03df 4D050000 		.4byte	.LASF50
 2387 03e3 01       		.byte	0x1
 2388 03e4 F802     		.2byte	0x2f8
 2389 03e6 76000000 		.4byte	0x76
 2390 03ea 02       		.uleb128 0x2
 2391 03eb 91       		.byte	0x91
 2392 03ec 74       		.sleb128 -12
 2393 03ed 00       		.byte	0
 2394 03ee 0E       		.uleb128 0xe
 2395 03ef 45030000 		.4byte	.LASF51
 2396 03f3 01       		.byte	0x1
 2397 03f4 0C03     		.2byte	0x30c
 2398 03f6 76000000 		.4byte	0x76
 2399 03fa 00000000 		.4byte	.LFB20
 2400 03fe 18000000 		.4byte	.LFE20-.LFB20
 2401 0402 01       		.uleb128 0x1
 2402 0403 9C       		.byte	0x9c
 2403 0404 0A       		.uleb128 0xa
 2404 0405 D2030000 		.4byte	.LASF52
 2405 0409 01       		.byte	0x1
 2406 040a 2603     		.2byte	0x326
 2407 040c 00000000 		.4byte	.LFB21
 2408 0410 48000000 		.4byte	.LFE21-.LFB21
 2409 0414 01       		.uleb128 0x1
 2410 0415 9C       		.byte	0x9c
 2411 0416 39040000 		.4byte	0x439
 2412 041a 0B       		.uleb128 0xb
 2413 041b 42050000 		.4byte	.LASF48
 2414 041f 01       		.byte	0x1
 2415 0420 2603     		.2byte	0x326
 2416 0422 76000000 		.4byte	0x76
 2417 0426 02       		.uleb128 0x2
 2418 0427 91       		.byte	0x91
 2419 0428 64       		.sleb128 -28
 2420 0429 0C       		.uleb128 0xc
 2421 042a EC040000 		.4byte	.LASF20
 2422 042e 01       		.byte	0x1
 2423 042f 2803     		.2byte	0x328
 2424 0431 6B000000 		.4byte	0x6b
 2425 0435 02       		.uleb128 0x2
 2426 0436 91       		.byte	0x91
 2427 0437 6F       		.sleb128 -17
 2428 0438 00       		.byte	0
 2429 0439 0D       		.uleb128 0xd
 2430 043a AC010000 		.4byte	.LASF53
 2431 043e 01       		.byte	0x1
 2432 043f 4303     		.2byte	0x343
 2433 0441 00000000 		.4byte	.LFB22
 2434 0445 1C000000 		.4byte	.LFE22-.LFB22
 2435 0449 01       		.uleb128 0x1
 2436 044a 9C       		.byte	0x9c
 2437 044b 5F040000 		.4byte	0x45f
 2438 044f 0B       		.uleb128 0xb
 2439 0450 61020000 		.4byte	.LASF54
ARM GAS  C:\Users\TINYWI~1\AppData\Local\Temp\ccrliPYO.s 			page 68


 2440 0454 01       		.byte	0x1
 2441 0455 4303     		.2byte	0x343
 2442 0457 76000000 		.4byte	0x76
 2443 045b 02       		.uleb128 0x2
 2444 045c 91       		.byte	0x91
 2445 045d 74       		.sleb128 -12
 2446 045e 00       		.byte	0
 2447 045f 0E       		.uleb128 0xe
 2448 0460 87000000 		.4byte	.LASF55
 2449 0464 01       		.byte	0x1
 2450 0465 6E03     		.2byte	0x36e
 2451 0467 76000000 		.4byte	0x76
 2452 046b 00000000 		.4byte	.LFB23
 2453 046f 18000000 		.4byte	.LFE23-.LFB23
 2454 0473 01       		.uleb128 0x1
 2455 0474 9C       		.byte	0x9c
 2456 0475 0D       		.uleb128 0xd
 2457 0476 9F040000 		.4byte	.LASF56
 2458 047a 01       		.byte	0x1
 2459 047b 9C03     		.2byte	0x39c
 2460 047d 00000000 		.4byte	.LFB24
 2461 0481 1C000000 		.4byte	.LFE24-.LFB24
 2462 0485 01       		.uleb128 0x1
 2463 0486 9C       		.byte	0x9c
 2464 0487 9B040000 		.4byte	0x49b
 2465 048b 0B       		.uleb128 0xb
 2466 048c C1040000 		.4byte	.LASF57
 2467 0490 01       		.byte	0x1
 2468 0491 9C03     		.2byte	0x39c
 2469 0493 76000000 		.4byte	0x76
 2470 0497 02       		.uleb128 0x2
 2471 0498 91       		.byte	0x91
 2472 0499 74       		.sleb128 -12
 2473 049a 00       		.byte	0
 2474 049b 0E       		.uleb128 0xe
 2475 049c 8F020000 		.4byte	.LASF58
 2476 04a0 01       		.byte	0x1
 2477 04a1 C503     		.2byte	0x3c5
 2478 04a3 76000000 		.4byte	0x76
 2479 04a7 00000000 		.4byte	.LFB25
 2480 04ab 18000000 		.4byte	.LFE25-.LFB25
 2481 04af 01       		.uleb128 0x1
 2482 04b0 9C       		.byte	0x9c
 2483 04b1 0E       		.uleb128 0xe
 2484 04b2 11000000 		.4byte	.LASF59
 2485 04b6 01       		.byte	0x1
 2486 04b7 F303     		.2byte	0x3f3
 2487 04b9 76000000 		.4byte	0x76
 2488 04bd 00000000 		.4byte	.LFB26
 2489 04c1 18000000 		.4byte	.LFE26-.LFB26
 2490 04c5 01       		.uleb128 0x1
 2491 04c6 9C       		.byte	0x9c
 2492 04c7 0E       		.uleb128 0xe
 2493 04c8 C6000000 		.4byte	.LASF60
 2494 04cc 01       		.byte	0x1
 2495 04cd 0804     		.2byte	0x408
 2496 04cf 76000000 		.4byte	0x76
ARM GAS  C:\Users\TINYWI~1\AppData\Local\Temp\ccrliPYO.s 			page 69


 2497 04d3 00000000 		.4byte	.LFB27
 2498 04d7 18000000 		.4byte	.LFE27-.LFB27
 2499 04db 01       		.uleb128 0x1
 2500 04dc 9C       		.byte	0x9c
 2501 04dd 0A       		.uleb128 0xa
 2502 04de 0F050000 		.4byte	.LASF61
 2503 04e2 01       		.byte	0x1
 2504 04e3 2304     		.2byte	0x423
 2505 04e5 00000000 		.4byte	.LFB28
 2506 04e9 44000000 		.4byte	.LFE28-.LFB28
 2507 04ed 01       		.uleb128 0x1
 2508 04ee 9C       		.byte	0x9c
 2509 04ef 12050000 		.4byte	0x512
 2510 04f3 0B       		.uleb128 0xb
 2511 04f4 43010000 		.4byte	.LASF62
 2512 04f8 01       		.byte	0x1
 2513 04f9 2304     		.2byte	0x423
 2514 04fb 76000000 		.4byte	0x76
 2515 04ff 02       		.uleb128 0x2
 2516 0500 91       		.byte	0x91
 2517 0501 64       		.sleb128 -28
 2518 0502 0C       		.uleb128 0xc
 2519 0503 EC040000 		.4byte	.LASF20
 2520 0507 01       		.byte	0x1
 2521 0508 2504     		.2byte	0x425
 2522 050a 6B000000 		.4byte	0x6b
 2523 050e 02       		.uleb128 0x2
 2524 050f 91       		.byte	0x91
 2525 0510 6F       		.sleb128 -17
 2526 0511 00       		.byte	0
 2527 0512 0A       		.uleb128 0xa
 2528 0513 D8040000 		.4byte	.LASF63
 2529 0517 01       		.byte	0x1
 2530 0518 4404     		.2byte	0x444
 2531 051a 00000000 		.4byte	.LFB29
 2532 051e 44000000 		.4byte	.LFE29-.LFB29
 2533 0522 01       		.uleb128 0x1
 2534 0523 9C       		.byte	0x9c
 2535 0524 47050000 		.4byte	0x547
 2536 0528 0B       		.uleb128 0xb
 2537 0529 43010000 		.4byte	.LASF62
 2538 052d 01       		.byte	0x1
 2539 052e 4404     		.2byte	0x444
 2540 0530 76000000 		.4byte	0x76
 2541 0534 02       		.uleb128 0x2
 2542 0535 91       		.byte	0x91
 2543 0536 64       		.sleb128 -28
 2544 0537 0C       		.uleb128 0xc
 2545 0538 EC040000 		.4byte	.LASF20
 2546 053c 01       		.byte	0x1
 2547 053d 4604     		.2byte	0x446
 2548 053f 6B000000 		.4byte	0x6b
 2549 0543 02       		.uleb128 0x2
 2550 0544 91       		.byte	0x91
 2551 0545 6F       		.sleb128 -17
 2552 0546 00       		.byte	0
 2553 0547 0A       		.uleb128 0xa
ARM GAS  C:\Users\TINYWI~1\AppData\Local\Temp\ccrliPYO.s 			page 70


 2554 0548 6C030000 		.4byte	.LASF64
 2555 054c 01       		.byte	0x1
 2556 054d 6504     		.2byte	0x465
 2557 054f 00000000 		.4byte	.LFB30
 2558 0553 48000000 		.4byte	.LFE30-.LFB30
 2559 0557 01       		.uleb128 0x1
 2560 0558 9C       		.byte	0x9c
 2561 0559 7C050000 		.4byte	0x57c
 2562 055d 0B       		.uleb128 0xb
 2563 055e 43010000 		.4byte	.LASF62
 2564 0562 01       		.byte	0x1
 2565 0563 6504     		.2byte	0x465
 2566 0565 76000000 		.4byte	0x76
 2567 0569 02       		.uleb128 0x2
 2568 056a 91       		.byte	0x91
 2569 056b 64       		.sleb128 -28
 2570 056c 0C       		.uleb128 0xc
 2571 056d EC040000 		.4byte	.LASF20
 2572 0571 01       		.byte	0x1
 2573 0572 6704     		.2byte	0x467
 2574 0574 6B000000 		.4byte	0x6b
 2575 0578 02       		.uleb128 0x2
 2576 0579 91       		.byte	0x91
 2577 057a 6F       		.sleb128 -17
 2578 057b 00       		.byte	0
 2579 057c 0A       		.uleb128 0xa
 2580 057d 0B040000 		.4byte	.LASF65
 2581 0581 01       		.byte	0x1
 2582 0582 8504     		.2byte	0x485
 2583 0584 00000000 		.4byte	.LFB31
 2584 0588 44000000 		.4byte	.LFE31-.LFB31
 2585 058c 01       		.uleb128 0x1
 2586 058d 9C       		.byte	0x9c
 2587 058e B1050000 		.4byte	0x5b1
 2588 0592 0B       		.uleb128 0xb
 2589 0593 43010000 		.4byte	.LASF62
 2590 0597 01       		.byte	0x1
 2591 0598 8504     		.2byte	0x485
 2592 059a 76000000 		.4byte	0x76
 2593 059e 02       		.uleb128 0x2
 2594 059f 91       		.byte	0x91
 2595 05a0 64       		.sleb128 -28
 2596 05a1 0C       		.uleb128 0xc
 2597 05a2 EC040000 		.4byte	.LASF20
 2598 05a6 01       		.byte	0x1
 2599 05a7 8704     		.2byte	0x487
 2600 05a9 6B000000 		.4byte	0x6b
 2601 05ad 02       		.uleb128 0x2
 2602 05ae 91       		.byte	0x91
 2603 05af 6F       		.sleb128 -17
 2604 05b0 00       		.byte	0
 2605 05b1 0A       		.uleb128 0xa
 2606 05b2 14010000 		.4byte	.LASF66
 2607 05b6 01       		.byte	0x1
 2608 05b7 A604     		.2byte	0x4a6
 2609 05b9 00000000 		.4byte	.LFB32
 2610 05bd 44000000 		.4byte	.LFE32-.LFB32
ARM GAS  C:\Users\TINYWI~1\AppData\Local\Temp\ccrliPYO.s 			page 71


 2611 05c1 01       		.uleb128 0x1
 2612 05c2 9C       		.byte	0x9c
 2613 05c3 E6050000 		.4byte	0x5e6
 2614 05c7 0B       		.uleb128 0xb
 2615 05c8 43010000 		.4byte	.LASF62
 2616 05cc 01       		.byte	0x1
 2617 05cd A604     		.2byte	0x4a6
 2618 05cf 76000000 		.4byte	0x76
 2619 05d3 02       		.uleb128 0x2
 2620 05d4 91       		.byte	0x91
 2621 05d5 64       		.sleb128 -28
 2622 05d6 0C       		.uleb128 0xc
 2623 05d7 EC040000 		.4byte	.LASF20
 2624 05db 01       		.byte	0x1
 2625 05dc A804     		.2byte	0x4a8
 2626 05de 6B000000 		.4byte	0x6b
 2627 05e2 02       		.uleb128 0x2
 2628 05e3 91       		.byte	0x91
 2629 05e4 6F       		.sleb128 -17
 2630 05e5 00       		.byte	0
 2631 05e6 0A       		.uleb128 0xa
 2632 05e7 27040000 		.4byte	.LASF67
 2633 05eb 01       		.byte	0x1
 2634 05ec CE04     		.2byte	0x4ce
 2635 05ee 00000000 		.4byte	.LFB33
 2636 05f2 3C000000 		.4byte	.LFE33-.LFB33
 2637 05f6 01       		.uleb128 0x1
 2638 05f7 9C       		.byte	0x9c
 2639 05f8 2A060000 		.4byte	0x62a
 2640 05fc 0B       		.uleb128 0xb
 2641 05fd 4F010000 		.4byte	.LASF38
 2642 0601 01       		.byte	0x1
 2643 0602 CE04     		.2byte	0x4ce
 2644 0604 76000000 		.4byte	0x76
 2645 0608 02       		.uleb128 0x2
 2646 0609 91       		.byte	0x91
 2647 060a 64       		.sleb128 -28
 2648 060b 0B       		.uleb128 0xb
 2649 060c 78010000 		.4byte	.LASF68
 2650 0610 01       		.byte	0x1
 2651 0611 CE04     		.2byte	0x4ce
 2652 0613 76000000 		.4byte	0x76
 2653 0617 02       		.uleb128 0x2
 2654 0618 91       		.byte	0x91
 2655 0619 60       		.sleb128 -32
 2656 061a 0C       		.uleb128 0xc
 2657 061b EC040000 		.4byte	.LASF20
 2658 061f 01       		.byte	0x1
 2659 0620 D004     		.2byte	0x4d0
 2660 0622 6B000000 		.4byte	0x6b
 2661 0626 02       		.uleb128 0x2
 2662 0627 91       		.byte	0x91
 2663 0628 6F       		.sleb128 -17
 2664 0629 00       		.byte	0
 2665 062a 0E       		.uleb128 0xe
 2666 062b DB000000 		.4byte	.LASF69
 2667 062f 01       		.byte	0x1
ARM GAS  C:\Users\TINYWI~1\AppData\Local\Temp\ccrliPYO.s 			page 72


 2668 0630 EB04     		.2byte	0x4eb
 2669 0632 76000000 		.4byte	0x76
 2670 0636 00000000 		.4byte	.LFB34
 2671 063a 20000000 		.4byte	.LFE34-.LFB34
 2672 063e 01       		.uleb128 0x1
 2673 063f 9C       		.byte	0x9c
 2674 0640 0D       		.uleb128 0xd
 2675 0641 F4030000 		.4byte	.LASF70
 2676 0645 01       		.byte	0x1
 2677 0646 0405     		.2byte	0x504
 2678 0648 00000000 		.4byte	.LFB35
 2679 064c 18000000 		.4byte	.LFE35-.LFB35
 2680 0650 01       		.uleb128 0x1
 2681 0651 9C       		.byte	0x9c
 2682 0652 66060000 		.4byte	0x666
 2683 0656 0B       		.uleb128 0xb
 2684 0657 E6030000 		.4byte	.LASF71
 2685 065b 01       		.byte	0x1
 2686 065c 0405     		.2byte	0x504
 2687 065e 76000000 		.4byte	0x76
 2688 0662 02       		.uleb128 0x2
 2689 0663 91       		.byte	0x91
 2690 0664 74       		.sleb128 -12
 2691 0665 00       		.byte	0
 2692 0666 0E       		.uleb128 0xe
 2693 0667 57050000 		.4byte	.LASF72
 2694 066b 01       		.byte	0x1
 2695 066c 1B05     		.2byte	0x51b
 2696 066e 76000000 		.4byte	0x76
 2697 0672 00000000 		.4byte	.LFB36
 2698 0676 14000000 		.4byte	.LFE36-.LFB36
 2699 067a 01       		.uleb128 0x1
 2700 067b 9C       		.byte	0x9c
 2701 067c 0E       		.uleb128 0xe
 2702 067d 23000000 		.4byte	.LASF73
 2703 0681 01       		.byte	0x1
 2704 0682 3205     		.2byte	0x532
 2705 0684 76000000 		.4byte	0x76
 2706 0688 00000000 		.4byte	.LFB37
 2707 068c 14000000 		.4byte	.LFE37-.LFB37
 2708 0690 01       		.uleb128 0x1
 2709 0691 9C       		.byte	0x9c
 2710 0692 0D       		.uleb128 0xd
 2711 0693 2E010000 		.4byte	.LASF74
 2712 0697 01       		.byte	0x1
 2713 0698 4905     		.2byte	0x549
 2714 069a 00000000 		.4byte	.LFB38
 2715 069e 18000000 		.4byte	.LFE38-.LFB38
 2716 06a2 01       		.uleb128 0x1
 2717 06a3 9C       		.byte	0x9c
 2718 06a4 B8060000 		.4byte	0x6b8
 2719 06a8 0B       		.uleb128 0xb
 2720 06a9 E6030000 		.4byte	.LASF71
 2721 06ad 01       		.byte	0x1
 2722 06ae 4905     		.2byte	0x549
 2723 06b0 76000000 		.4byte	0x76
 2724 06b4 02       		.uleb128 0x2
ARM GAS  C:\Users\TINYWI~1\AppData\Local\Temp\ccrliPYO.s 			page 73


 2725 06b5 91       		.byte	0x91
 2726 06b6 74       		.sleb128 -12
 2727 06b7 00       		.byte	0
 2728 06b8 0D       		.uleb128 0xd
 2729 06b9 99000000 		.4byte	.LASF75
 2730 06bd 01       		.byte	0x1
 2731 06be 6005     		.2byte	0x560
 2732 06c0 00000000 		.4byte	.LFB39
 2733 06c4 18000000 		.4byte	.LFE39-.LFB39
 2734 06c8 01       		.uleb128 0x1
 2735 06c9 9C       		.byte	0x9c
 2736 06ca DE060000 		.4byte	0x6de
 2737 06ce 0B       		.uleb128 0xb
 2738 06cf E6030000 		.4byte	.LASF71
 2739 06d3 01       		.byte	0x1
 2740 06d4 6005     		.2byte	0x560
 2741 06d6 76000000 		.4byte	0x76
 2742 06da 02       		.uleb128 0x2
 2743 06db 91       		.byte	0x91
 2744 06dc 74       		.sleb128 -12
 2745 06dd 00       		.byte	0
 2746 06de 0F       		.uleb128 0xf
 2747 06df 24050000 		.4byte	.LASF79
 2748 06e3 01       		.byte	0x1
 2749 06e4 15       		.byte	0x15
 2750 06e5 6B000000 		.4byte	0x6b
 2751 06e9 05       		.uleb128 0x5
 2752 06ea 03       		.byte	0x3
 2753 06eb 00000000 		.4byte	PWM_1_initVar
 2754 06ef 00       		.byte	0
 2755              		.section	.debug_abbrev,"",%progbits
 2756              	.Ldebug_abbrev0:
 2757 0000 01       		.uleb128 0x1
 2758 0001 11       		.uleb128 0x11
 2759 0002 01       		.byte	0x1
 2760 0003 25       		.uleb128 0x25
 2761 0004 0E       		.uleb128 0xe
 2762 0005 13       		.uleb128 0x13
 2763 0006 0B       		.uleb128 0xb
 2764 0007 03       		.uleb128 0x3
 2765 0008 0E       		.uleb128 0xe
 2766 0009 1B       		.uleb128 0x1b
 2767 000a 0E       		.uleb128 0xe
 2768 000b 55       		.uleb128 0x55
 2769 000c 17       		.uleb128 0x17
 2770 000d 11       		.uleb128 0x11
 2771 000e 01       		.uleb128 0x1
 2772 000f 10       		.uleb128 0x10
 2773 0010 17       		.uleb128 0x17
 2774 0011 00       		.byte	0
 2775 0012 00       		.byte	0
 2776 0013 02       		.uleb128 0x2
 2777 0014 24       		.uleb128 0x24
 2778 0015 00       		.byte	0
 2779 0016 0B       		.uleb128 0xb
 2780 0017 0B       		.uleb128 0xb
 2781 0018 3E       		.uleb128 0x3e
ARM GAS  C:\Users\TINYWI~1\AppData\Local\Temp\ccrliPYO.s 			page 74


 2782 0019 0B       		.uleb128 0xb
 2783 001a 03       		.uleb128 0x3
 2784 001b 0E       		.uleb128 0xe
 2785 001c 00       		.byte	0
 2786 001d 00       		.byte	0
 2787 001e 03       		.uleb128 0x3
 2788 001f 24       		.uleb128 0x24
 2789 0020 00       		.byte	0
 2790 0021 0B       		.uleb128 0xb
 2791 0022 0B       		.uleb128 0xb
 2792 0023 3E       		.uleb128 0x3e
 2793 0024 0B       		.uleb128 0xb
 2794 0025 03       		.uleb128 0x3
 2795 0026 08       		.uleb128 0x8
 2796 0027 00       		.byte	0
 2797 0028 00       		.byte	0
 2798 0029 04       		.uleb128 0x4
 2799 002a 16       		.uleb128 0x16
 2800 002b 00       		.byte	0
 2801 002c 03       		.uleb128 0x3
 2802 002d 0E       		.uleb128 0xe
 2803 002e 3A       		.uleb128 0x3a
 2804 002f 0B       		.uleb128 0xb
 2805 0030 3B       		.uleb128 0x3b
 2806 0031 0B       		.uleb128 0xb
 2807 0032 49       		.uleb128 0x49
 2808 0033 13       		.uleb128 0x13
 2809 0034 00       		.byte	0
 2810 0035 00       		.byte	0
 2811 0036 05       		.uleb128 0x5
 2812 0037 16       		.uleb128 0x16
 2813 0038 00       		.byte	0
 2814 0039 03       		.uleb128 0x3
 2815 003a 0E       		.uleb128 0xe
 2816 003b 3A       		.uleb128 0x3a
 2817 003c 0B       		.uleb128 0xb
 2818 003d 3B       		.uleb128 0x3b
 2819 003e 05       		.uleb128 0x5
 2820 003f 49       		.uleb128 0x49
 2821 0040 13       		.uleb128 0x13
 2822 0041 00       		.byte	0
 2823 0042 00       		.byte	0
 2824 0043 06       		.uleb128 0x6
 2825 0044 35       		.uleb128 0x35
 2826 0045 00       		.byte	0
 2827 0046 49       		.uleb128 0x49
 2828 0047 13       		.uleb128 0x13
 2829 0048 00       		.byte	0
 2830 0049 00       		.byte	0
 2831 004a 07       		.uleb128 0x7
 2832 004b 2E       		.uleb128 0x2e
 2833 004c 00       		.byte	0
 2834 004d 3F       		.uleb128 0x3f
 2835 004e 19       		.uleb128 0x19
 2836 004f 03       		.uleb128 0x3
 2837 0050 0E       		.uleb128 0xe
 2838 0051 3A       		.uleb128 0x3a
ARM GAS  C:\Users\TINYWI~1\AppData\Local\Temp\ccrliPYO.s 			page 75


 2839 0052 0B       		.uleb128 0xb
 2840 0053 3B       		.uleb128 0x3b
 2841 0054 0B       		.uleb128 0xb
 2842 0055 27       		.uleb128 0x27
 2843 0056 19       		.uleb128 0x19
 2844 0057 11       		.uleb128 0x11
 2845 0058 01       		.uleb128 0x1
 2846 0059 12       		.uleb128 0x12
 2847 005a 06       		.uleb128 0x6
 2848 005b 40       		.uleb128 0x40
 2849 005c 18       		.uleb128 0x18
 2850 005d 9642     		.uleb128 0x2116
 2851 005f 19       		.uleb128 0x19
 2852 0060 00       		.byte	0
 2853 0061 00       		.byte	0
 2854 0062 08       		.uleb128 0x8
 2855 0063 2E       		.uleb128 0x2e
 2856 0064 01       		.byte	0x1
 2857 0065 3F       		.uleb128 0x3f
 2858 0066 19       		.uleb128 0x19
 2859 0067 03       		.uleb128 0x3
 2860 0068 0E       		.uleb128 0xe
 2861 0069 3A       		.uleb128 0x3a
 2862 006a 0B       		.uleb128 0xb
 2863 006b 3B       		.uleb128 0x3b
 2864 006c 0B       		.uleb128 0xb
 2865 006d 27       		.uleb128 0x27
 2866 006e 19       		.uleb128 0x19
 2867 006f 11       		.uleb128 0x11
 2868 0070 01       		.uleb128 0x1
 2869 0071 12       		.uleb128 0x12
 2870 0072 06       		.uleb128 0x6
 2871 0073 40       		.uleb128 0x40
 2872 0074 18       		.uleb128 0x18
 2873 0075 9642     		.uleb128 0x2116
 2874 0077 19       		.uleb128 0x19
 2875 0078 01       		.uleb128 0x1
 2876 0079 13       		.uleb128 0x13
 2877 007a 00       		.byte	0
 2878 007b 00       		.byte	0
 2879 007c 09       		.uleb128 0x9
 2880 007d 34       		.uleb128 0x34
 2881 007e 00       		.byte	0
 2882 007f 03       		.uleb128 0x3
 2883 0080 0E       		.uleb128 0xe
 2884 0081 3A       		.uleb128 0x3a
 2885 0082 0B       		.uleb128 0xb
 2886 0083 3B       		.uleb128 0x3b
 2887 0084 0B       		.uleb128 0xb
 2888 0085 49       		.uleb128 0x49
 2889 0086 13       		.uleb128 0x13
 2890 0087 02       		.uleb128 0x2
 2891 0088 18       		.uleb128 0x18
 2892 0089 00       		.byte	0
 2893 008a 00       		.byte	0
 2894 008b 0A       		.uleb128 0xa
 2895 008c 2E       		.uleb128 0x2e
ARM GAS  C:\Users\TINYWI~1\AppData\Local\Temp\ccrliPYO.s 			page 76


 2896 008d 01       		.byte	0x1
 2897 008e 3F       		.uleb128 0x3f
 2898 008f 19       		.uleb128 0x19
 2899 0090 03       		.uleb128 0x3
 2900 0091 0E       		.uleb128 0xe
 2901 0092 3A       		.uleb128 0x3a
 2902 0093 0B       		.uleb128 0xb
 2903 0094 3B       		.uleb128 0x3b
 2904 0095 05       		.uleb128 0x5
 2905 0096 27       		.uleb128 0x27
 2906 0097 19       		.uleb128 0x19
 2907 0098 11       		.uleb128 0x11
 2908 0099 01       		.uleb128 0x1
 2909 009a 12       		.uleb128 0x12
 2910 009b 06       		.uleb128 0x6
 2911 009c 40       		.uleb128 0x40
 2912 009d 18       		.uleb128 0x18
 2913 009e 9642     		.uleb128 0x2116
 2914 00a0 19       		.uleb128 0x19
 2915 00a1 01       		.uleb128 0x1
 2916 00a2 13       		.uleb128 0x13
 2917 00a3 00       		.byte	0
 2918 00a4 00       		.byte	0
 2919 00a5 0B       		.uleb128 0xb
 2920 00a6 05       		.uleb128 0x5
 2921 00a7 00       		.byte	0
 2922 00a8 03       		.uleb128 0x3
 2923 00a9 0E       		.uleb128 0xe
 2924 00aa 3A       		.uleb128 0x3a
 2925 00ab 0B       		.uleb128 0xb
 2926 00ac 3B       		.uleb128 0x3b
 2927 00ad 05       		.uleb128 0x5
 2928 00ae 49       		.uleb128 0x49
 2929 00af 13       		.uleb128 0x13
 2930 00b0 02       		.uleb128 0x2
 2931 00b1 18       		.uleb128 0x18
 2932 00b2 00       		.byte	0
 2933 00b3 00       		.byte	0
 2934 00b4 0C       		.uleb128 0xc
 2935 00b5 34       		.uleb128 0x34
 2936 00b6 00       		.byte	0
 2937 00b7 03       		.uleb128 0x3
 2938 00b8 0E       		.uleb128 0xe
 2939 00b9 3A       		.uleb128 0x3a
 2940 00ba 0B       		.uleb128 0xb
 2941 00bb 3B       		.uleb128 0x3b
 2942 00bc 05       		.uleb128 0x5
 2943 00bd 49       		.uleb128 0x49
 2944 00be 13       		.uleb128 0x13
 2945 00bf 02       		.uleb128 0x2
 2946 00c0 18       		.uleb128 0x18
 2947 00c1 00       		.byte	0
 2948 00c2 00       		.byte	0
 2949 00c3 0D       		.uleb128 0xd
 2950 00c4 2E       		.uleb128 0x2e
 2951 00c5 01       		.byte	0x1
 2952 00c6 3F       		.uleb128 0x3f
ARM GAS  C:\Users\TINYWI~1\AppData\Local\Temp\ccrliPYO.s 			page 77


 2953 00c7 19       		.uleb128 0x19
 2954 00c8 03       		.uleb128 0x3
 2955 00c9 0E       		.uleb128 0xe
 2956 00ca 3A       		.uleb128 0x3a
 2957 00cb 0B       		.uleb128 0xb
 2958 00cc 3B       		.uleb128 0x3b
 2959 00cd 05       		.uleb128 0x5
 2960 00ce 27       		.uleb128 0x27
 2961 00cf 19       		.uleb128 0x19
 2962 00d0 11       		.uleb128 0x11
 2963 00d1 01       		.uleb128 0x1
 2964 00d2 12       		.uleb128 0x12
 2965 00d3 06       		.uleb128 0x6
 2966 00d4 40       		.uleb128 0x40
 2967 00d5 18       		.uleb128 0x18
 2968 00d6 9742     		.uleb128 0x2117
 2969 00d8 19       		.uleb128 0x19
 2970 00d9 01       		.uleb128 0x1
 2971 00da 13       		.uleb128 0x13
 2972 00db 00       		.byte	0
 2973 00dc 00       		.byte	0
 2974 00dd 0E       		.uleb128 0xe
 2975 00de 2E       		.uleb128 0x2e
 2976 00df 00       		.byte	0
 2977 00e0 3F       		.uleb128 0x3f
 2978 00e1 19       		.uleb128 0x19
 2979 00e2 03       		.uleb128 0x3
 2980 00e3 0E       		.uleb128 0xe
 2981 00e4 3A       		.uleb128 0x3a
 2982 00e5 0B       		.uleb128 0xb
 2983 00e6 3B       		.uleb128 0x3b
 2984 00e7 05       		.uleb128 0x5
 2985 00e8 27       		.uleb128 0x27
 2986 00e9 19       		.uleb128 0x19
 2987 00ea 49       		.uleb128 0x49
 2988 00eb 13       		.uleb128 0x13
 2989 00ec 11       		.uleb128 0x11
 2990 00ed 01       		.uleb128 0x1
 2991 00ee 12       		.uleb128 0x12
 2992 00ef 06       		.uleb128 0x6
 2993 00f0 40       		.uleb128 0x40
 2994 00f1 18       		.uleb128 0x18
 2995 00f2 9742     		.uleb128 0x2117
 2996 00f4 19       		.uleb128 0x19
 2997 00f5 00       		.byte	0
 2998 00f6 00       		.byte	0
 2999 00f7 0F       		.uleb128 0xf
 3000 00f8 34       		.uleb128 0x34
 3001 00f9 00       		.byte	0
 3002 00fa 03       		.uleb128 0x3
 3003 00fb 0E       		.uleb128 0xe
 3004 00fc 3A       		.uleb128 0x3a
 3005 00fd 0B       		.uleb128 0xb
 3006 00fe 3B       		.uleb128 0x3b
 3007 00ff 0B       		.uleb128 0xb
 3008 0100 49       		.uleb128 0x49
 3009 0101 13       		.uleb128 0x13
ARM GAS  C:\Users\TINYWI~1\AppData\Local\Temp\ccrliPYO.s 			page 78


 3010 0102 3F       		.uleb128 0x3f
 3011 0103 19       		.uleb128 0x19
 3012 0104 02       		.uleb128 0x2
 3013 0105 18       		.uleb128 0x18
 3014 0106 00       		.byte	0
 3015 0107 00       		.byte	0
 3016 0108 00       		.byte	0
 3017              		.section	.debug_aranges,"",%progbits
 3018 0000 54010000 		.4byte	0x154
 3019 0004 0200     		.2byte	0x2
 3020 0006 00000000 		.4byte	.Ldebug_info0
 3021 000a 04       		.byte	0x4
 3022 000b 00       		.byte	0
 3023 000c 0000     		.2byte	0
 3024 000e 0000     		.2byte	0
 3025 0010 00000000 		.4byte	.LFB0
 3026 0014 5C000000 		.4byte	.LFE0-.LFB0
 3027 0018 00000000 		.4byte	.LFB1
 3028 001c 38000000 		.4byte	.LFE1-.LFB1
 3029 0020 00000000 		.4byte	.LFB2
 3030 0024 24000000 		.4byte	.LFE2-.LFB2
 3031 0028 00000000 		.4byte	.LFB3
 3032 002c 30000000 		.4byte	.LFE3-.LFB3
 3033 0030 00000000 		.4byte	.LFB4
 3034 0034 48000000 		.4byte	.LFE4-.LFB4
 3035 0038 00000000 		.4byte	.LFB5
 3036 003c 48000000 		.4byte	.LFE5-.LFB5
 3037 0040 00000000 		.4byte	.LFB6
 3038 0044 48000000 		.4byte	.LFE6-.LFB6
 3039 0048 00000000 		.4byte	.LFB7
 3040 004c 4C000000 		.4byte	.LFE7-.LFB7
 3041 0050 00000000 		.4byte	.LFB8
 3042 0054 1C000000 		.4byte	.LFE8-.LFB8
 3043 0058 00000000 		.4byte	.LFB9
 3044 005c 48000000 		.4byte	.LFE9-.LFB9
 3045 0060 00000000 		.4byte	.LFB10
 3046 0064 48000000 		.4byte	.LFE10-.LFB10
 3047 0068 00000000 		.4byte	.LFB11
 3048 006c 4C000000 		.4byte	.LFE11-.LFB11
 3049 0070 00000000 		.4byte	.LFB12
 3050 0074 48000000 		.4byte	.LFE12-.LFB12
 3051 0078 00000000 		.4byte	.LFB13
 3052 007c 1C000000 		.4byte	.LFE13-.LFB13
 3053 0080 00000000 		.4byte	.LFB14
 3054 0084 18000000 		.4byte	.LFE14-.LFB14
 3055 0088 00000000 		.4byte	.LFB15
 3056 008c 48000000 		.4byte	.LFE15-.LFB15
 3057 0090 00000000 		.4byte	.LFB16
 3058 0094 1C000000 		.4byte	.LFE16-.LFB16
 3059 0098 00000000 		.4byte	.LFB17
 3060 009c 18000000 		.4byte	.LFE17-.LFB17
 3061 00a0 00000000 		.4byte	.LFB18
 3062 00a4 48000000 		.4byte	.LFE18-.LFB18
 3063 00a8 00000000 		.4byte	.LFB19
 3064 00ac 1C000000 		.4byte	.LFE19-.LFB19
 3065 00b0 00000000 		.4byte	.LFB20
 3066 00b4 18000000 		.4byte	.LFE20-.LFB20
ARM GAS  C:\Users\TINYWI~1\AppData\Local\Temp\ccrliPYO.s 			page 79


 3067 00b8 00000000 		.4byte	.LFB21
 3068 00bc 48000000 		.4byte	.LFE21-.LFB21
 3069 00c0 00000000 		.4byte	.LFB22
 3070 00c4 1C000000 		.4byte	.LFE22-.LFB22
 3071 00c8 00000000 		.4byte	.LFB23
 3072 00cc 18000000 		.4byte	.LFE23-.LFB23
 3073 00d0 00000000 		.4byte	.LFB24
 3074 00d4 1C000000 		.4byte	.LFE24-.LFB24
 3075 00d8 00000000 		.4byte	.LFB25
 3076 00dc 18000000 		.4byte	.LFE25-.LFB25
 3077 00e0 00000000 		.4byte	.LFB26
 3078 00e4 18000000 		.4byte	.LFE26-.LFB26
 3079 00e8 00000000 		.4byte	.LFB27
 3080 00ec 18000000 		.4byte	.LFE27-.LFB27
 3081 00f0 00000000 		.4byte	.LFB28
 3082 00f4 44000000 		.4byte	.LFE28-.LFB28
 3083 00f8 00000000 		.4byte	.LFB29
 3084 00fc 44000000 		.4byte	.LFE29-.LFB29
 3085 0100 00000000 		.4byte	.LFB30
 3086 0104 48000000 		.4byte	.LFE30-.LFB30
 3087 0108 00000000 		.4byte	.LFB31
 3088 010c 44000000 		.4byte	.LFE31-.LFB31
 3089 0110 00000000 		.4byte	.LFB32
 3090 0114 44000000 		.4byte	.LFE32-.LFB32
 3091 0118 00000000 		.4byte	.LFB33
 3092 011c 3C000000 		.4byte	.LFE33-.LFB33
 3093 0120 00000000 		.4byte	.LFB34
 3094 0124 20000000 		.4byte	.LFE34-.LFB34
 3095 0128 00000000 		.4byte	.LFB35
 3096 012c 18000000 		.4byte	.LFE35-.LFB35
 3097 0130 00000000 		.4byte	.LFB36
 3098 0134 14000000 		.4byte	.LFE36-.LFB36
 3099 0138 00000000 		.4byte	.LFB37
 3100 013c 14000000 		.4byte	.LFE37-.LFB37
 3101 0140 00000000 		.4byte	.LFB38
 3102 0144 18000000 		.4byte	.LFE38-.LFB38
 3103 0148 00000000 		.4byte	.LFB39
 3104 014c 18000000 		.4byte	.LFE39-.LFB39
 3105 0150 00000000 		.4byte	0
 3106 0154 00000000 		.4byte	0
 3107              		.section	.debug_ranges,"",%progbits
 3108              	.Ldebug_ranges0:
 3109 0000 00000000 		.4byte	.LFB0
 3110 0004 5C000000 		.4byte	.LFE0
 3111 0008 00000000 		.4byte	.LFB1
 3112 000c 38000000 		.4byte	.LFE1
 3113 0010 00000000 		.4byte	.LFB2
 3114 0014 24000000 		.4byte	.LFE2
 3115 0018 00000000 		.4byte	.LFB3
 3116 001c 30000000 		.4byte	.LFE3
 3117 0020 00000000 		.4byte	.LFB4
 3118 0024 48000000 		.4byte	.LFE4
 3119 0028 00000000 		.4byte	.LFB5
 3120 002c 48000000 		.4byte	.LFE5
 3121 0030 00000000 		.4byte	.LFB6
 3122 0034 48000000 		.4byte	.LFE6
 3123 0038 00000000 		.4byte	.LFB7
ARM GAS  C:\Users\TINYWI~1\AppData\Local\Temp\ccrliPYO.s 			page 80


 3124 003c 4C000000 		.4byte	.LFE7
 3125 0040 00000000 		.4byte	.LFB8
 3126 0044 1C000000 		.4byte	.LFE8
 3127 0048 00000000 		.4byte	.LFB9
 3128 004c 48000000 		.4byte	.LFE9
 3129 0050 00000000 		.4byte	.LFB10
 3130 0054 48000000 		.4byte	.LFE10
 3131 0058 00000000 		.4byte	.LFB11
 3132 005c 4C000000 		.4byte	.LFE11
 3133 0060 00000000 		.4byte	.LFB12
 3134 0064 48000000 		.4byte	.LFE12
 3135 0068 00000000 		.4byte	.LFB13
 3136 006c 1C000000 		.4byte	.LFE13
 3137 0070 00000000 		.4byte	.LFB14
 3138 0074 18000000 		.4byte	.LFE14
 3139 0078 00000000 		.4byte	.LFB15
 3140 007c 48000000 		.4byte	.LFE15
 3141 0080 00000000 		.4byte	.LFB16
 3142 0084 1C000000 		.4byte	.LFE16
 3143 0088 00000000 		.4byte	.LFB17
 3144 008c 18000000 		.4byte	.LFE17
 3145 0090 00000000 		.4byte	.LFB18
 3146 0094 48000000 		.4byte	.LFE18
 3147 0098 00000000 		.4byte	.LFB19
 3148 009c 1C000000 		.4byte	.LFE19
 3149 00a0 00000000 		.4byte	.LFB20
 3150 00a4 18000000 		.4byte	.LFE20
 3151 00a8 00000000 		.4byte	.LFB21
 3152 00ac 48000000 		.4byte	.LFE21
 3153 00b0 00000000 		.4byte	.LFB22
 3154 00b4 1C000000 		.4byte	.LFE22
 3155 00b8 00000000 		.4byte	.LFB23
 3156 00bc 18000000 		.4byte	.LFE23
 3157 00c0 00000000 		.4byte	.LFB24
 3158 00c4 1C000000 		.4byte	.LFE24
 3159 00c8 00000000 		.4byte	.LFB25
 3160 00cc 18000000 		.4byte	.LFE25
 3161 00d0 00000000 		.4byte	.LFB26
 3162 00d4 18000000 		.4byte	.LFE26
 3163 00d8 00000000 		.4byte	.LFB27
 3164 00dc 18000000 		.4byte	.LFE27
 3165 00e0 00000000 		.4byte	.LFB28
 3166 00e4 44000000 		.4byte	.LFE28
 3167 00e8 00000000 		.4byte	.LFB29
 3168 00ec 44000000 		.4byte	.LFE29
 3169 00f0 00000000 		.4byte	.LFB30
 3170 00f4 48000000 		.4byte	.LFE30
 3171 00f8 00000000 		.4byte	.LFB31
 3172 00fc 44000000 		.4byte	.LFE31
 3173 0100 00000000 		.4byte	.LFB32
 3174 0104 44000000 		.4byte	.LFE32
 3175 0108 00000000 		.4byte	.LFB33
 3176 010c 3C000000 		.4byte	.LFE33
 3177 0110 00000000 		.4byte	.LFB34
 3178 0114 20000000 		.4byte	.LFE34
 3179 0118 00000000 		.4byte	.LFB35
 3180 011c 18000000 		.4byte	.LFE35
ARM GAS  C:\Users\TINYWI~1\AppData\Local\Temp\ccrliPYO.s 			page 81


 3181 0120 00000000 		.4byte	.LFB36
 3182 0124 14000000 		.4byte	.LFE36
 3183 0128 00000000 		.4byte	.LFB37
 3184 012c 14000000 		.4byte	.LFE37
 3185 0130 00000000 		.4byte	.LFB38
 3186 0134 18000000 		.4byte	.LFE38
 3187 0138 00000000 		.4byte	.LFB39
 3188 013c 18000000 		.4byte	.LFE39
 3189 0140 00000000 		.4byte	0
 3190 0144 00000000 		.4byte	0
 3191              		.section	.debug_line,"",%progbits
 3192              	.Ldebug_line0:
 3193 0000 71030000 		.section	.debug_str,"MS",%progbits,1
 3193      02004400 
 3193      00000201 
 3193      FB0E0D00 
 3193      01010101 
 3194              	.LASF40:
 3195 0000 636F756E 		.ascii	"count\000"
 3195      7400
 3196              	.LASF19:
 3197 0006 50574D5F 		.ascii	"PWM_1_Stop\000"
 3197      315F5374 
 3197      6F7000
 3198              	.LASF59:
 3199 0011 50574D5F 		.ascii	"PWM_1_ReadCapture\000"
 3199      315F5265 
 3199      61644361 
 3199      70747572 
 3199      6500
 3200              	.LASF73:
 3201 0023 50574D5F 		.ascii	"PWM_1_GetInterruptSource\000"
 3201      315F4765 
 3201      74496E74 
 3201      65727275 
 3201      7074536F 
 3202              	.LASF49:
 3203 003c 50574D5F 		.ascii	"PWM_1_WritePeriodBuf\000"
 3203      315F5772 
 3203      69746550 
 3203      6572696F 
 3203      64427566 
 3204              	.LASF44:
 3205 0051 70657269 		.ascii	"period\000"
 3205      6F6400
 3206              	.LASF7:
 3207 0058 6C6F6E67 		.ascii	"long long unsigned int\000"
 3207      206C6F6E 
 3207      6720756E 
 3207      7369676E 
 3207      65642069 
 3208              	.LASF24:
 3209 006f 71644D6F 		.ascii	"qdMode\000"
 3209      646500
 3210              	.LASF27:
 3211 0076 50574D5F 		.ascii	"PWM_1_SetOneShot\000"
 3211      315F5365 
ARM GAS  C:\Users\TINYWI~1\AppData\Local\Temp\ccrliPYO.s 			page 82


 3211      744F6E65 
 3211      53686F74 
 3211      00
 3212              	.LASF55:
 3213 0087 50574D5F 		.ascii	"PWM_1_ReadCompare\000"
 3213      315F5265 
 3213      6164436F 
 3213      6D706172 
 3213      6500
 3214              	.LASF75:
 3215 0099 50574D5F 		.ascii	"PWM_1_SetInterrupt\000"
 3215      315F5365 
 3215      74496E74 
 3215      65727275 
 3215      707400
 3216              	.LASF6:
 3217 00ac 6C6F6E67 		.ascii	"long long int\000"
 3217      206C6F6E 
 3217      6720696E 
 3217      7400
 3218              	.LASF0:
 3219 00ba 7369676E 		.ascii	"signed char\000"
 3219      65642063 
 3219      68617200 
 3220              	.LASF60:
 3221 00c6 50574D5F 		.ascii	"PWM_1_ReadCaptureBuf\000"
 3221      315F5265 
 3221      61644361 
 3221      70747572 
 3221      65427566 
 3222              	.LASF69:
 3223 00db 50574D5F 		.ascii	"PWM_1_ReadStatus\000"
 3223      315F5265 
 3223      61645374 
 3223      61747573 
 3223      00
 3224              	.LASF4:
 3225 00ec 6C6F6E67 		.ascii	"long int\000"
 3225      20696E74 
 3225      00
 3226              	.LASF9:
 3227 00f5 75696E74 		.ascii	"uint8\000"
 3227      3800
 3228              	.LASF12:
 3229 00fb 646F7562 		.ascii	"double\000"
 3229      6C6500
 3230              	.LASF45:
 3231 0102 50574D5F 		.ascii	"PWM_1_ReadCounter\000"
 3231      315F5265 
 3231      6164436F 
 3231      756E7465 
 3231      7200
 3232              	.LASF66:
 3233 0114 50574D5F 		.ascii	"PWM_1_SetCountMode\000"
 3233      315F5365 
 3233      74436F75 
 3233      6E744D6F 
ARM GAS  C:\Users\TINYWI~1\AppData\Local\Temp\ccrliPYO.s 			page 83


 3233      646500
 3234              	.LASF10:
 3235 0127 75696E74 		.ascii	"uint32\000"
 3235      333200
 3236              	.LASF74:
 3237 012e 50574D5F 		.ascii	"PWM_1_ClearInterrupt\000"
 3237      315F436C 
 3237      65617249 
 3237      6E746572 
 3237      72757074 
 3238              	.LASF62:
 3239 0143 74726967 		.ascii	"triggerMode\000"
 3239      6765724D 
 3239      6F646500 
 3240              	.LASF38:
 3241 014f 6D61736B 		.ascii	"mask\000"
 3241      00
 3242              	.LASF36:
 3243 0154 64656164 		.ascii	"deadTime\000"
 3243      54696D65 
 3243      00
 3244              	.LASF8:
 3245 015d 756E7369 		.ascii	"unsigned int\000"
 3245      676E6564 
 3245      20696E74 
 3245      00
 3246              	.LASF21:
 3247 016a 50574D5F 		.ascii	"PWM_1_SetMode\000"
 3247      315F5365 
 3247      744D6F64 
 3247      6500
 3248              	.LASF68:
 3249 0178 636F6D6D 		.ascii	"command\000"
 3249      616E6400 
 3250              	.LASF5:
 3251 0180 6C6F6E67 		.ascii	"long unsigned int\000"
 3251      20756E73 
 3251      69676E65 
 3251      6420696E 
 3251      7400
 3252              	.LASF30:
 3253 0192 6D6F6465 		.ascii	"modeMask\000"
 3253      4D61736B 
 3253      00
 3254              	.LASF46:
 3255 019b 50574D5F 		.ascii	"PWM_1_ReadPeriod\000"
 3255      315F5265 
 3255      61645065 
 3255      72696F64 
 3255      00
 3256              	.LASF53:
 3257 01ac 50574D5F 		.ascii	"PWM_1_WriteCompare\000"
 3257      315F5772 
 3257      69746543 
 3257      6F6D7061 
 3257      726500
 3258              	.LASF3:
ARM GAS  C:\Users\TINYWI~1\AppData\Local\Temp\ccrliPYO.s 			page 84


 3259 01bf 73686F72 		.ascii	"short unsigned int\000"
 3259      7420756E 
 3259      7369676E 
 3259      65642069 
 3259      6E7400
 3260              	.LASF28:
 3261 01d2 6F6E6553 		.ascii	"oneShotEnable\000"
 3261      686F7445 
 3261      6E61626C 
 3261      6500
 3262              	.LASF18:
 3263 01e0 50574D5F 		.ascii	"PWM_1_Enable\000"
 3263      315F456E 
 3263      61626C65 
 3263      00
 3264              	.LASF16:
 3265 01ed 50574D5F 		.ascii	"PWM_1_Init\000"
 3265      315F496E 
 3265      697400
 3266              	.LASF14:
 3267 01f8 72656733 		.ascii	"reg32\000"
 3267      3200
 3268              	.LASF39:
 3269 01fe 50574D5F 		.ascii	"PWM_1_WriteCounter\000"
 3269      315F5772 
 3269      69746543 
 3269      6F756E74 
 3269      657200
 3270              	.LASF33:
 3271 0211 50574D5F 		.ascii	"PWM_1_SetPWMStopOnKill\000"
 3271      315F5365 
 3271      7450574D 
 3271      53746F70 
 3271      4F6E4B69 
 3272              	.LASF15:
 3273 0228 73697A65 		.ascii	"sizetype\000"
 3273      74797065 
 3273      00
 3274              	.LASF32:
 3275 0231 73796E63 		.ascii	"syncKillEnable\000"
 3275      4B696C6C 
 3275      456E6162 
 3275      6C6500
 3276              	.LASF77:
 3277 0240 2E5C4765 		.ascii	".\\Generated_Source\\PSoC4\\PWM_1.c\000"
 3277      6E657261 
 3277      7465645F 
 3277      536F7572 
 3277      63655C50 
 3278              	.LASF54:
 3279 0261 636F6D70 		.ascii	"compare\000"
 3279      61726500 
 3280              	.LASF29:
 3281 0269 50574D5F 		.ascii	"PWM_1_SetPWMMode\000"
 3281      315F5365 
 3281      7450574D 
 3281      4D6F6465 
ARM GAS  C:\Users\TINYWI~1\AppData\Local\Temp\ccrliPYO.s 			page 85


 3281      00
 3282              	.LASF41:
 3283 027a 50574D5F 		.ascii	"PWM_1_SetCounterMode\000"
 3283      315F5365 
 3283      74436F75 
 3283      6E746572 
 3283      4D6F6465 
 3284              	.LASF58:
 3285 028f 50574D5F 		.ascii	"PWM_1_ReadCompareBuf\000"
 3285      315F5265 
 3285      6164436F 
 3285      6D706172 
 3285      65427566 
 3286              	.LASF47:
 3287 02a4 50574D5F 		.ascii	"PWM_1_SetCompareSwap\000"
 3287      315F5365 
 3287      74436F6D 
 3287      70617265 
 3287      53776170 
 3288              	.LASF11:
 3289 02b9 666C6F61 		.ascii	"float\000"
 3289      7400
 3290              	.LASF26:
 3291 02bf 70726573 		.ascii	"prescaler\000"
 3291      63616C65 
 3291      7200
 3292              	.LASF76:
 3293 02c9 474E5520 		.ascii	"GNU C 4.8.4 20140526 (release) [ARM/embedded-4_8-br"
 3293      4320342E 
 3293      382E3420 
 3293      32303134 
 3293      30353236 
 3294 02fc 616E6368 		.ascii	"anch revision 211358] -mcpu=cortex-m0 -mthumb -g -O"
 3294      20726576 
 3294      6973696F 
 3294      6E203231 
 3294      31333538 
 3295 032f 30202D66 		.ascii	"0 -ffunction-sections\000"
 3295      66756E63 
 3295      74696F6E 
 3295      2D736563 
 3295      74696F6E 
 3296              	.LASF51:
 3297 0345 50574D5F 		.ascii	"PWM_1_ReadPeriodBuf\000"
 3297      315F5265 
 3297      61645065 
 3297      72696F64 
 3297      42756600 
 3298              	.LASF37:
 3299 0359 50574D5F 		.ascii	"PWM_1_SetPWMInvert\000"
 3299      315F5365 
 3299      7450574D 
 3299      496E7665 
 3299      727400
 3300              	.LASF64:
 3301 036c 50574D5F 		.ascii	"PWM_1_SetStartMode\000"
 3301      315F5365 
ARM GAS  C:\Users\TINYWI~1\AppData\Local\Temp\ccrliPYO.s 			page 86


 3301      74537461 
 3301      72744D6F 
 3301      646500
 3302              	.LASF1:
 3303 037f 756E7369 		.ascii	"unsigned char\000"
 3303      676E6564 
 3303      20636861 
 3303      7200
 3304              	.LASF35:
 3305 038d 50574D5F 		.ascii	"PWM_1_SetPWMDeadTime\000"
 3305      315F5365 
 3305      7450574D 
 3305      44656164 
 3305      54696D65 
 3306              	.LASF31:
 3307 03a2 50574D5F 		.ascii	"PWM_1_SetPWMSyncKill\000"
 3307      315F5365 
 3307      7450574D 
 3307      53796E63 
 3307      4B696C6C 
 3308              	.LASF34:
 3309 03b7 73746F70 		.ascii	"stopOnKillEnable\000"
 3309      4F6E4B69 
 3309      6C6C456E 
 3309      61626C65 
 3309      00
 3310              	.LASF2:
 3311 03c8 73686F72 		.ascii	"short int\000"
 3311      7420696E 
 3311      7400
 3312              	.LASF52:
 3313 03d2 50574D5F 		.ascii	"PWM_1_SetPeriodSwap\000"
 3313      315F5365 
 3313      74506572 
 3313      696F6453 
 3313      77617000 
 3314              	.LASF71:
 3315 03e6 696E7465 		.ascii	"interruptMask\000"
 3315      72727570 
 3315      744D6173 
 3315      6B00
 3316              	.LASF70:
 3317 03f4 50574D5F 		.ascii	"PWM_1_SetInterruptMode\000"
 3317      315F5365 
 3317      74496E74 
 3317      65727275 
 3317      70744D6F 
 3318              	.LASF65:
 3319 040b 50574D5F 		.ascii	"PWM_1_SetStopMode\000"
 3319      315F5365 
 3319      7453746F 
 3319      704D6F64 
 3319      6500
 3320              	.LASF13:
 3321 041d 63686172 		.ascii	"char\000"
 3321      00
 3322              	.LASF23:
ARM GAS  C:\Users\TINYWI~1\AppData\Local\Temp\ccrliPYO.s 			page 87


 3323 0422 6D6F6465 		.ascii	"mode\000"
 3323      00
 3324              	.LASF67:
 3325 0427 50574D5F 		.ascii	"PWM_1_TriggerCommand\000"
 3325      315F5472 
 3325      69676765 
 3325      72436F6D 
 3325      6D616E64 
 3326              	.LASF25:
 3327 043c 50574D5F 		.ascii	"PWM_1_SetPrescaler\000"
 3327      315F5365 
 3327      74507265 
 3327      7363616C 
 3327      657200
 3328              	.LASF78:
 3329 044f 433A5C55 		.ascii	"C:\\Users\\TinyWindows\\Documents\\PSoC Creator\\pi"
 3329      73657273 
 3329      5C54696E 
 3329      7957696E 
 3329      646F7773 
 3330 047d 657A6F2D 		.ascii	"ezo-sensor\\My First Project.cydsn\000"
 3330      73656E73 
 3330      6F725C4D 
 3330      79204669 
 3330      72737420 
 3331              	.LASF56:
 3332 049f 50574D5F 		.ascii	"PWM_1_WriteCompareBuf\000"
 3332      315F5772 
 3332      69746543 
 3332      6F6D7061 
 3332      72654275 
 3333              	.LASF42:
 3334 04b5 636F756E 		.ascii	"counterMode\000"
 3334      7465724D 
 3334      6F646500 
 3335              	.LASF57:
 3336 04c1 636F6D70 		.ascii	"compareBuf\000"
 3336      61726542 
 3336      756600
 3337              	.LASF17:
 3338 04cc 50574D5F 		.ascii	"PWM_1_Start\000"
 3338      315F5374 
 3338      61727400 
 3339              	.LASF63:
 3340 04d8 50574D5F 		.ascii	"PWM_1_SetReloadMode\000"
 3340      315F5365 
 3340      7452656C 
 3340      6F61644D 
 3340      6F646500 
 3341              	.LASF20:
 3342 04ec 656E6162 		.ascii	"enableInterrupts\000"
 3342      6C65496E 
 3342      74657272 
 3342      75707473 
 3342      00
 3343              	.LASF43:
 3344 04fd 50574D5F 		.ascii	"PWM_1_WritePeriod\000"
ARM GAS  C:\Users\TINYWI~1\AppData\Local\Temp\ccrliPYO.s 			page 88


 3344      315F5772 
 3344      69746550 
 3344      6572696F 
 3344      6400
 3345              	.LASF61:
 3346 050f 50574D5F 		.ascii	"PWM_1_SetCaptureMode\000"
 3346      315F5365 
 3346      74436170 
 3346      74757265 
 3346      4D6F6465 
 3347              	.LASF79:
 3348 0524 50574D5F 		.ascii	"PWM_1_initVar\000"
 3348      315F696E 
 3348      69745661 
 3348      7200
 3349              	.LASF22:
 3350 0532 50574D5F 		.ascii	"PWM_1_SetQDMode\000"
 3350      315F5365 
 3350      7451444D 
 3350      6F646500 
 3351              	.LASF48:
 3352 0542 73776170 		.ascii	"swapEnable\000"
 3352      456E6162 
 3352      6C6500
 3353              	.LASF50:
 3354 054d 70657269 		.ascii	"periodBuf\000"
 3354      6F644275 
 3354      6600
 3355              	.LASF72:
 3356 0557 50574D5F 		.ascii	"PWM_1_GetInterruptSourceMasked\000"
 3356      315F4765 
 3356      74496E74 
 3356      65727275 
 3356      7074536F 
 3357              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.8.4 20140526 (release) [ARM/embedded-4_8-br
