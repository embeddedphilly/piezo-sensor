ARM GAS  C:\Users\Ryan\AppData\Local\Temp\ccK6nYzE.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"CapSense_CSHL.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.comm	CapSense_rawFilterData1,10,4
  18              		.global	CapSense_sensorBaseline
  19              		.bss
  20              		.align	2
  21              		.type	CapSense_sensorBaseline, %object
  22              		.size	CapSense_sensorBaseline, 10
  23              	CapSense_sensorBaseline:
  24 0000 00000000 		.space	10
  24      00000000 
  24      0000
  25              		.global	CapSense_sensorBaselineLow
  26 000a 0000     		.align	2
  27              		.type	CapSense_sensorBaselineLow, %object
  28              		.size	CapSense_sensorBaselineLow, 5
  29              	CapSense_sensorBaselineLow:
  30 000c 00000000 		.space	5
  30      00
  31              		.global	CapSense_sensorSignal
  32 0011 000000   		.align	2
  33              		.type	CapSense_sensorSignal, %object
  34              		.size	CapSense_sensorSignal, 5
  35              	CapSense_sensorSignal:
  36 0014 00000000 		.space	5
  36      00
  37              		.global	CapSense_sensorOnMask
  38 0019 000000   		.align	2
  39              		.type	CapSense_sensorOnMask, %object
  40              		.size	CapSense_sensorOnMask, 1
  41              	CapSense_sensorOnMask:
  42 001c 00       		.space	1
  43              		.comm	CapSense_lowBaselineResetCnt,5,4
  44              		.global	CapSense_lowBaselineReset
  45              		.data
  46              		.align	2
  47              		.type	CapSense_lowBaselineReset, %object
  48              		.size	CapSense_lowBaselineReset, 5
  49              	CapSense_lowBaselineReset:
  50 0000 1E       		.byte	30
  51 0001 1E       		.byte	30
  52 0002 1E       		.byte	30
  53 0003 1E       		.byte	30
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\ccK6nYzE.s 			page 2


  54 0004 1E       		.byte	30
  55              		.global	CapSense_enableRawFilters
  56              		.type	CapSense_enableRawFilters, %object
  57              		.size	CapSense_enableRawFilters, 1
  58              	CapSense_enableRawFilters:
  59 0005 01       		.byte	1
  60              		.comm	CapSense_fingerThreshold,1,4
  61              		.comm	CapSense_noiseThreshold,1,4
  62              		.comm	CapSense_negativeNoiseThreshold,1,4
  63              		.comm	CapSense_hysteresis,1,4
  64              		.global	CapSense_debounce
  65 0006 0000     		.align	2
  66              		.type	CapSense_debounce, %object
  67              		.size	CapSense_debounce, 1
  68              	CapSense_debounce:
  69 0008 01       		.byte	1
  70              		.global	CapSense_rawDataIndex
  71              		.section	.rodata
  72              		.align	2
  73              		.type	CapSense_rawDataIndex, %object
  74              		.size	CapSense_rawDataIndex, 1
  75              	CapSense_rawDataIndex:
  76 0000 00       		.space	1
  77              		.global	CapSense_numberOfSensors
  78 0001 000000   		.align	2
  79              		.type	CapSense_numberOfSensors, %object
  80              		.size	CapSense_numberOfSensors, 1
  81              	CapSense_numberOfSensors:
  82 0004 05       		.byte	5
  83 0005 000000   		.align	2
  84              		.type	CapSense_centroidMult, %object
  85              		.size	CapSense_centroidMult, 2
  86              	CapSense_centroidMult:
  87 0008 C01F     		.short	8128
  88 000a 0000     		.data
  89 0009 000000   		.align	2
  90              		.type	CapSense_posFiltersMask, %object
  91              		.size	CapSense_posFiltersMask, 1
  92              	CapSense_posFiltersMask:
  93 000c 08       		.byte	8
  94 000d 000000   		.align	2
  95              		.type	CapSense_posFiltersData, %object
  96              		.size	CapSense_posFiltersData, 3
  97              	CapSense_posFiltersData:
  98 0010 01       		.byte	1
  99 0011 00       		.byte	0
 100 0012 00       		.byte	0
 101 0013 00       		.section	.text.CapSense_BaseInit,"ax",%progbits
 102              		.align	2
 103              		.global	CapSense_BaseInit
 104              		.code	16
 105              		.thumb_func
 106              		.type	CapSense_BaseInit, %function
 107              	CapSense_BaseInit:
 108              	.LFB33:
 109              		.file 1 ".\\Generated_Source\\PSoC4\\CapSense_CSHL.c"
   1:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\ccK6nYzE.s 			page 3


   2:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * File Name: CapSense_CSHL.c
   3:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Version 2.20
   4:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
   5:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Description:
   6:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This file provides the source code to the High Level APIs for the CapSesne
   7:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CSD component.
   8:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
   9:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Note:
  10:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
  11:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
  12:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Copyright 2014, Cypress Semiconductor Corporation.  All rights reserved.
  13:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * You may use this file only in accordance with the license, terms, conditions,
  14:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * disclaimers, and limitations in the end user license agreement accompanying
  15:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * the software package with which this file was provided.
  16:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
  17:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  18:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #include "CapSense_CSHL.h"
  19:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #include "CapSense_PVT.h"
  20:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  21:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /* SmartSense functions */
  22:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if (CapSense_TUNING_METHOD == CapSense__TUNING_AUTO)
  23:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     extern void CapSense_UpdateThresholds(uint32 sensor);
  24:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (CapSense_TUNING_METHOD == CapSense__TUNING_AUTO) */
  25:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  26:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /* Storage of filters data */
  27:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER)) || \
  28:.\Generated_Source\PSoC4/CapSense_CSHL.c ****       (0u != (CapSense_RAW_FILTER_MASK & CapSense_AVERAGING_FILTER)) )
  29:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  30:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_rawFilterData1[CapSense_TOTAL_SENSOR_COUNT];
  31:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_rawFilterData2[CapSense_TOTAL_SENSOR_COUNT];
  32:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  33:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #elif ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR2_FILTER))   || \
  34:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR4_FILTER))   || \
  35:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         (0u != (CapSense_RAW_FILTER_MASK & CapSense_JITTER_FILTER)) || \
  36:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR8_FILTER))   || \
  37:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR16_FILTER)) )
  38:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
  39:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_rawFilterData1[CapSense_TOTAL_SENSOR_COUNT];
  40:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif  /* ( (CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER) || \
  41:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         *    (CapSense_RAW_FILTER_MASK & CapSense_AVERAGING_FILTER) )
  42:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         */
  43:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  44:.\Generated_Source\PSoC4/CapSense_CSHL.c **** extern uint16 CapSense_sensorRaw[CapSense_TOTAL_SENSOR_COUNT];
  45:.\Generated_Source\PSoC4/CapSense_CSHL.c **** extern uint8 CapSense_sensorEnableMask[CapSense_TOTAL_SENSOR_MASK];
  46:.\Generated_Source\PSoC4/CapSense_CSHL.c **** extern const uint8 CapSense_widgetNumber[CapSense_TOTAL_SENSOR_COUNT];
  47:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  48:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if (CapSense_TUNING_METHOD != CapSense__TUNING_NONE)
  49:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	extern uint32 CapSense_widgetResolution[CapSense_RESOLUTIONS_TBL_SIZE];	
  50:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (CapSense_TUNING_METHOD != CapSense__TUNING_NONE) */
  51:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  52:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint16 CapSense_sensorBaseline[CapSense_TOTAL_SENSOR_COUNT] = {0u};
  53:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_sensorBaselineLow[CapSense_TOTAL_SENSOR_COUNT] = {0u};
  54:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_sensorSignal[CapSense_TOTAL_SENSOR_COUNT] = {0u};
  55:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_sensorOnMask[CapSense_TOTAL_SENSOR_MASK] = {0u};
  56:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  57:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_lowBaselineResetCnt[CapSense_TOTAL_SENSOR_COUNT];
  58:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_lowBaselineReset[CapSense_TOTAL_SENSOR_COUNT] = {
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\ccK6nYzE.s 			page 4


  59:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     30u, 30u, 30u, 30u, 30u, 
  60:.\Generated_Source\PSoC4/CapSense_CSHL.c **** };
  61:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  62:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  63:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  64:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if (CapSense_TUNING_METHOD == CapSense__TUNING_AUTO)
  65:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	extern CapSense_CONFIG_TYPE_P4_v2_20 CapSense_config;
  66:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif  /* (CapSense_TUNING_METHOD == CapSense__TUNING_AUTO) */
  67:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  68:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if (CapSense_RAW_FILTER_MASK != 0u)
  69:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_enableRawFilters = CapSense_RAW_FILTERS_ENABLED;
  70:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif  /* (CapSense_RAW_FILTER_MASK != 0u) */
  71:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  72:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /* Generated by Customizer */
  73:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_fingerThreshold[CapSense_THRESHOLD_TBL_SIZE];
  74:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  75:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_noiseThreshold[CapSense_THRESHOLD_TBL_SIZE];
  76:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  77:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_negativeNoiseThreshold[CapSense_THRESHOLD_TBL_SIZE];
  78:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  79:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_hysteresis[CapSense_WIDGET_PARAM_TBL_SIZE];
  80:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  81:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_debounce[] = {
  82:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     1u, 
  83:.\Generated_Source\PSoC4/CapSense_CSHL.c **** };
  84:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  85:.\Generated_Source\PSoC4/CapSense_CSHL.c **** const uint8 CapSense_rawDataIndex[] = {
  86:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     0u, /* LinearSlider0__LS */
  87:.\Generated_Source\PSoC4/CapSense_CSHL.c **** };
  88:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  89:.\Generated_Source\PSoC4/CapSense_CSHL.c **** const uint8 CapSense_numberOfSensors[] = {
  90:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     5u, /* LinearSlider0__LS */
  91:.\Generated_Source\PSoC4/CapSense_CSHL.c **** };
  92:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  93:.\Generated_Source\PSoC4/CapSense_CSHL.c **** static const uint16 CapSense_centroidMult[] = {
  94:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     8128u, 
  95:.\Generated_Source\PSoC4/CapSense_CSHL.c **** };
  96:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  97:.\Generated_Source\PSoC4/CapSense_CSHL.c **** static uint8 CapSense_posFiltersMask[] = {
  98:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     0x8u, 
  99:.\Generated_Source\PSoC4/CapSense_CSHL.c **** };
 100:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 101:.\Generated_Source\PSoC4/CapSense_CSHL.c **** static uint8 CapSense_posFiltersData[] = {
 102:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     1u, 0u, 0u, 
 103:.\Generated_Source\PSoC4/CapSense_CSHL.c **** };
 104:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 105:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 106:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 107:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 108:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 109:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_BaseInit
 110:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 111:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 112:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 113:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Loads the CapSense_sensorBaseline[sensor] array element with an 
 114:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  initial value which is equal to the raw count value. 
 115:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Resets to zero CapSense_sensorBaselineLow[sensor] and 
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\ccK6nYzE.s 			page 5


 116:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorSignal[sensor] array element.
 117:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Loads the CapSense_rawFilterData2[sensor] and 
 118:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_rawFilterData2[sensor] array element with an 
 119:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  initial value which is equal to the raw count value if the raw data filter is enabled.
 120:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 121:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 122:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor:  Sensor number.
 123:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 124:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 125:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 126:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 127:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 128:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorBaseline[]    - used to store the baseline value.
 129:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorBaselineLow[] - used to store the fraction byte of 
 130:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  the baseline value.
 131:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorSignal[]      - used to store a difference between 
 132:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  the current value of raw data and the previous value of the baseline.
 133:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_rawFilterData1[]    - used to store a previous sample of 
 134:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  any enabled raw data filter.
 135:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_rawFilterData2[]    - used to store before a previous sample
 136:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  of the enabled raw data filter. Required only for median or average filters.
 137:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 138:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 139:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 140:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * 
 141:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 142:.\Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_BaseInit(uint32 sensor)
 143:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 110              		.loc 1 143 0
 111              		.cfi_startproc
 112 0000 80B5     		push	{r7, lr}
 113              		.cfi_def_cfa_offset 8
 114              		.cfi_offset 7, -8
 115              		.cfi_offset 14, -4
 116 0002 82B0     		sub	sp, sp, #8
 117              		.cfi_def_cfa_offset 16
 118 0004 00AF     		add	r7, sp, #0
 119              		.cfi_def_cfa_register 7
 120 0006 7860     		str	r0, [r7, #4]
 144:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #if ((CapSense_TOTAL_BUTTONS_COUNT) || (CapSense_TOTAL_MATRIX_BUTTONS_COUNT) || \
 145:.\Generated_Source\PSoC4/CapSense_CSHL.c ****          (CapSense_TOTAL_GENERICS_COUNT))
 146:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 widget = CapSense_widgetNumber[sensor];
 147:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif /* ((CapSense_TOTAL_MATRIX_BUTTONS_COUNT) || (CapSense_TOTAL_MATRIX_BUTTONS_COUNT)) */
 148:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
 149:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TOTAL_MATRIX_BUTTONS_COUNT)
 150:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 debounceIndex;
 151:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif  /* (CapSense_TOTAL_MATRIX_BUTTONS_COUNT) */
 152:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
 153:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TOTAL_GENERICS_COUNT)
 154:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Exclude generic widget */
 155:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if(widget < CapSense_END_OF_WIDGETS_INDEX)
 156:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 157:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif  /* CapSense_TOTAL_GENERICS_COUNT */
 158:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
 159:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Initialize Baseline */
 160:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_sensorBaseline[sensor] = CapSense_sensorRaw[sensor];
 121              		.loc 1 160 0
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\ccK6nYzE.s 			page 6


 122 0008 0E4B     		ldr	r3, .L2
 123 000a 7A68     		ldr	r2, [r7, #4]
 124 000c 5200     		lsl	r2, r2, #1
 125 000e D15A     		ldrh	r1, [r2, r3]
 126 0010 0D4B     		ldr	r3, .L2+4
 127 0012 7A68     		ldr	r2, [r7, #4]
 128 0014 5200     		lsl	r2, r2, #1
 129 0016 D152     		strh	r1, [r2, r3]
 161:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_sensorBaselineLow[sensor] = 0u;
 130              		.loc 1 161 0
 131 0018 0C4A     		ldr	r2, .L2+8
 132 001a 7B68     		ldr	r3, [r7, #4]
 133 001c D318     		add	r3, r2, r3
 134 001e 0022     		mov	r2, #0
 135 0020 1A70     		strb	r2, [r3]
 162:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_sensorSignal[sensor] = 0u;
 136              		.loc 1 162 0
 137 0022 0B4A     		ldr	r2, .L2+12
 138 0024 7B68     		ldr	r3, [r7, #4]
 139 0026 D318     		add	r3, r2, r3
 140 0028 0022     		mov	r2, #0
 141 002a 1A70     		strb	r2, [r3]
 163:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
 164:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 165:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
 166:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #if ((0u != (CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER)) ||\
 167:.\Generated_Source\PSoC4/CapSense_CSHL.c ****          (0u != (CapSense_RAW_FILTER_MASK & CapSense_AVERAGING_FILTER)))
 168:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 169:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_rawFilterData1[sensor] = CapSense_sensorRaw[sensor];
 170:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_rawFilterData2[sensor] = CapSense_sensorRaw[sensor];
 171:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
 172:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #elif ((CapSense_RAW_FILTER_MASK & CapSense_IIR2_FILTER) ||\
 173:.\Generated_Source\PSoC4/CapSense_CSHL.c ****            (CapSense_RAW_FILTER_MASK & CapSense_IIR4_FILTER) ||\
 174:.\Generated_Source\PSoC4/CapSense_CSHL.c ****            (CapSense_RAW_FILTER_MASK & CapSense_JITTER_FILTER) ||\
 175:.\Generated_Source\PSoC4/CapSense_CSHL.c ****            (CapSense_RAW_FILTER_MASK & CapSense_IIR8_FILTER) ||\
 176:.\Generated_Source\PSoC4/CapSense_CSHL.c ****            (CapSense_RAW_FILTER_MASK & CapSense_IIR16_FILTER))
 177:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             
 178:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_rawFilterData1[sensor] = CapSense_sensorRaw[sensor];
 142              		.loc 1 178 0
 143 002c 054B     		ldr	r3, .L2
 144 002e 7A68     		ldr	r2, [r7, #4]
 145 0030 5200     		lsl	r2, r2, #1
 146 0032 D15A     		ldrh	r1, [r2, r3]
 147 0034 074B     		ldr	r3, .L2+16
 148 0036 7A68     		ldr	r2, [r7, #4]
 149 0038 5200     		lsl	r2, r2, #1
 150 003a D152     		strh	r1, [r2, r3]
 179:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
 180:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #else
 181:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* No Raw filters */
 182:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif  /* ((CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER) || \
 183:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             *   (CapSense_RAW_FILTER_MASK & CapSense_AVERAGING_FILTER))
 184:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             */
 185:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
 186:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TOTAL_GENERICS_COUNT)
 187:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Exclude generic widget */
 188:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\ccK6nYzE.s 			page 7


 189:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif  /* CapSense_TOTAL_GENERICS_COUNT */
 190:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 151              		.loc 1 190 0
 152 003c BD46     		mov	sp, r7
 153 003e 02B0     		add	sp, sp, #8
 154              		@ sp needed
 155 0040 80BD     		pop	{r7, pc}
 156              	.L3:
 157 0042 C046     		.align	2
 158              	.L2:
 159 0044 00000000 		.word	CapSense_sensorRaw
 160 0048 00000000 		.word	CapSense_sensorBaseline
 161 004c 00000000 		.word	CapSense_sensorBaselineLow
 162 0050 00000000 		.word	CapSense_sensorSignal
 163 0054 00000000 		.word	CapSense_rawFilterData1
 164              		.cfi_endproc
 165              	.LFE33:
 166              		.size	CapSense_BaseInit, .-CapSense_BaseInit
 167              		.section	.text.CapSense_InitializeSensorBaseline,"ax",%progbits
 168              		.align	2
 169              		.global	CapSense_InitializeSensorBaseline
 170              		.code	16
 171              		.thumb_func
 172              		.type	CapSense_InitializeSensorBaseline, %function
 173              	CapSense_InitializeSensorBaseline:
 174              	.LFB34:
 191:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 192:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 193:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 194:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_InitializeSensorBaseline
 195:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 196:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 197:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 198:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Loads the CapSense_sensorBaseline[sensor] array element with an 
 199:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  initial value by scanning the selected sensor (one channel design) or a pair 
 200:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  of sensors (two channels designs). The raw count value is copied into the 
 201:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  baseline array for each sensor. The raw data filters are initialized if 
 202:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  enabled.
 203:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 204:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 205:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor:  Sensor number.
 206:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 207:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 208:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 209:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 210:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 211:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 212:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 213:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 214:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 215:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * 
 216:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 217:.\Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_InitializeSensorBaseline(uint32 sensor)
 218:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 175              		.loc 1 218 0
 176              		.cfi_startproc
 177 0000 80B5     		push	{r7, lr}
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\ccK6nYzE.s 			page 8


 178              		.cfi_def_cfa_offset 8
 179              		.cfi_offset 7, -8
 180              		.cfi_offset 14, -4
 181 0002 82B0     		sub	sp, sp, #8
 182              		.cfi_def_cfa_offset 16
 183 0004 00AF     		add	r7, sp, #0
 184              		.cfi_def_cfa_register 7
 185 0006 7860     		str	r0, [r7, #4]
 219:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Scan sensor */
 220:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_ScanSensor(sensor);
 186              		.loc 1 220 0
 187 0008 7B68     		ldr	r3, [r7, #4]
 188 000a 181C     		mov	r0, r3
 189 000c FFF7FEFF 		bl	CapSense_ScanSensor
 221:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     while(CapSense_IsBusy() != 0u)
 190              		.loc 1 221 0
 191 0010 C046     		mov	r8, r8
 192              	.L5:
 193              		.loc 1 221 0 is_stmt 0 discriminator 1
 194 0012 FFF7FEFF 		bl	CapSense_IsBusy
 195 0016 031C     		mov	r3, r0
 196 0018 002B     		cmp	r3, #0
 197 001a FAD1     		bne	.L5
 222:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 223:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Wait while sensor is busy */
 224:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 225:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
 226:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Initialize Baseline, Signal and debounce counters */       
 227:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_BaseInit(sensor);
 198              		.loc 1 227 0 is_stmt 1
 199 001c 7B68     		ldr	r3, [r7, #4]
 200 001e 181C     		mov	r0, r3
 201 0020 FFF7FEFF 		bl	CapSense_BaseInit
 228:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 202              		.loc 1 228 0
 203 0024 BD46     		mov	sp, r7
 204 0026 02B0     		add	sp, sp, #8
 205              		@ sp needed
 206 0028 80BD     		pop	{r7, pc}
 207              		.cfi_endproc
 208              	.LFE34:
 209              		.size	CapSense_InitializeSensorBaseline, .-CapSense_InitializeSensorBaseline
 210 002a C046     		.section	.text.CapSense_InitializeAllBaselines,"ax",%progbits
 211              		.align	2
 212              		.global	CapSense_InitializeAllBaselines
 213              		.code	16
 214              		.thumb_func
 215              		.type	CapSense_InitializeAllBaselines, %function
 216              	CapSense_InitializeAllBaselines:
 217              	.LFB35:
 229:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 230:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 231:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 232:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_InitializeAllBaselines
 233:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 234:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 235:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\ccK6nYzE.s 			page 9


 236:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Uses the CapSense_InitializeSensorBaseline function to load the 
 237:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorBaseline[] array with an initial values by scanning 
 238:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  all the sensors. The raw count values are copied into the baseline array for 
 239:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  all the sensors. The raw data filters are initialized if enabled.
 240:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 241:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 242:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 243:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 244:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 245:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 246:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 247:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 248:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 249:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 250:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 251:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 252:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * 
 253:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 254:.\Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_InitializeAllBaselines(void)
 255:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 218              		.loc 1 255 0
 219              		.cfi_startproc
 220 0000 80B5     		push	{r7, lr}
 221              		.cfi_def_cfa_offset 8
 222              		.cfi_offset 7, -8
 223              		.cfi_offset 14, -4
 224 0002 82B0     		sub	sp, sp, #8
 225              		.cfi_def_cfa_offset 16
 226 0004 00AF     		add	r7, sp, #0
 227              		.cfi_def_cfa_register 7
 256:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 i;
 257:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
 258:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	for(i = 0u; i < CapSense_TOTAL_SCANSLOT_COUNT; i++)
 228              		.loc 1 258 0
 229 0006 0023     		mov	r3, #0
 230 0008 7B60     		str	r3, [r7, #4]
 231 000a 06E0     		b	.L7
 232              	.L8:
 259:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	{
 260:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     	CapSense_InitializeSensorBaseline(i);
 233              		.loc 1 260 0 discriminator 2
 234 000c 7B68     		ldr	r3, [r7, #4]
 235 000e 181C     		mov	r0, r3
 236 0010 FFF7FEFF 		bl	CapSense_InitializeSensorBaseline
 258:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	for(i = 0u; i < CapSense_TOTAL_SCANSLOT_COUNT; i++)
 237              		.loc 1 258 0 discriminator 2
 238 0014 7B68     		ldr	r3, [r7, #4]
 239 0016 0133     		add	r3, r3, #1
 240 0018 7B60     		str	r3, [r7, #4]
 241              	.L7:
 258:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	for(i = 0u; i < CapSense_TOTAL_SCANSLOT_COUNT; i++)
 242              		.loc 1 258 0 is_stmt 0 discriminator 1
 243 001a 7B68     		ldr	r3, [r7, #4]
 244 001c 042B     		cmp	r3, #4
 245 001e F5D9     		bls	.L8
 261:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	}
 262:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\ccK6nYzE.s 			page 10


 246              		.loc 1 262 0 is_stmt 1
 247 0020 BD46     		mov	sp, r7
 248 0022 02B0     		add	sp, sp, #8
 249              		@ sp needed
 250 0024 80BD     		pop	{r7, pc}
 251              		.cfi_endproc
 252              	.LFE35:
 253              		.size	CapSense_InitializeAllBaselines, .-CapSense_InitializeAllBaselines
 254 0026 C046     		.section	.text.CapSense_InitializeEnabledBaselines,"ax",%progbits
 255              		.align	2
 256              		.global	CapSense_InitializeEnabledBaselines
 257              		.code	16
 258              		.thumb_func
 259              		.type	CapSense_InitializeEnabledBaselines, %function
 260              	CapSense_InitializeEnabledBaselines:
 261              	.LFB36:
 263:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 264:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 265:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 266:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_InitializeEnabledBaselines
 267:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 268:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 269:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 270:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Scans all the enabled widgets and the raw count values are copied into the 
 271:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  baseline array for all the sensors enabled in the scanning process. The baselines 
 272:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  are initialized with zero values for sensors disabled from the scanning process. 
 273:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  The raw data filters are initialized if enabled.
 274:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 275:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 276:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 277:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 278:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 279:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 280:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 281:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 282:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorRaw[] - used to store the sensors raw data.
 283:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[ ] - used to store bit masks of the enabled sensors.
 284:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 285:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 286:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 287:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * 
 288:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 289:.\Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_InitializeEnabledBaselines(void)
 290:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 262              		.loc 1 290 0
 263              		.cfi_startproc
 264 0000 80B5     		push	{r7, lr}
 265              		.cfi_def_cfa_offset 8
 266              		.cfi_offset 7, -8
 267              		.cfi_offset 14, -4
 268 0002 82B0     		sub	sp, sp, #8
 269              		.cfi_def_cfa_offset 16
 270 0004 00AF     		add	r7, sp, #0
 271              		.cfi_def_cfa_register 7
 291:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 i;
 292:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 isSensorEnabled;
 293:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\ccK6nYzE.s 			page 11


 294:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_ScanEnabledWidgets();
 272              		.loc 1 294 0
 273 0006 FFF7FEFF 		bl	CapSense_ScanEnabledWidgets
 295:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     while(CapSense_IsBusy() != 0u)
 274              		.loc 1 295 0
 275 000a C046     		mov	r8, r8
 276              	.L10:
 277              		.loc 1 295 0 is_stmt 0 discriminator 1
 278 000c FFF7FEFF 		bl	CapSense_IsBusy
 279 0010 031C     		mov	r3, r0
 280 0012 002B     		cmp	r3, #0
 281 0014 FAD1     		bne	.L10
 296:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 297:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Wait while sensor is busy */
 298:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 299:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
 300:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     for(i = 0u; i < CapSense_TOTAL_SENSOR_COUNT; i++)
 282              		.loc 1 300 0 is_stmt 1
 283 0016 0023     		mov	r3, #0
 284 0018 7B60     		str	r3, [r7, #4]
 285 001a 11E0     		b	.L11
 286              	.L13:
 301:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 302:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         isSensorEnabled = CapSense_GetBitValue(CapSense_sensorEnableMask, i);
 287              		.loc 1 302 0
 288 001c 0B4A     		ldr	r2, .L14
 289 001e 7B68     		ldr	r3, [r7, #4]
 290 0020 101C     		mov	r0, r2
 291 0022 191C     		mov	r1, r3
 292 0024 FFF7FEFF 		bl	CapSense_GetBitValue
 293 0028 031C     		mov	r3, r0
 294 002a 3B60     		str	r3, [r7]
 303:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
 304:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Clear raw data if sensor is disabled from scanning process */
 305:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if(isSensorEnabled != 0u)
 295              		.loc 1 305 0
 296 002c 3B68     		ldr	r3, [r7]
 297 002e 002B     		cmp	r3, #0
 298 0030 03D0     		beq	.L12
 306:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 307:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Initialize baselines */
 308:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_BaseInit(i);
 299              		.loc 1 308 0
 300 0032 7B68     		ldr	r3, [r7, #4]
 301 0034 181C     		mov	r0, r3
 302 0036 FFF7FEFF 		bl	CapSense_BaseInit
 303              	.L12:
 300:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     for(i = 0u; i < CapSense_TOTAL_SENSOR_COUNT; i++)
 304              		.loc 1 300 0
 305 003a 7B68     		ldr	r3, [r7, #4]
 306 003c 0133     		add	r3, r3, #1
 307 003e 7B60     		str	r3, [r7, #4]
 308              	.L11:
 300:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     for(i = 0u; i < CapSense_TOTAL_SENSOR_COUNT; i++)
 309              		.loc 1 300 0 is_stmt 0 discriminator 1
 310 0040 7B68     		ldr	r3, [r7, #4]
 311 0042 042B     		cmp	r3, #4
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\ccK6nYzE.s 			page 12


 312 0044 EAD9     		bls	.L13
 309:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
 310:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 311:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }  
 313              		.loc 1 311 0 is_stmt 1
 314 0046 BD46     		mov	sp, r7
 315 0048 02B0     		add	sp, sp, #8
 316              		@ sp needed
 317 004a 80BD     		pop	{r7, pc}
 318              	.L15:
 319              		.align	2
 320              	.L14:
 321 004c 00000000 		.word	CapSense_sensorEnableMask
 322              		.cfi_endproc
 323              	.LFE36:
 324              		.size	CapSense_InitializeEnabledBaselines, .-CapSense_InitializeEnabledBaselines
 325              		.section	.text.CapSense_UpdateBaselineNoThreshold,"ax",%progbits
 326              		.align	2
 327              		.global	CapSense_UpdateBaselineNoThreshold
 328              		.code	16
 329              		.thumb_func
 330              		.type	CapSense_UpdateBaselineNoThreshold, %function
 331              	CapSense_UpdateBaselineNoThreshold:
 332              	.LFB37:
 312:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 313:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 314:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 315:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_UpdateBaselineNoThreshold
 316:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 317:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 318:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 319:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Updates the CapSense_sensorBaseline[sensor] array element using the 
 320:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  LP filter with k = 256. The signal calculates the difference of count by 
 321:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  subtracting the previous baseline from the current raw count value and stores
 322:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  it in CapSense_sensorSignal[sensor]. 
 323:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  If the auto reset option is enabled, the baseline updated regards the noise threshold. 
 324:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  If the auto reset option is disabled, the baseline stops updating; baseline is loaded 
 325:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  with a raw count value if a signal is greater than zero and if signal is less 
 326:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  than noise threshold.
 327:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Raw data filters are applied to the values if enabled before baseline 
 328:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  calculation.
 329:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 330:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API does not update the thresholds in the Smartsense Mode.
 331:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 332:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 333:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor:  Sensor number.
 334:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 335:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 336:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 337:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 338:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 339:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_widgetNumber[]  - stores widget numbers.
 340:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorBaseline[]    - used to store baseline value.
 341:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorBaselineLow[] - used to store fraction byte of 
 342:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  baseline value.
 343:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorSignal[]      - used to store difference between 
 344:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  current value of raw data and previous value of baseline.
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\ccK6nYzE.s 			page 13


 345:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_rawFilterData1[]    - used to store previous sample of 
 346:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  any enabled raw data filter.
 347:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_rawFilterData2[]    - used to store before previous sample
 348:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  of enabled raw data filter. Only required for median or average filters.
 349:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * 
 350:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 351:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 352:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * 
 353:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 354:.\Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_UpdateBaselineNoThreshold(uint32 sensor)
 355:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 333              		.loc 1 355 0
 334              		.cfi_startproc
 335 0000 90B5     		push	{r4, r7, lr}
 336              		.cfi_def_cfa_offset 12
 337              		.cfi_offset 4, -12
 338              		.cfi_offset 7, -8
 339              		.cfi_offset 14, -4
 340 0002 87B0     		sub	sp, sp, #28
 341              		.cfi_def_cfa_offset 40
 342 0004 00AF     		add	r7, sp, #0
 343              		.cfi_def_cfa_register 7
 344 0006 7860     		str	r0, [r7, #4]
 356:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 calc;
 357:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	uint32 sign;
 358:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 tempRaw;
 359:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 filteredRawData;
 360:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 widget = CapSense_widgetNumber[sensor];
 345              		.loc 1 360 0
 346 0008 3B1C     		mov	r3, r7
 347 000a 0F33     		add	r3, r3, #15
 348 000c 7A49     		ldr	r1, .L29
 349 000e 7A68     		ldr	r2, [r7, #4]
 350 0010 8A18     		add	r2, r1, r2
 351 0012 1278     		ldrb	r2, [r2]
 352 0014 1A70     		strb	r2, [r3]
 361:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 noiseThreshold = CapSense_noiseThreshold[widget];
 353              		.loc 1 361 0
 354 0016 3B1C     		mov	r3, r7
 355 0018 0F33     		add	r3, r3, #15
 356 001a 1A78     		ldrb	r2, [r3]
 357 001c 3B1C     		mov	r3, r7
 358 001e 0E33     		add	r3, r3, #14
 359 0020 7649     		ldr	r1, .L29+4
 360 0022 8A5C     		ldrb	r2, [r1, r2]
 361 0024 1A70     		strb	r2, [r3]
 362:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
 363:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TOTAL_GENERICS_COUNT)
 364:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Exclude generic widget */
 365:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if(widget < CapSense_END_OF_WIDGETS_INDEX)
 366:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 367:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif  /* CapSense_TOTAL_GENERICS_COUNT */
 368:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
 369:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     filteredRawData = CapSense_sensorRaw[sensor];
 362              		.loc 1 369 0
 363 0026 3B1C     		mov	r3, r7
 364 0028 1033     		add	r3, r3, #16
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\ccK6nYzE.s 			page 14


 365 002a 754A     		ldr	r2, .L29+8
 366 002c 7968     		ldr	r1, [r7, #4]
 367 002e 4900     		lsl	r1, r1, #1
 368 0030 8A5A     		ldrh	r2, [r1, r2]
 369 0032 1A80     		strh	r2, [r3]
 370:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 371:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	#if (CapSense_RAW_FILTER_MASK != 0u)
 372:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	if(CapSense_enableRawFilters != 0u)
 370              		.loc 1 372 0
 371 0034 734B     		ldr	r3, .L29+12
 372 0036 1B78     		ldrb	r3, [r3]
 373 0038 002B     		cmp	r3, #0
 374 003a 15D0     		beq	.L17
 373:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	{
 374:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		#if (CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER)
 375:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			tempRaw = filteredRawData;
 376:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			filteredRawData = CapSense_MedianFilter(filteredRawData, CapSense_rawFilterData1[sensor], 
 377:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 															CapSense_rawFilterData2[sensor]);
 378:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			CapSense_rawFilterData2[sensor] = CapSense_rawFilterData1[sensor];
 379:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			CapSense_rawFilterData1[sensor] = tempRaw;
 380:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			
 381:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		#elif (CapSense_RAW_FILTER_MASK & CapSense_AVERAGING_FILTER)
 382:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			tempRaw = filteredRawData;
 383:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			filteredRawData = CapSense_AveragingFilter(filteredRawData, CapSense_rawFilterData1[sensor],
 384:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 															   CapSense_rawFilterData2[sensor]);
 385:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			CapSense_rawFilterData2[sensor] = CapSense_rawFilterData1[sensor];
 386:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			CapSense_rawFilterData1[sensor] = tempRaw;
 387:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			
 388:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		#elif (CapSense_RAW_FILTER_MASK & CapSense_IIR2_FILTER)
 389:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			filteredRawData = CapSense_IIR2Filter(filteredRawData, CapSense_rawFilterData1[sensor]);
 390:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			CapSense_rawFilterData1[sensor] = filteredRawData;
 391:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			
 392:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		#elif (CapSense_RAW_FILTER_MASK & CapSense_IIR4_FILTER)
 393:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			filteredRawData = CapSense_IIR4Filter(filteredRawData, CapSense_rawFilterData1[sensor]);
 375              		.loc 1 393 0
 376 003c 724B     		ldr	r3, .L29+16
 377 003e 7A68     		ldr	r2, [r7, #4]
 378 0040 5200     		lsl	r2, r2, #1
 379 0042 D35A     		ldrh	r3, [r2, r3]
 380 0044 3C1C     		mov	r4, r7
 381 0046 1034     		add	r4, r4, #16
 382 0048 3A1C     		mov	r2, r7
 383 004a 1032     		add	r2, r2, #16
 384 004c 1288     		ldrh	r2, [r2]
 385 004e 101C     		mov	r0, r2
 386 0050 191C     		mov	r1, r3
 387 0052 FFF7FEFF 		bl	CapSense_IIR4Filter
 388 0056 031C     		mov	r3, r0
 389 0058 2380     		strh	r3, [r4]
 394:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			CapSense_rawFilterData1[sensor] = filteredRawData;
 390              		.loc 1 394 0
 391 005a 6B4B     		ldr	r3, .L29+16
 392 005c 7A68     		ldr	r2, [r7, #4]
 393 005e 5200     		lsl	r2, r2, #1
 394 0060 391C     		mov	r1, r7
 395 0062 1031     		add	r1, r1, #16
 396 0064 0988     		ldrh	r1, [r1]
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\ccK6nYzE.s 			page 15


 397 0066 D152     		strh	r1, [r2, r3]
 398              	.L17:
 395:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 				
 396:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		#elif (CapSense_RAW_FILTER_MASK & CapSense_JITTER_FILTER)
 397:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			filteredRawData = CapSense_JitterFilter(filteredRawData, CapSense_rawFilterData1[sensor]);
 398:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			CapSense_rawFilterData1[sensor] = filteredRawData;
 399:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			
 400:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		#elif (CapSense_RAW_FILTER_MASK & CapSense_IIR8_FILTER)
 401:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			filteredRawData = CapSense_IIR8Filter(filteredRawData, CapSense_rawFilterData1[sensor]);
 402:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			CapSense_rawFilterData1[sensor] = filteredRawData;
 403:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			
 404:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		#elif (CapSense_RAW_FILTER_MASK & CapSense_IIR16_FILTER)
 405:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			filteredRawData = CapSense_IIR16Filter(filteredRawData, CapSense_rawFilterData1[sensor]);
 406:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			CapSense_rawFilterData1[sensor] = filteredRawData;
 407:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			
 408:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		#else
 409:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			/* No Raw filters */
 410:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		#endif  /* (CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER) */
 411:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	}
 412:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	#endif  /* (CapSense_RAW_FILTER_MASK != 0u) */
 413:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	
 414:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	#if (CapSense_TUNING_METHOD == CapSense__TUNING_AUTO)
 415:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	    MeasureNoiseEnvelope_P4_v2_20(&CapSense_config, (uint8)sensor, CapSense_sensorRaw);
 399              		.loc 1 415 0
 400 0068 7B68     		ldr	r3, [r7, #4]
 401 006a DAB2     		uxtb	r2, r3
 402 006c 6749     		ldr	r1, .L29+20
 403 006e 644B     		ldr	r3, .L29+8
 404 0070 081C     		mov	r0, r1
 405 0072 111C     		mov	r1, r2
 406 0074 1A1C     		mov	r2, r3
 407 0076 FFF7FEFF 		bl	MeasureNoiseEnvelope_P4_v2_20
 416:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	#endif /* (CapSense_TUNING_METHOD == CapSense__TUNING_AUTO) */
 417:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 418:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Baseline calculation */
 419:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Calculate difference RawData[cur] - Baseline[prev] */
 420:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     if(filteredRawData >= CapSense_sensorBaseline[sensor])
 408              		.loc 1 420 0
 409 007a 654B     		ldr	r3, .L29+24
 410 007c 7A68     		ldr	r2, [r7, #4]
 411 007e 5200     		lsl	r2, r2, #1
 412 0080 D35A     		ldrh	r3, [r2, r3]
 413 0082 3A1C     		mov	r2, r7
 414 0084 1032     		add	r2, r2, #16
 415 0086 1288     		ldrh	r2, [r2]
 416 0088 9A42     		cmp	r2, r3
 417 008a 12D3     		bcc	.L18
 421:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 422:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		CapSense_lowBaselineResetCnt[sensor] = 0u;	
 418              		.loc 1 422 0
 419 008c 614A     		ldr	r2, .L29+28
 420 008e 7B68     		ldr	r3, [r7, #4]
 421 0090 D318     		add	r3, r2, r3
 422 0092 0022     		mov	r2, #0
 423 0094 1A70     		strb	r2, [r3]
 423:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         tempRaw = filteredRawData - CapSense_sensorBaseline[sensor];
 424              		.loc 1 423 0
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\ccK6nYzE.s 			page 16


 425 0096 5E4B     		ldr	r3, .L29+24
 426 0098 7A68     		ldr	r2, [r7, #4]
 427 009a 5200     		lsl	r2, r2, #1
 428 009c D25A     		ldrh	r2, [r2, r3]
 429 009e 3B1C     		mov	r3, r7
 430 00a0 1233     		add	r3, r3, #18
 431 00a2 391C     		mov	r1, r7
 432 00a4 1031     		add	r1, r1, #16
 433 00a6 0988     		ldrh	r1, [r1]
 434 00a8 8A1A     		sub	r2, r1, r2
 435 00aa 1A80     		strh	r2, [r3]
 424:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         sign = 1u;    /* Positive difference - Calculate the Signal */
 436              		.loc 1 424 0
 437 00ac 0123     		mov	r3, #1
 438 00ae 7B61     		str	r3, [r7, #20]
 439 00b0 0CE0     		b	.L19
 440              	.L18:
 425:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 426:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     else
 427:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 428:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         tempRaw = CapSense_sensorBaseline[sensor] - filteredRawData;
 441              		.loc 1 428 0
 442 00b2 574B     		ldr	r3, .L29+24
 443 00b4 7A68     		ldr	r2, [r7, #4]
 444 00b6 5200     		lsl	r2, r2, #1
 445 00b8 D15A     		ldrh	r1, [r2, r3]
 446 00ba 3B1C     		mov	r3, r7
 447 00bc 1233     		add	r3, r3, #18
 448 00be 3A1C     		mov	r2, r7
 449 00c0 1032     		add	r2, r2, #16
 450 00c2 1288     		ldrh	r2, [r2]
 451 00c4 8A1A     		sub	r2, r1, r2
 452 00c6 1A80     		strh	r2, [r3]
 429:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         sign = 0u;    /* Negative difference - Do NOT calculate the Signal */
 453              		.loc 1 429 0
 454 00c8 0023     		mov	r3, #0
 455 00ca 7B61     		str	r3, [r7, #20]
 456              	.L19:
 430:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 431:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 432:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	#if (CapSense_TUNING_METHOD != CapSense__TUNING_NONE)
 433:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	if((sign == 0u) && (tempRaw > (uint16) CapSense_negativeNoiseThreshold[widget]))
 457              		.loc 1 433 0
 458 00cc 7B69     		ldr	r3, [r7, #20]
 459 00ce 002B     		cmp	r3, #0
 460 00d0 28D1     		bne	.L20
 461              		.loc 1 433 0 is_stmt 0 discriminator 1
 462 00d2 3B1C     		mov	r3, r7
 463 00d4 0F33     		add	r3, r3, #15
 464 00d6 1B78     		ldrb	r3, [r3]
 465 00d8 4F4A     		ldr	r2, .L29+32
 466 00da D35C     		ldrb	r3, [r2, r3]
 467 00dc 3A1C     		mov	r2, r7
 468 00de 1232     		add	r2, r2, #18
 469 00e0 1288     		ldrh	r2, [r2]
 470 00e2 9A42     		cmp	r2, r3
 471 00e4 1ED9     		bls	.L20
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\ccK6nYzE.s 			page 17


 434:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	#else
 435:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	if((sign == 0u) && (tempRaw > (uint16) CapSense_NEGATIVE_NOISE_THRESHOLD))
 436:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	#endif /* (CapSense_TUNING_METHOD != CapSense__TUNING_NONE) */ 
 437:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 438:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if(CapSense_lowBaselineResetCnt[sensor] >= CapSense_lowBaselineReset[sensor])
 472              		.loc 1 438 0 is_stmt 1
 473 00e6 4B4A     		ldr	r2, .L29+28
 474 00e8 7B68     		ldr	r3, [r7, #4]
 475 00ea D318     		add	r3, r2, r3
 476 00ec 1A78     		ldrb	r2, [r3]
 477 00ee 4B49     		ldr	r1, .L29+36
 478 00f0 7B68     		ldr	r3, [r7, #4]
 479 00f2 CB18     		add	r3, r1, r3
 480 00f4 1B78     		ldrb	r3, [r3]
 481 00f6 9A42     		cmp	r2, r3
 482 00f8 09D3     		bcc	.L21
 439:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 440:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_BaseInit(sensor);
 483              		.loc 1 440 0
 484 00fa 7B68     		ldr	r3, [r7, #4]
 485 00fc 181C     		mov	r0, r3
 486 00fe FFF7FEFF 		bl	CapSense_BaseInit
 441:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_lowBaselineResetCnt[sensor] = 0u;
 487              		.loc 1 441 0
 488 0102 444A     		ldr	r2, .L29+28
 489 0104 7B68     		ldr	r3, [r7, #4]
 490 0106 D318     		add	r3, r2, r3
 491 0108 0022     		mov	r2, #0
 492 010a 1A70     		strb	r2, [r3]
 438:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if(CapSense_lowBaselineResetCnt[sensor] >= CapSense_lowBaselineReset[sensor])
 493              		.loc 1 438 0
 494 010c 4CE0     		b	.L23
 495              	.L21:
 442:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
 443:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         else
 444:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 445:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_lowBaselineResetCnt[sensor]++;
 496              		.loc 1 445 0
 497 010e 414A     		ldr	r2, .L29+28
 498 0110 7B68     		ldr	r3, [r7, #4]
 499 0112 D318     		add	r3, r2, r3
 500 0114 1B78     		ldrb	r3, [r3]
 501 0116 0133     		add	r3, r3, #1
 502 0118 DAB2     		uxtb	r2, r3
 503 011a 3E49     		ldr	r1, .L29+28
 504 011c 7B68     		ldr	r3, [r7, #4]
 505 011e CB18     		add	r3, r1, r3
 506 0120 1A70     		strb	r2, [r3]
 438:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if(CapSense_lowBaselineResetCnt[sensor] >= CapSense_lowBaselineReset[sensor])
 507              		.loc 1 438 0
 508 0122 41E0     		b	.L23
 509              	.L20:
 446:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
 447:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 448:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     else
 449:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 450:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_AUTO_RESET == CapSense_AUTO_RESET_DISABLE)
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\ccK6nYzE.s 			page 18


 451:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		#if (CapSense_TUNING_METHOD != CapSense__TUNING_NONE)			
 452:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			/* Update Baseline if lower than noiseThreshold */
 453:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			if ( (tempRaw <= noiseThreshold) || 
 510              		.loc 1 453 0
 511 0124 3B1C     		mov	r3, r7
 512 0126 0E33     		add	r3, r3, #14
 513 0128 1B78     		ldrb	r3, [r3]
 514 012a 9BB2     		uxth	r3, r3
 515 012c 3A1C     		mov	r2, r7
 516 012e 1232     		add	r2, r2, #18
 517 0130 1288     		ldrh	r2, [r2]
 518 0132 9A42     		cmp	r2, r3
 519 0134 0CD9     		bls	.L24
 454:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			 ((tempRaw < (uint16) CapSense_negativeNoiseThreshold[widget])
 520              		.loc 1 454 0 discriminator 1
 521 0136 3B1C     		mov	r3, r7
 522 0138 0F33     		add	r3, r3, #15
 523 013a 1B78     		ldrb	r3, [r3]
 524 013c 364A     		ldr	r2, .L29+32
 525 013e D35C     		ldrb	r3, [r2, r3]
 453:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			if ( (tempRaw <= noiseThreshold) || 
 526              		.loc 1 453 0 discriminator 1
 527 0140 3A1C     		mov	r2, r7
 528 0142 1232     		add	r2, r2, #18
 529 0144 1288     		ldrh	r2, [r2]
 530 0146 9A42     		cmp	r2, r3
 531 0148 2ED2     		bcs	.L23
 455:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			   && (sign == 0u)))
 532              		.loc 1 455 0
 533 014a 7B69     		ldr	r3, [r7, #20]
 534 014c 002B     		cmp	r3, #0
 535 014e 2BD1     		bne	.L23
 536              	.L24:
 456:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			{
 457:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		#else
 458:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			/* Update Baseline if lower than noiseThreshold */
 459:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			if ( (tempRaw <= noiseThreshold) || 
 460:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 				 ((tempRaw < (uint16) CapSense_NEGATIVE_NOISE_THRESHOLD)
 461:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 				   && (sign == 0u)))
 462:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			{
 463:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		#endif /* (CapSense_TUNING_METHOD != CapSense__TUNING_NONE) */ 
 464:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_AUTO_RESET == CapSense_AUTO_RESET_DISABLE) */
 465:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Make full Baseline 23 bits */
 466:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 calc = (uint32) CapSense_sensorBaseline[sensor] << 8u;
 537              		.loc 1 466 0
 538 0150 2F4B     		ldr	r3, .L29+24
 539 0152 7A68     		ldr	r2, [r7, #4]
 540 0154 5200     		lsl	r2, r2, #1
 541 0156 D35A     		ldrh	r3, [r2, r3]
 542 0158 1B02     		lsl	r3, r3, #8
 543 015a BB60     		str	r3, [r7, #8]
 467:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 calc |= (uint32) CapSense_sensorBaselineLow[sensor];
 544              		.loc 1 467 0
 545 015c 304A     		ldr	r2, .L29+40
 546 015e 7B68     		ldr	r3, [r7, #4]
 547 0160 D318     		add	r3, r2, r3
 548 0162 1B78     		ldrb	r3, [r3]
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\ccK6nYzE.s 			page 19


 549 0164 BA68     		ldr	r2, [r7, #8]
 550 0166 1343     		orr	r3, r2
 551 0168 BB60     		str	r3, [r7, #8]
 468:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 469:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Add Raw Data to Baseline */
 470:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 calc += filteredRawData;
 552              		.loc 1 470 0
 553 016a 3B1C     		mov	r3, r7
 554 016c 1033     		add	r3, r3, #16
 555 016e 1B88     		ldrh	r3, [r3]
 556 0170 BA68     		ldr	r2, [r7, #8]
 557 0172 D318     		add	r3, r2, r3
 558 0174 BB60     		str	r3, [r7, #8]
 471:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 472:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Sub the high Baseline */
 473:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 calc -= CapSense_sensorBaseline[sensor];
 559              		.loc 1 473 0
 560 0176 264B     		ldr	r3, .L29+24
 561 0178 7A68     		ldr	r2, [r7, #4]
 562 017a 5200     		lsl	r2, r2, #1
 563 017c D35A     		ldrh	r3, [r2, r3]
 564 017e BA68     		ldr	r2, [r7, #8]
 565 0180 D31A     		sub	r3, r2, r3
 566 0182 BB60     		str	r3, [r7, #8]
 474:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 475:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Put Baseline and BaselineLow */
 476:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 CapSense_sensorBaseline[sensor] = ((uint16) (calc >> 8u));
 567              		.loc 1 476 0
 568 0184 BB68     		ldr	r3, [r7, #8]
 569 0186 1B0A     		lsr	r3, r3, #8
 570 0188 99B2     		uxth	r1, r3
 571 018a 214B     		ldr	r3, .L29+24
 572 018c 7A68     		ldr	r2, [r7, #4]
 573 018e 5200     		lsl	r2, r2, #1
 574 0190 D152     		strh	r1, [r2, r3]
 477:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 CapSense_sensorBaselineLow[sensor] = ((uint8) calc);
 575              		.loc 1 477 0
 576 0192 BB68     		ldr	r3, [r7, #8]
 577 0194 DAB2     		uxtb	r2, r3
 578 0196 2249     		ldr	r1, .L29+40
 579 0198 7B68     		ldr	r3, [r7, #4]
 580 019a CB18     		add	r3, r1, r3
 581 019c 1A70     		strb	r2, [r3]
 478:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 479:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 CapSense_lowBaselineResetCnt[sensor] = 0u;
 582              		.loc 1 479 0
 583 019e 1D4A     		ldr	r2, .L29+28
 584 01a0 7B68     		ldr	r3, [r7, #4]
 585 01a2 D318     		add	r3, r2, r3
 586 01a4 0022     		mov	r2, #0
 587 01a6 1A70     		strb	r2, [r3]
 588              	.L23:
 480:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_AUTO_RESET == CapSense_AUTO_RESET_DISABLE)
 481:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
 482:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_AUTO_RESET == CapSense_AUTO_RESET_DISABLE) */
 483:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 484:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\ccK6nYzE.s 			page 20


 485:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Calculate Signal if positive difference > noiseThreshold */
 486:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     if((tempRaw > (uint16) noiseThreshold) && (sign != 0u))
 589              		.loc 1 486 0
 590 01a8 3B1C     		mov	r3, r7
 591 01aa 0E33     		add	r3, r3, #14
 592 01ac 1B78     		ldrb	r3, [r3]
 593 01ae 9BB2     		uxth	r3, r3
 594 01b0 3A1C     		mov	r2, r7
 595 01b2 1232     		add	r2, r2, #18
 596 01b4 1288     		ldrh	r2, [r2]
 597 01b6 9A42     		cmp	r2, r3
 598 01b8 16D9     		bls	.L25
 599              		.loc 1 486 0 is_stmt 0 discriminator 1
 600 01ba 7B69     		ldr	r3, [r7, #20]
 601 01bc 002B     		cmp	r3, #0
 602 01be 13D0     		beq	.L25
 487:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 488:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_SIGNAL_SIZE == CapSense_SIGNAL_SIZE_UINT8)
 489:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Over flow defence for uint8 */
 490:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             if (tempRaw > 0xFFu)
 603              		.loc 1 490 0 is_stmt 1
 604 01c0 3B1C     		mov	r3, r7
 605 01c2 1233     		add	r3, r3, #18
 606 01c4 1B88     		ldrh	r3, [r3]
 607 01c6 FF2B     		cmp	r3, #255
 608 01c8 05D9     		bls	.L26
 491:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
 492:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 CapSense_sensorSignal[sensor] = 0xFFu;
 609              		.loc 1 492 0
 610 01ca 164A     		ldr	r2, .L29+44
 611 01cc 7B68     		ldr	r3, [r7, #4]
 612 01ce D318     		add	r3, r2, r3
 613 01d0 FF22     		mov	r2, #255
 614 01d2 1A70     		strb	r2, [r3]
 490:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             if (tempRaw > 0xFFu)
 615              		.loc 1 490 0
 616 01d4 0DE0     		b	.L16
 617              	.L26:
 493:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }    
 494:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             else 
 495:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
 496:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 CapSense_sensorSignal[sensor] = ((uint8) tempRaw);
 618              		.loc 1 496 0
 619 01d6 3B1C     		mov	r3, r7
 620 01d8 1233     		add	r3, r3, #18
 621 01da 1B88     		ldrh	r3, [r3]
 622 01dc DAB2     		uxtb	r2, r3
 623 01de 1149     		ldr	r1, .L29+44
 624 01e0 7B68     		ldr	r3, [r7, #4]
 625 01e2 CB18     		add	r3, r1, r3
 626 01e4 1A70     		strb	r2, [r3]
 490:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             if (tempRaw > 0xFFu)
 627              		.loc 1 490 0
 628 01e6 04E0     		b	.L16
 629              	.L25:
 497:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
 498:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #else
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\ccK6nYzE.s 			page 21


 499:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_sensorSignal[sensor] = ((uint16) tempRaw);
 500:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif  /* (CapSense_SIGNAL_SIZE == CapSense_SIGNAL_SIZE_UINT8) */
 501:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 502:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     else
 503:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 504:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Signal is zero */
 505:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_sensorSignal[sensor] = 0u;
 630              		.loc 1 505 0
 631 01e8 0E4A     		ldr	r2, .L29+44
 632 01ea 7B68     		ldr	r3, [r7, #4]
 633 01ec D318     		add	r3, r2, r3
 634 01ee 0022     		mov	r2, #0
 635 01f0 1A70     		strb	r2, [r3]
 636              	.L16:
 506:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 507:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 508:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TOTAL_GENERICS_COUNT)
 509:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Exclude generic widget */
 510:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
 511:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif  /* CapSense_TOTAL_GENERICS_COUNT */
 512:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 637              		.loc 1 512 0
 638 01f2 BD46     		mov	sp, r7
 639 01f4 07B0     		add	sp, sp, #28
 640              		@ sp needed
 641 01f6 90BD     		pop	{r4, r7, pc}
 642              	.L30:
 643              		.align	2
 644              	.L29:
 645 01f8 00000000 		.word	CapSense_widgetNumber
 646 01fc 00000000 		.word	CapSense_noiseThreshold
 647 0200 00000000 		.word	CapSense_sensorRaw
 648 0204 00000000 		.word	CapSense_enableRawFilters
 649 0208 00000000 		.word	CapSense_rawFilterData1
 650 020c 00000000 		.word	CapSense_config
 651 0210 00000000 		.word	CapSense_sensorBaseline
 652 0214 00000000 		.word	CapSense_lowBaselineResetCnt
 653 0218 00000000 		.word	CapSense_negativeNoiseThreshold
 654 021c 00000000 		.word	CapSense_lowBaselineReset
 655 0220 00000000 		.word	CapSense_sensorBaselineLow
 656 0224 00000000 		.word	CapSense_sensorSignal
 657              		.cfi_endproc
 658              	.LFE37:
 659              		.size	CapSense_UpdateBaselineNoThreshold, .-CapSense_UpdateBaselineNoThreshold
 660              		.section	.text.CapSense_UpdateSensorBaseline,"ax",%progbits
 661              		.align	2
 662              		.global	CapSense_UpdateSensorBaseline
 663              		.code	16
 664              		.thumb_func
 665              		.type	CapSense_UpdateSensorBaseline, %function
 666              	CapSense_UpdateSensorBaseline:
 667              	.LFB38:
 513:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 514:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 515:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 516:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_UpdateSensorBaseline
 517:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\ccK6nYzE.s 			page 22


 518:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 519:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 520:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Updates the CapSense_sensorBaseline[sensor] array element using the 
 521:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  LP filter with k = 256. The signal calculates the difference of count by 
 522:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  subtracting the previous baseline from the current raw count value and stores
 523:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  it in CapSense_sensorSignal[sensor]. 
 524:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  If the auto reset option is enabled, the baseline updated regards the noise threshold. 
 525:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  If the auto reset option is disabled, the baseline stops updating. 
 526:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Baseline is loaded with raw count value if a signal is greater than zero and  
 527:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  if signal is less than noise threshold.
 528:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Raw data filters are applied to the values if enabled before baseline 
 529:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  calculation.
 530:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API updates the thresholds in the Smartsense Mode.
 531:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 532:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 533:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor:  Sensor number.
 534:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 535:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 536:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 537:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 538:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 539:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_widgetNumber[]  - stores widget numbers.
 540:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * 
 541:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 542:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 543:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * 
 544:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 545:.\Generated_Source\PSoC4/CapSense_CSHL.c ****  void CapSense_UpdateSensorBaseline(uint32 sensor)
 546:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 668              		.loc 1 546 0
 669              		.cfi_startproc
 670 0000 80B5     		push	{r7, lr}
 671              		.cfi_def_cfa_offset 8
 672              		.cfi_offset 7, -8
 673              		.cfi_offset 14, -4
 674 0002 82B0     		sub	sp, sp, #8
 675              		.cfi_def_cfa_offset 16
 676 0004 00AF     		add	r7, sp, #0
 677              		.cfi_def_cfa_register 7
 678 0006 7860     		str	r0, [r7, #4]
 547:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TOTAL_GENERICS_COUNT)
 548:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		uint32 widget;
 549:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		
 550:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		widget = CapSense_widgetNumber[sensor];
 551:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	
 552:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Exclude generic widget */
 553:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if(widget < CapSense_END_OF_WIDGETS_INDEX)
 554:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 555:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif  /* CapSense_TOTAL_GENERICS_COUNT */
 556:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 557:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TUNING_METHOD == CapSense__TUNING_AUTO)
 558:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     	CapSense_UpdateThresholds(sensor);
 679              		.loc 1 558 0
 680 0008 7B68     		ldr	r3, [r7, #4]
 681 000a 181C     		mov	r0, r3
 682 000c FFF7FEFF 		bl	CapSense_UpdateThresholds
 559:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif /* (CapSense_TUNING_METHOD == CapSense__TUNING_AUTO) */
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\ccK6nYzE.s 			page 23


 560:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 561:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_UpdateBaselineNoThreshold(sensor);
 683              		.loc 1 561 0
 684 0010 7B68     		ldr	r3, [r7, #4]
 685 0012 181C     		mov	r0, r3
 686 0014 FFF7FEFF 		bl	CapSense_UpdateBaselineNoThreshold
 562:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
 563:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TOTAL_GENERICS_COUNT)
 564:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Exclude generic widget */
 565:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
 566:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif  /* CapSense_TOTAL_GENERICS_COUNT */
 567:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 687              		.loc 1 567 0
 688 0018 BD46     		mov	sp, r7
 689 001a 02B0     		add	sp, sp, #8
 690              		@ sp needed
 691 001c 80BD     		pop	{r7, pc}
 692              		.cfi_endproc
 693              	.LFE38:
 694              		.size	CapSense_UpdateSensorBaseline, .-CapSense_UpdateSensorBaseline
 695 001e C046     		.section	.text.CapSense_UpdateEnabledBaselines,"ax",%progbits
 696              		.align	2
 697              		.global	CapSense_UpdateEnabledBaselines
 698              		.code	16
 699              		.thumb_func
 700              		.type	CapSense_UpdateEnabledBaselines, %function
 701              	CapSense_UpdateEnabledBaselines:
 702              	.LFB39:
 568:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 569:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 570:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 571:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_UpdateEnabledBaselines
 572:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 573:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 574:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 575:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Checks CapSense_sensorEnableMask[] array and calls the 
 576:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_UpdateSensorBaseline function to update the baselines 
 577:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  for the enabled sensors.
 578:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 579:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 580:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 581:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 582:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 583:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 584:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 585:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 586:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[] - used to store the sensor scanning 
 587:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  state.
 588:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[0] contains the masked bits for sensors 
 589:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *   0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
 590:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[1] contains the masked bits for 
 591:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
 592:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  0 - sensor doesn't scan by CapSense_ScanEnabledWidgets().
 593:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  1 - sensor scans by CapSense_ScanEnabledWidgets().
 594:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * 
 595:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 596:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\ccK6nYzE.s 			page 24


 597:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * 
 598:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 599:.\Generated_Source\PSoC4/CapSense_CSHL.c ****  void CapSense_UpdateEnabledBaselines(void)
 600:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 703              		.loc 1 600 0
 704              		.cfi_startproc
 705 0000 80B5     		push	{r7, lr}
 706              		.cfi_def_cfa_offset 8
 707              		.cfi_offset 7, -8
 708              		.cfi_offset 14, -4
 709 0002 82B0     		sub	sp, sp, #8
 710              		.cfi_def_cfa_offset 16
 711 0004 00AF     		add	r7, sp, #0
 712              		.cfi_def_cfa_register 7
 601:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 i;
 602:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 isSensorEnabled;
 603:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
 604:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     for(i = 0u; i < CapSense_TOTAL_SENSOR_COUNT; i++)
 713              		.loc 1 604 0
 714 0006 0023     		mov	r3, #0
 715 0008 7B60     		str	r3, [r7, #4]
 716 000a 11E0     		b	.L33
 717              	.L35:
 605:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 606:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         isSensorEnabled = CapSense_GetBitValue(CapSense_sensorEnableMask, i);
 718              		.loc 1 606 0
 719 000c 0B4A     		ldr	r2, .L36
 720 000e 7B68     		ldr	r3, [r7, #4]
 721 0010 101C     		mov	r0, r2
 722 0012 191C     		mov	r1, r3
 723 0014 FFF7FEFF 		bl	CapSense_GetBitValue
 724 0018 031C     		mov	r3, r0
 725 001a 3B60     		str	r3, [r7]
 607:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
 608:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if(0u != isSensorEnabled)
 726              		.loc 1 608 0
 727 001c 3B68     		ldr	r3, [r7]
 728 001e 002B     		cmp	r3, #0
 729 0020 03D0     		beq	.L34
 609:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 610:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_UpdateSensorBaseline(i);
 730              		.loc 1 610 0
 731 0022 7B68     		ldr	r3, [r7, #4]
 732 0024 181C     		mov	r0, r3
 733 0026 FFF7FEFF 		bl	CapSense_UpdateSensorBaseline
 734              	.L34:
 604:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     for(i = 0u; i < CapSense_TOTAL_SENSOR_COUNT; i++)
 735              		.loc 1 604 0
 736 002a 7B68     		ldr	r3, [r7, #4]
 737 002c 0133     		add	r3, r3, #1
 738 002e 7B60     		str	r3, [r7, #4]
 739              	.L33:
 604:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     for(i = 0u; i < CapSense_TOTAL_SENSOR_COUNT; i++)
 740              		.loc 1 604 0 is_stmt 0 discriminator 1
 741 0030 7B68     		ldr	r3, [r7, #4]
 742 0032 042B     		cmp	r3, #4
 743 0034 EAD9     		bls	.L35
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\ccK6nYzE.s 			page 25


 611:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
 612:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 613:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 744              		.loc 1 613 0 is_stmt 1
 745 0036 BD46     		mov	sp, r7
 746 0038 02B0     		add	sp, sp, #8
 747              		@ sp needed
 748 003a 80BD     		pop	{r7, pc}
 749              	.L37:
 750              		.align	2
 751              	.L36:
 752 003c 00000000 		.word	CapSense_sensorEnableMask
 753              		.cfi_endproc
 754              	.LFE39:
 755              		.size	CapSense_UpdateEnabledBaselines, .-CapSense_UpdateEnabledBaselines
 756              		.section	.text.CapSense_UpdateWidgetBaseline,"ax",%progbits
 757              		.align	2
 758              		.global	CapSense_UpdateWidgetBaseline
 759              		.code	16
 760              		.thumb_func
 761              		.type	CapSense_UpdateWidgetBaseline, %function
 762              	CapSense_UpdateWidgetBaseline:
 763              	.LFB40:
 614:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 615:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 616:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_UpdateWidgetBaseline
 617:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 618:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 619:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 620:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Checks CapSense_sensorEnableMask[] array and calls the 
 621:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_UpdateSensorBaseline function to update the baselines 
 622:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  for the enabled sensors that belong to widget.
 623:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 624:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 625:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  widget:  Widget number.
 626:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 627:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 628:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 629:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 630:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 631:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[] - used to store the sensor scanning 
 632:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  state.
 633:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[0] contains the masked bits for sensors 
 634:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *   0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
 635:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[1] contains the masked bits for 
 636:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
 637:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  0 - sensor doesn't scan by CapSense_ScanEnabledWidgets().
 638:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  1 - sensor scans by CapSense_ScanEnabledWidgets().
 639:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * 
 640:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 641:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 642:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * 
 643:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 644:.\Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_UpdateWidgetBaseline(uint32 widget)
 645:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 764              		.loc 1 645 0
 765              		.cfi_startproc
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\ccK6nYzE.s 			page 26


 766 0000 80B5     		push	{r7, lr}
 767              		.cfi_def_cfa_offset 8
 768              		.cfi_offset 7, -8
 769              		.cfi_offset 14, -4
 770 0002 88B0     		sub	sp, sp, #32
 771              		.cfi_def_cfa_offset 40
 772 0004 00AF     		add	r7, sp, #0
 773              		.cfi_def_cfa_register 7
 774 0006 7860     		str	r0, [r7, #4]
 646:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 sensorsPerWidget;
 647:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 firstSensor;
 648:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 lastSensor;
 649:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 i;
 650:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 isSensorEnabled;
 651:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
 652:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	/* Get number of sensors in widget */
 653:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	sensorsPerWidget = CapSense_numberOfSensors[widget];
 775              		.loc 1 653 0
 776 0008 0523     		mov	r3, #5
 777 000a BB61     		str	r3, [r7, #24]
 654:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 655:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	/* Get first sensor in widget */
 656:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	firstSensor = CapSense_rawDataIndex[widget];
 778              		.loc 1 656 0
 779 000c 0023     		mov	r3, #0
 780 000e 7B61     		str	r3, [r7, #20]
 657:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	
 658:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	/* Get last sensor in widget */
 659:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	lastSensor = (CapSense_rawDataIndex[widget] + sensorsPerWidget);
 781              		.loc 1 659 0
 782 0010 0023     		mov	r3, #0
 783 0012 1A1C     		mov	r2, r3
 784 0014 BB69     		ldr	r3, [r7, #24]
 785 0016 D318     		add	r3, r2, r3
 786 0018 3B61     		str	r3, [r7, #16]
 660:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	
 661:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     for(i = firstSensor; i < lastSensor; i++)
 787              		.loc 1 661 0
 788 001a 7B69     		ldr	r3, [r7, #20]
 789 001c FB61     		str	r3, [r7, #28]
 790 001e 11E0     		b	.L39
 791              	.L41:
 662:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 663:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         isSensorEnabled = CapSense_GetBitValue(CapSense_sensorEnableMask, i);
 792              		.loc 1 663 0
 793 0020 0C4A     		ldr	r2, .L42
 794 0022 FB69     		ldr	r3, [r7, #28]
 795 0024 101C     		mov	r0, r2
 796 0026 191C     		mov	r1, r3
 797 0028 FFF7FEFF 		bl	CapSense_GetBitValue
 798 002c 031C     		mov	r3, r0
 799 002e FB60     		str	r3, [r7, #12]
 664:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
 665:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if(0u != isSensorEnabled)
 800              		.loc 1 665 0
 801 0030 FB68     		ldr	r3, [r7, #12]
 802 0032 002B     		cmp	r3, #0
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\ccK6nYzE.s 			page 27


 803 0034 03D0     		beq	.L40
 666:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 667:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_UpdateSensorBaseline(i);
 804              		.loc 1 667 0
 805 0036 FB69     		ldr	r3, [r7, #28]
 806 0038 181C     		mov	r0, r3
 807 003a FFF7FEFF 		bl	CapSense_UpdateSensorBaseline
 808              	.L40:
 661:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     for(i = firstSensor; i < lastSensor; i++)
 809              		.loc 1 661 0
 810 003e FB69     		ldr	r3, [r7, #28]
 811 0040 0133     		add	r3, r3, #1
 812 0042 FB61     		str	r3, [r7, #28]
 813              	.L39:
 661:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     for(i = firstSensor; i < lastSensor; i++)
 814              		.loc 1 661 0 is_stmt 0 discriminator 1
 815 0044 FA69     		ldr	r2, [r7, #28]
 816 0046 3B69     		ldr	r3, [r7, #16]
 817 0048 9A42     		cmp	r2, r3
 818 004a E9D3     		bcc	.L41
 668:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
 669:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 670:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 819              		.loc 1 670 0 is_stmt 1
 820 004c BD46     		mov	sp, r7
 821 004e 08B0     		add	sp, sp, #32
 822              		@ sp needed
 823 0050 80BD     		pop	{r7, pc}
 824              	.L43:
 825 0052 C046     		.align	2
 826              	.L42:
 827 0054 00000000 		.word	CapSense_sensorEnableMask
 828              		.cfi_endproc
 829              	.LFE40:
 830              		.size	CapSense_UpdateWidgetBaseline, .-CapSense_UpdateWidgetBaseline
 831              		.section	.text.CapSense_GetBaselineData,"ax",%progbits
 832              		.align	2
 833              		.global	CapSense_GetBaselineData
 834              		.code	16
 835              		.thumb_func
 836              		.type	CapSense_GetBaselineData, %function
 837              	CapSense_GetBaselineData:
 838              	.LFB41:
 671:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 672:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 673:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 674:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_GetBaselineData
 675:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 676:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 677:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 678:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This function reads the sensor baseline from the component.
 679:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 680:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 681:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor:  Sensor number.
 682:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 683:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 684:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns the baseline value of the sensor indicated by an argument.
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\ccK6nYzE.s 			page 28


 685:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 686:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 687:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorBaseline[] - the array with an initial values by scanning
 688:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * 
 689:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 690:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 691:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 692:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 693:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint16 CapSense_GetBaselineData(uint32 sensor)
 694:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 839              		.loc 1 694 0
 840              		.cfi_startproc
 841 0000 80B5     		push	{r7, lr}
 842              		.cfi_def_cfa_offset 8
 843              		.cfi_offset 7, -8
 844              		.cfi_offset 14, -4
 845 0002 82B0     		sub	sp, sp, #8
 846              		.cfi_def_cfa_offset 16
 847 0004 00AF     		add	r7, sp, #0
 848              		.cfi_def_cfa_register 7
 849 0006 7860     		str	r0, [r7, #4]
 695:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	return (CapSense_sensorBaseline[sensor]);
 850              		.loc 1 695 0
 851 0008 034B     		ldr	r3, .L46
 852 000a 7A68     		ldr	r2, [r7, #4]
 853 000c 5200     		lsl	r2, r2, #1
 854 000e D35A     		ldrh	r3, [r2, r3]
 696:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 855              		.loc 1 696 0
 856 0010 181C     		mov	r0, r3
 857 0012 BD46     		mov	sp, r7
 858 0014 02B0     		add	sp, sp, #8
 859              		@ sp needed
 860 0016 80BD     		pop	{r7, pc}
 861              	.L47:
 862              		.align	2
 863              	.L46:
 864 0018 00000000 		.word	CapSense_sensorBaseline
 865              		.cfi_endproc
 866              	.LFE41:
 867              		.size	CapSense_GetBaselineData, .-CapSense_GetBaselineData
 868              		.section	.text.CapSense_SetBaselineData,"ax",%progbits
 869              		.align	2
 870              		.global	CapSense_SetBaselineData
 871              		.code	16
 872              		.thumb_func
 873              		.type	CapSense_SetBaselineData, %function
 874              	CapSense_SetBaselineData:
 875              	.LFB42:
 697:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 698:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 699:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 700:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_SetBaselineData
 701:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 702:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 703:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 704:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API writes the data value passed as an argument to the sensor baseline array.
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\ccK6nYzE.s 			page 29


 705:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 706:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 707:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor:  Sensor number.
 708:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  data:    Sensor baseline.
 709:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 710:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 711:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None.
 712:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 713:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 714:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorBaseline[] - the array with initial values by scanning
 715:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * 
 716:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 717:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 718:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 719:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 720:.\Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_SetBaselineData(uint32 sensor, uint16 data)
 721:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 876              		.loc 1 721 0
 877              		.cfi_startproc
 878 0000 80B5     		push	{r7, lr}
 879              		.cfi_def_cfa_offset 8
 880              		.cfi_offset 7, -8
 881              		.cfi_offset 14, -4
 882 0002 82B0     		sub	sp, sp, #8
 883              		.cfi_def_cfa_offset 16
 884 0004 00AF     		add	r7, sp, #0
 885              		.cfi_def_cfa_register 7
 886 0006 7860     		str	r0, [r7, #4]
 887 0008 0A1C     		mov	r2, r1
 888 000a BB1C     		add	r3, r7, #2
 889 000c 1A80     		strh	r2, [r3]
 722:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	CapSense_sensorBaseline[sensor] = data;
 890              		.loc 1 722 0
 891 000e 044B     		ldr	r3, .L49
 892 0010 7A68     		ldr	r2, [r7, #4]
 893 0012 5200     		lsl	r2, r2, #1
 894 0014 B91C     		add	r1, r7, #2
 895 0016 0988     		ldrh	r1, [r1]
 896 0018 D152     		strh	r1, [r2, r3]
 723:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 897              		.loc 1 723 0
 898 001a BD46     		mov	sp, r7
 899 001c 02B0     		add	sp, sp, #8
 900              		@ sp needed
 901 001e 80BD     		pop	{r7, pc}
 902              	.L50:
 903              		.align	2
 904              	.L49:
 905 0020 00000000 		.word	CapSense_sensorBaseline
 906              		.cfi_endproc
 907              	.LFE42:
 908              		.size	CapSense_SetBaselineData, .-CapSense_SetBaselineData
 909              		.section	.text.CapSense_GetDiffCountData,"ax",%progbits
 910              		.align	2
 911              		.global	CapSense_GetDiffCountData
 912              		.code	16
 913              		.thumb_func
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\ccK6nYzE.s 			page 30


 914              		.type	CapSense_GetDiffCountData, %function
 915              	CapSense_GetDiffCountData:
 916              	.LFB43:
 724:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 725:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 726:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 727:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_GetDiffCountData
 728:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 729:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 730:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 731:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This function returns the Sensor Signal from the component.
 732:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 733:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 734:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor:  Sensor number.
 735:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 736:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 737:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns the difference count value of the sensor indicated by the 
 738:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  argument. 
 739:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 740:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 741:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorSignal[] - the array with difference counts for sensors
 742:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * 
 743:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 744:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 745:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 746:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 747:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_GetDiffCountData(uint32 sensor)
 748:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 917              		.loc 1 748 0
 918              		.cfi_startproc
 919 0000 80B5     		push	{r7, lr}
 920              		.cfi_def_cfa_offset 8
 921              		.cfi_offset 7, -8
 922              		.cfi_offset 14, -4
 923 0002 82B0     		sub	sp, sp, #8
 924              		.cfi_def_cfa_offset 16
 925 0004 00AF     		add	r7, sp, #0
 926              		.cfi_def_cfa_register 7
 927 0006 7860     		str	r0, [r7, #4]
 749:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	return (CapSense_sensorSignal[sensor]);
 928              		.loc 1 749 0
 929 0008 034A     		ldr	r2, .L53
 930 000a 7B68     		ldr	r3, [r7, #4]
 931 000c D318     		add	r3, r2, r3
 932 000e 1B78     		ldrb	r3, [r3]
 750:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 933              		.loc 1 750 0
 934 0010 181C     		mov	r0, r3
 935 0012 BD46     		mov	sp, r7
 936 0014 02B0     		add	sp, sp, #8
 937              		@ sp needed
 938 0016 80BD     		pop	{r7, pc}
 939              	.L54:
 940              		.align	2
 941              	.L53:
 942 0018 00000000 		.word	CapSense_sensorSignal
 943              		.cfi_endproc
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\ccK6nYzE.s 			page 31


 944              	.LFE43:
 945              		.size	CapSense_GetDiffCountData, .-CapSense_GetDiffCountData
 946              		.section	.text.CapSense_SetDiffCountData,"ax",%progbits
 947              		.align	2
 948              		.global	CapSense_SetDiffCountData
 949              		.code	16
 950              		.thumb_func
 951              		.type	CapSense_SetDiffCountData, %function
 952              	CapSense_SetDiffCountData:
 953              	.LFB44:
 751:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 752:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 753:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 754:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_SetDiffCountData
 755:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 756:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 757:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 758:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API writes the data value passed as an argument to the sensor signal array.
 759:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 760:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 761:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor:  Sensor number.
 762:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  value:   Sensor signal.
 763:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 764:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 765:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None. 
 766:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 767:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 768:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorSignal[] - the array with difference counts for sensors
 769:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * 
 770:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 771:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 772:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 773:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 774:.\Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_SetDiffCountData(uint32 sensor, uint8 value)
 775:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 954              		.loc 1 775 0
 955              		.cfi_startproc
 956 0000 80B5     		push	{r7, lr}
 957              		.cfi_def_cfa_offset 8
 958              		.cfi_offset 7, -8
 959              		.cfi_offset 14, -4
 960 0002 82B0     		sub	sp, sp, #8
 961              		.cfi_def_cfa_offset 16
 962 0004 00AF     		add	r7, sp, #0
 963              		.cfi_def_cfa_register 7
 964 0006 7860     		str	r0, [r7, #4]
 965 0008 0A1C     		mov	r2, r1
 966 000a FB1C     		add	r3, r7, #3
 967 000c 1A70     		strb	r2, [r3]
 776:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_sensorSignal[sensor] = value;
 968              		.loc 1 776 0
 969 000e 044A     		ldr	r2, .L56
 970 0010 7B68     		ldr	r3, [r7, #4]
 971 0012 D318     		add	r3, r2, r3
 972 0014 FA1C     		add	r2, r7, #3
 973 0016 1278     		ldrb	r2, [r2]
 974 0018 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\ccK6nYzE.s 			page 32


 777:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 975              		.loc 1 777 0
 976 001a BD46     		mov	sp, r7
 977 001c 02B0     		add	sp, sp, #8
 978              		@ sp needed
 979 001e 80BD     		pop	{r7, pc}
 980              	.L57:
 981              		.align	2
 982              	.L56:
 983 0020 00000000 		.word	CapSense_sensorSignal
 984              		.cfi_endproc
 985              	.LFE44:
 986              		.size	CapSense_SetDiffCountData, .-CapSense_SetDiffCountData
 987              		.section	.text.CapSense_GetFingerThreshold,"ax",%progbits
 988              		.align	2
 989              		.global	CapSense_GetFingerThreshold
 990              		.code	16
 991              		.thumb_func
 992              		.type	CapSense_GetFingerThreshold, %function
 993              	CapSense_GetFingerThreshold:
 994              	.LFB45:
 778:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 779:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 780:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 781:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_GetFingerThreshold
 782:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 783:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 784:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 785:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This function reads the finger threshold from the component.
 786:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 787:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 788:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  widget:  widget number.
 789:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 790:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 791:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns the finger threshold of the widget indicated by the argument. 
 792:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 793:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 794:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_fingerThreshold[] - This array contains the level of signal 
 795:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  for each widget that is determined if a finger is present on the widget.
 796:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 797:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 798:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 799:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 800:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 801:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_GetFingerThreshold(uint32 widget)
 802:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 995              		.loc 1 802 0
 996              		.cfi_startproc
 997 0000 80B5     		push	{r7, lr}
 998              		.cfi_def_cfa_offset 8
 999              		.cfi_offset 7, -8
 1000              		.cfi_offset 14, -4
 1001 0002 82B0     		sub	sp, sp, #8
 1002              		.cfi_def_cfa_offset 16
 1003 0004 00AF     		add	r7, sp, #0
 1004              		.cfi_def_cfa_register 7
 1005 0006 7860     		str	r0, [r7, #4]
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\ccK6nYzE.s 			page 33


 803:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	return(CapSense_fingerThreshold[widget]);
 1006              		.loc 1 803 0
 1007 0008 034A     		ldr	r2, .L60
 1008 000a 7B68     		ldr	r3, [r7, #4]
 1009 000c D318     		add	r3, r2, r3
 1010 000e 1B78     		ldrb	r3, [r3]
 804:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 1011              		.loc 1 804 0
 1012 0010 181C     		mov	r0, r3
 1013 0012 BD46     		mov	sp, r7
 1014 0014 02B0     		add	sp, sp, #8
 1015              		@ sp needed
 1016 0016 80BD     		pop	{r7, pc}
 1017              	.L61:
 1018              		.align	2
 1019              	.L60:
 1020 0018 00000000 		.word	CapSense_fingerThreshold
 1021              		.cfi_endproc
 1022              	.LFE45:
 1023              		.size	CapSense_GetFingerThreshold, .-CapSense_GetFingerThreshold
 1024              		.section	.text.CapSense_GetNoiseThreshold,"ax",%progbits
 1025              		.align	2
 1026              		.global	CapSense_GetNoiseThreshold
 1027              		.code	16
 1028              		.thumb_func
 1029              		.type	CapSense_GetNoiseThreshold, %function
 1030              	CapSense_GetNoiseThreshold:
 1031              	.LFB46:
 805:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 806:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 807:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 808:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_GetNoiseThreshold
 809:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 810:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 811:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 812:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This function reads the noise threshold from the component.
 813:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 814:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 815:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  widget:  widget number.
 816:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 817:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 818:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns the noise threshold of the widget indicated by the argument. 
 819:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 820:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 821:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_noiseThreshold[] - This array contains the level of signal 
 822:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  for each widget that determines the level of noise in the capacitive scan.
 823:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * 
 824:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 825:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 826:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 827:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 828:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_GetNoiseThreshold(uint32 widget)
 829:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 1032              		.loc 1 829 0
 1033              		.cfi_startproc
 1034 0000 80B5     		push	{r7, lr}
 1035              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\ccK6nYzE.s 			page 34


 1036              		.cfi_offset 7, -8
 1037              		.cfi_offset 14, -4
 1038 0002 82B0     		sub	sp, sp, #8
 1039              		.cfi_def_cfa_offset 16
 1040 0004 00AF     		add	r7, sp, #0
 1041              		.cfi_def_cfa_register 7
 1042 0006 7860     		str	r0, [r7, #4]
 830:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	return (CapSense_noiseThreshold[widget]);
 1043              		.loc 1 830 0
 1044 0008 034A     		ldr	r2, .L64
 1045 000a 7B68     		ldr	r3, [r7, #4]
 1046 000c D318     		add	r3, r2, r3
 1047 000e 1B78     		ldrb	r3, [r3]
 831:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 1048              		.loc 1 831 0
 1049 0010 181C     		mov	r0, r3
 1050 0012 BD46     		mov	sp, r7
 1051 0014 02B0     		add	sp, sp, #8
 1052              		@ sp needed
 1053 0016 80BD     		pop	{r7, pc}
 1054              	.L65:
 1055              		.align	2
 1056              	.L64:
 1057 0018 00000000 		.word	CapSense_noiseThreshold
 1058              		.cfi_endproc
 1059              	.LFE46:
 1060              		.size	CapSense_GetNoiseThreshold, .-CapSense_GetNoiseThreshold
 1061              		.section	.text.CapSense_GetFingerHysteresis,"ax",%progbits
 1062              		.align	2
 1063              		.global	CapSense_GetFingerHysteresis
 1064              		.code	16
 1065              		.thumb_func
 1066              		.type	CapSense_GetFingerHysteresis, %function
 1067              	CapSense_GetFingerHysteresis:
 1068              	.LFB47:
 832:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 833:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 834:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 835:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_GetFingerHysteresis
 836:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 837:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 838:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 839:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This function reads the Hysteresis value from the component.
 840:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 841:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 842:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  widget:  widget number.
 843:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 844:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 845:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns the Hysteresis of the widget indicated by the argument. 
 846:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 847:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 848:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_hysteresis[] - This array contains the hysteresis value 
 849:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *   for each widget.
 850:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_widgetNumberSld - structure with dynamic sliders' parameters.
 851:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 852:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 853:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\ccK6nYzE.s 			page 35


 854:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 855:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 856:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_GetFingerHysteresis(uint32 widget)
 857:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 1069              		.loc 1 857 0
 1070              		.cfi_startproc
 1071 0000 80B5     		push	{r7, lr}
 1072              		.cfi_def_cfa_offset 8
 1073              		.cfi_offset 7, -8
 1074              		.cfi_offset 14, -4
 1075 0002 82B0     		sub	sp, sp, #8
 1076              		.cfi_def_cfa_offset 16
 1077 0004 00AF     		add	r7, sp, #0
 1078              		.cfi_def_cfa_register 7
 1079 0006 7860     		str	r0, [r7, #4]
 858:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	return(CapSense_hysteresis[widget]);
 1080              		.loc 1 858 0
 1081 0008 034A     		ldr	r2, .L68
 1082 000a 7B68     		ldr	r3, [r7, #4]
 1083 000c D318     		add	r3, r2, r3
 1084 000e 1B78     		ldrb	r3, [r3]
 859:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 1085              		.loc 1 859 0
 1086 0010 181C     		mov	r0, r3
 1087 0012 BD46     		mov	sp, r7
 1088 0014 02B0     		add	sp, sp, #8
 1089              		@ sp needed
 1090 0016 80BD     		pop	{r7, pc}
 1091              	.L69:
 1092              		.align	2
 1093              	.L68:
 1094 0018 00000000 		.word	CapSense_hysteresis
 1095              		.cfi_endproc
 1096              	.LFE47:
 1097              		.size	CapSense_GetFingerHysteresis, .-CapSense_GetFingerHysteresis
 1098              		.section	.text.CapSense_GetNegativeNoiseThreshold,"ax",%progbits
 1099              		.align	2
 1100              		.global	CapSense_GetNegativeNoiseThreshold
 1101              		.code	16
 1102              		.thumb_func
 1103              		.type	CapSense_GetNegativeNoiseThreshold, %function
 1104              	CapSense_GetNegativeNoiseThreshold:
 1105              	.LFB48:
 860:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 861:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 862:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 863:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_GetNegativeNoiseThreshold
 864:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 865:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 866:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 867:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This function reads the negative noise threshold from the component.
 868:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 869:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters: 
 870:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None.
 871:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 872:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return Value: 
 873:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns the negative noise threshold
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\ccK6nYzE.s 			page 36


 874:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 875:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 876:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_negativeNoiseThreshold - This variable specifies the negative 
 877:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *   difference between the raw count and baseline levels for Baseline resetting
 878:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *   to the raw count level.
 879:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * 
 880:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 881:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 882:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 883:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 884:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_GetNegativeNoiseThreshold(uint32 widget)
 885:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 1106              		.loc 1 885 0
 1107              		.cfi_startproc
 1108 0000 80B5     		push	{r7, lr}
 1109              		.cfi_def_cfa_offset 8
 1110              		.cfi_offset 7, -8
 1111              		.cfi_offset 14, -4
 1112 0002 82B0     		sub	sp, sp, #8
 1113              		.cfi_def_cfa_offset 16
 1114 0004 00AF     		add	r7, sp, #0
 1115              		.cfi_def_cfa_register 7
 1116 0006 7860     		str	r0, [r7, #4]
 886:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if (CapSense_TUNING_METHOD != CapSense__TUNING_NONE)
 887:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	return(CapSense_negativeNoiseThreshold[widget]);
 1117              		.loc 1 887 0
 1118 0008 034A     		ldr	r2, .L72
 1119 000a 7B68     		ldr	r3, [r7, #4]
 1120 000c D318     		add	r3, r2, r3
 1121 000e 1B78     		ldrb	r3, [r3]
 888:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #else
 889:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	return(CapSense_NEGATIVE_NOISE_THRESHOLD);
 890:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (CapSense_TUNING_METHOD != CapSense__TUNING_NONE) */ 
 891:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 1122              		.loc 1 891 0
 1123 0010 181C     		mov	r0, r3
 1124 0012 BD46     		mov	sp, r7
 1125 0014 02B0     		add	sp, sp, #8
 1126              		@ sp needed
 1127 0016 80BD     		pop	{r7, pc}
 1128              	.L73:
 1129              		.align	2
 1130              	.L72:
 1131 0018 00000000 		.word	CapSense_negativeNoiseThreshold
 1132              		.cfi_endproc
 1133              	.LFE48:
 1134              		.size	CapSense_GetNegativeNoiseThreshold, .-CapSense_GetNegativeNoiseThreshold
 1135              		.section	.text.CapSense_SetFingerThreshold,"ax",%progbits
 1136              		.align	2
 1137              		.global	CapSense_SetFingerThreshold
 1138              		.code	16
 1139              		.thumb_func
 1140              		.type	CapSense_SetFingerThreshold, %function
 1141              	CapSense_SetFingerThreshold:
 1142              	.LFB49:
 892:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 893:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\ccK6nYzE.s 			page 37


 894:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if(CapSense_TUNING_METHOD != CapSense__TUNING_NONE)
 895:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	/*******************************************************************************
 896:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Function Name: CapSense_SetFingerThreshold
 897:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	********************************************************************************
 898:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
 899:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Summary:
 900:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  This API sets the finger threshold value for a widget. 
 901:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
 902:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Parameters: 
 903:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  sensorNumber:  widget index. 
 904:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  value:  Finger threshold value for the widget.
 905:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
 906:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Return Value: 
 907:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
 908:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
 909:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Global Variables:
 910:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  CapSense_fingerThreshold[] - This array contains the level of signal 
 911:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*   for each widget that determines if a finger is present on the widget.
 912:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* 
 913:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Side Effects:
 914:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
 915:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
 916:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*******************************************************************************/
 917:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	void CapSense_SetFingerThreshold(uint32 widget, uint8 value)
 918:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	{	
 1143              		.loc 1 918 0
 1144              		.cfi_startproc
 1145 0000 80B5     		push	{r7, lr}
 1146              		.cfi_def_cfa_offset 8
 1147              		.cfi_offset 7, -8
 1148              		.cfi_offset 14, -4
 1149 0002 82B0     		sub	sp, sp, #8
 1150              		.cfi_def_cfa_offset 16
 1151 0004 00AF     		add	r7, sp, #0
 1152              		.cfi_def_cfa_register 7
 1153 0006 7860     		str	r0, [r7, #4]
 1154 0008 0A1C     		mov	r2, r1
 1155 000a FB1C     		add	r3, r7, #3
 1156 000c 1A70     		strb	r2, [r3]
 919:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		CapSense_fingerThreshold[widget] = value;
 1157              		.loc 1 919 0
 1158 000e 044A     		ldr	r2, .L75
 1159 0010 7B68     		ldr	r3, [r7, #4]
 1160 0012 D318     		add	r3, r2, r3
 1161 0014 FA1C     		add	r2, r7, #3
 1162 0016 1278     		ldrb	r2, [r2]
 1163 0018 1A70     		strb	r2, [r3]
 920:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	}
 1164              		.loc 1 920 0
 1165 001a BD46     		mov	sp, r7
 1166 001c 02B0     		add	sp, sp, #8
 1167              		@ sp needed
 1168 001e 80BD     		pop	{r7, pc}
 1169              	.L76:
 1170              		.align	2
 1171              	.L75:
 1172 0020 00000000 		.word	CapSense_fingerThreshold
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\ccK6nYzE.s 			page 38


 1173              		.cfi_endproc
 1174              	.LFE49:
 1175              		.size	CapSense_SetFingerThreshold, .-CapSense_SetFingerThreshold
 1176              		.section	.text.CapSense_SetNoiseThreshold,"ax",%progbits
 1177              		.align	2
 1178              		.global	CapSense_SetNoiseThreshold
 1179              		.code	16
 1180              		.thumb_func
 1181              		.type	CapSense_SetNoiseThreshold, %function
 1182              	CapSense_SetNoiseThreshold:
 1183              	.LFB50:
 921:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 922:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 923:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	/*******************************************************************************
 924:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Function Name: CapSense_SetNoiseThreshold
 925:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	********************************************************************************
 926:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
 927:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Summary:
 928:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  This API sets the Noise Threshold value for each widget.
 929:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
 930:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Parameters:
 931:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  widget:  Sensor index number.
 932:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  value:   Noise Threshold value for widget.
 933:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
 934:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Return Value: 
 935:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
 936:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
 937:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Global Variables:
 938:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  CapSense_noiseThreshold[] - This array contains the level of signal 
 939:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*   for each widget that determines the level of noise in the capacitive scan.
 940:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* 
 941:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Side Effects:
 942:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
 943:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
 944:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*******************************************************************************/
 945:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	void CapSense_SetNoiseThreshold(uint32 widget, uint8 value)
 946:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	{
 1184              		.loc 1 946 0
 1185              		.cfi_startproc
 1186 0000 80B5     		push	{r7, lr}
 1187              		.cfi_def_cfa_offset 8
 1188              		.cfi_offset 7, -8
 1189              		.cfi_offset 14, -4
 1190 0002 82B0     		sub	sp, sp, #8
 1191              		.cfi_def_cfa_offset 16
 1192 0004 00AF     		add	r7, sp, #0
 1193              		.cfi_def_cfa_register 7
 1194 0006 7860     		str	r0, [r7, #4]
 1195 0008 0A1C     		mov	r2, r1
 1196 000a FB1C     		add	r3, r7, #3
 1197 000c 1A70     		strb	r2, [r3]
 947:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		CapSense_noiseThreshold[widget] = value;
 1198              		.loc 1 947 0
 1199 000e 044A     		ldr	r2, .L78
 1200 0010 7B68     		ldr	r3, [r7, #4]
 1201 0012 D318     		add	r3, r2, r3
 1202 0014 FA1C     		add	r2, r7, #3
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\ccK6nYzE.s 			page 39


 1203 0016 1278     		ldrb	r2, [r2]
 1204 0018 1A70     		strb	r2, [r3]
 948:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	}
 1205              		.loc 1 948 0
 1206 001a BD46     		mov	sp, r7
 1207 001c 02B0     		add	sp, sp, #8
 1208              		@ sp needed
 1209 001e 80BD     		pop	{r7, pc}
 1210              	.L79:
 1211              		.align	2
 1212              	.L78:
 1213 0020 00000000 		.word	CapSense_noiseThreshold
 1214              		.cfi_endproc
 1215              	.LFE50:
 1216              		.size	CapSense_SetNoiseThreshold, .-CapSense_SetNoiseThreshold
 1217              		.section	.text.CapSense_SetFingerHysteresis,"ax",%progbits
 1218              		.align	2
 1219              		.global	CapSense_SetFingerHysteresis
 1220              		.code	16
 1221              		.thumb_func
 1222              		.type	CapSense_SetFingerHysteresis, %function
 1223              	CapSense_SetFingerHysteresis:
 1224              	.LFB51:
 949:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 950:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 951:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	/*******************************************************************************
 952:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Function Name: CapSense_SetFingerHysteresis
 953:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	********************************************************************************
 954:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
 955:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Summary:
 956:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  This API sets the Hysteresis value of a widget
 957:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
 958:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Parameters: 
 959:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  value:  Hysteresis value for widgets.
 960:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  widget:  widget number
 961:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
 962:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Return Value: 
 963:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
 964:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
 965:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Global Variables:
 966:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  CapSense_hysteresis[] - This array contains the hysteresis value for each widget.
 967:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  CapSense_widgetNumberSld - structure with dynamic sliders' parameters.
 968:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
 969:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Side Effects:
 970:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
 971:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
 972:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*******************************************************************************/
 973:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	void CapSense_SetFingerHysteresis(uint32 widget, uint8 value)
 974:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	{
 1225              		.loc 1 974 0
 1226              		.cfi_startproc
 1227 0000 80B5     		push	{r7, lr}
 1228              		.cfi_def_cfa_offset 8
 1229              		.cfi_offset 7, -8
 1230              		.cfi_offset 14, -4
 1231 0002 82B0     		sub	sp, sp, #8
 1232              		.cfi_def_cfa_offset 16
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\ccK6nYzE.s 			page 40


 1233 0004 00AF     		add	r7, sp, #0
 1234              		.cfi_def_cfa_register 7
 1235 0006 7860     		str	r0, [r7, #4]
 1236 0008 0A1C     		mov	r2, r1
 1237 000a FB1C     		add	r3, r7, #3
 1238 000c 1A70     		strb	r2, [r3]
 975:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		CapSense_hysteresis[widget] = value;
 1239              		.loc 1 975 0
 1240 000e 044A     		ldr	r2, .L81
 1241 0010 7B68     		ldr	r3, [r7, #4]
 1242 0012 D318     		add	r3, r2, r3
 1243 0014 FA1C     		add	r2, r7, #3
 1244 0016 1278     		ldrb	r2, [r2]
 1245 0018 1A70     		strb	r2, [r3]
 976:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	}
 1246              		.loc 1 976 0
 1247 001a BD46     		mov	sp, r7
 1248 001c 02B0     		add	sp, sp, #8
 1249              		@ sp needed
 1250 001e 80BD     		pop	{r7, pc}
 1251              	.L82:
 1252              		.align	2
 1253              	.L81:
 1254 0020 00000000 		.word	CapSense_hysteresis
 1255              		.cfi_endproc
 1256              	.LFE51:
 1257              		.size	CapSense_SetFingerHysteresis, .-CapSense_SetFingerHysteresis
 1258              		.section	.text.CapSense_SetNegativeNoiseThreshold,"ax",%progbits
 1259              		.align	2
 1260              		.global	CapSense_SetNegativeNoiseThreshold
 1261              		.code	16
 1262              		.thumb_func
 1263              		.type	CapSense_SetNegativeNoiseThreshold, %function
 1264              	CapSense_SetNegativeNoiseThreshold:
 1265              	.LFB52:
 977:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 978:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 979:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	/*******************************************************************************
 980:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Function Name: CapSense_SetNegativeNoiseThreshold
 981:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	********************************************************************************
 982:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
 983:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Summary:
 984:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  This API sets the Negative Noise Threshold value of a widget
 985:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
 986:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Parameters: 
 987:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  value:  Negative Noise Threshold value for widgets.
 988:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  widget: widget number
 989:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
 990:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Return Value: 
 991:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
 992:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
 993:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Global Variables:
 994:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  CapSense_negativeNoiseThreshold  - This parameter specifies the negative 
 995:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*   difference between the raw count and baseline levels for Baseline resetting to 
 996:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*   the raw count level.
 997:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* 
 998:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Side Effects:
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\ccK6nYzE.s 			page 41


 999:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
1000:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
1001:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*******************************************************************************/
1002:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	void CapSense_SetNegativeNoiseThreshold(uint32 widget, uint8 value)
1003:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	{
 1266              		.loc 1 1003 0
 1267              		.cfi_startproc
 1268 0000 80B5     		push	{r7, lr}
 1269              		.cfi_def_cfa_offset 8
 1270              		.cfi_offset 7, -8
 1271              		.cfi_offset 14, -4
 1272 0002 82B0     		sub	sp, sp, #8
 1273              		.cfi_def_cfa_offset 16
 1274 0004 00AF     		add	r7, sp, #0
 1275              		.cfi_def_cfa_register 7
 1276 0006 7860     		str	r0, [r7, #4]
 1277 0008 0A1C     		mov	r2, r1
 1278 000a FB1C     		add	r3, r7, #3
 1279 000c 1A70     		strb	r2, [r3]
1004:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		CapSense_negativeNoiseThreshold[widget] = value;
 1280              		.loc 1 1004 0
 1281 000e 044A     		ldr	r2, .L84
 1282 0010 7B68     		ldr	r3, [r7, #4]
 1283 0012 D318     		add	r3, r2, r3
 1284 0014 FA1C     		add	r2, r7, #3
 1285 0016 1278     		ldrb	r2, [r2]
 1286 0018 1A70     		strb	r2, [r3]
1005:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	}
 1287              		.loc 1 1005 0
 1288 001a BD46     		mov	sp, r7
 1289 001c 02B0     		add	sp, sp, #8
 1290              		@ sp needed
 1291 001e 80BD     		pop	{r7, pc}
 1292              	.L85:
 1293              		.align	2
 1294              	.L84:
 1295 0020 00000000 		.word	CapSense_negativeNoiseThreshold
 1296              		.cfi_endproc
 1297              	.LFE52:
 1298              		.size	CapSense_SetNegativeNoiseThreshold, .-CapSense_SetNegativeNoiseThreshold
 1299              		.section	.text.CapSense_SetDebounce,"ax",%progbits
 1300              		.align	2
 1301              		.global	CapSense_SetDebounce
 1302              		.code	16
 1303              		.thumb_func
 1304              		.type	CapSense_SetDebounce, %function
 1305              	CapSense_SetDebounce:
 1306              	.LFB53:
1006:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1007:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1008:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	/*******************************************************************************
1009:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Function Name: CapSense_SetDebounce
1010:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	********************************************************************************
1011:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
1012:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Summary:
1013:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  This API sets the debounce value for a widget.
1014:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\ccK6nYzE.s 			page 42


1015:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Parameters: 
1016:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  value:  Debounce value for widget.
1017:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  widget: widget index.
1018:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
1019:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Return Value: 
1020:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
1021:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
1022:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Global Variables:
1023:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  CapSense_debounce[] - This array contains the debounce value for each widget.
1024:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  CapSense_widgetNumberSld - structure with dynamic sliders' parameters.
1025:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
1026:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Side Effects:
1027:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
1028:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
1029:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*******************************************************************************/
1030:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	void CapSense_SetDebounce(uint32 widget, uint8 value)
1031:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	{
 1307              		.loc 1 1031 0
 1308              		.cfi_startproc
 1309 0000 80B5     		push	{r7, lr}
 1310              		.cfi_def_cfa_offset 8
 1311              		.cfi_offset 7, -8
 1312              		.cfi_offset 14, -4
 1313 0002 82B0     		sub	sp, sp, #8
 1314              		.cfi_def_cfa_offset 16
 1315 0004 00AF     		add	r7, sp, #0
 1316              		.cfi_def_cfa_register 7
 1317 0006 7860     		str	r0, [r7, #4]
 1318 0008 0A1C     		mov	r2, r1
 1319 000a FB1C     		add	r3, r7, #3
 1320 000c 1A70     		strb	r2, [r3]
1032:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		CapSense_debounce[widget] = value;
 1321              		.loc 1 1032 0
 1322 000e 044A     		ldr	r2, .L87
 1323 0010 7B68     		ldr	r3, [r7, #4]
 1324 0012 D318     		add	r3, r2, r3
 1325 0014 FA1C     		add	r2, r7, #3
 1326 0016 1278     		ldrb	r2, [r2]
 1327 0018 1A70     		strb	r2, [r3]
1033:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	}
 1328              		.loc 1 1033 0
 1329 001a BD46     		mov	sp, r7
 1330 001c 02B0     		add	sp, sp, #8
 1331              		@ sp needed
 1332 001e 80BD     		pop	{r7, pc}
 1333              	.L88:
 1334              		.align	2
 1335              	.L87:
 1336 0020 00000000 		.word	CapSense_debounce
 1337              		.cfi_endproc
 1338              	.LFE53:
 1339              		.size	CapSense_SetDebounce, .-CapSense_SetDebounce
 1340              		.section	.text.CapSense_SetLowBaselineReset,"ax",%progbits
 1341              		.align	2
 1342              		.global	CapSense_SetLowBaselineReset
 1343              		.code	16
 1344              		.thumb_func
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\ccK6nYzE.s 			page 43


 1345              		.type	CapSense_SetLowBaselineReset, %function
 1346              	CapSense_SetLowBaselineReset:
 1347              	.LFB54:
1034:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1035:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1036:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	/*******************************************************************************
1037:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Function Name: CapSense_SetLowBaselineReset
1038:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	********************************************************************************
1039:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
1040:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Summary:
1041:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  This API sets the low baseline reset threshold value for the sensor.
1042:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
1043:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Parameters: 
1044:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  value: low baseline reset threshold value.
1045:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  sensor: Sensor index.
1046:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
1047:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Return Value: 
1048:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
1049:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
1050:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Global Variables:
1051:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  CapSense_lowBaselineReset[] - This array contains the Baseline update 
1052:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  threshold value for each sensor.
1053:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* 
1054:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Side Effects:
1055:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
1056:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
1057:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*******************************************************************************/
1058:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	void CapSense_SetLowBaselineReset(uint32 sensor, uint8 value)
1059:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	{
 1348              		.loc 1 1059 0
 1349              		.cfi_startproc
 1350 0000 80B5     		push	{r7, lr}
 1351              		.cfi_def_cfa_offset 8
 1352              		.cfi_offset 7, -8
 1353              		.cfi_offset 14, -4
 1354 0002 82B0     		sub	sp, sp, #8
 1355              		.cfi_def_cfa_offset 16
 1356 0004 00AF     		add	r7, sp, #0
 1357              		.cfi_def_cfa_register 7
 1358 0006 7860     		str	r0, [r7, #4]
 1359 0008 0A1C     		mov	r2, r1
 1360 000a FB1C     		add	r3, r7, #3
 1361 000c 1A70     		strb	r2, [r3]
1060:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		CapSense_lowBaselineReset[sensor] = value;
 1362              		.loc 1 1060 0
 1363 000e 044A     		ldr	r2, .L90
 1364 0010 7B68     		ldr	r3, [r7, #4]
 1365 0012 D318     		add	r3, r2, r3
 1366 0014 FA1C     		add	r2, r7, #3
 1367 0016 1278     		ldrb	r2, [r2]
 1368 0018 1A70     		strb	r2, [r3]
1061:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	}
 1369              		.loc 1 1061 0
 1370 001a BD46     		mov	sp, r7
 1371 001c 02B0     		add	sp, sp, #8
 1372              		@ sp needed
 1373 001e 80BD     		pop	{r7, pc}
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\ccK6nYzE.s 			page 44


 1374              	.L91:
 1375              		.align	2
 1376              	.L90:
 1377 0020 00000000 		.word	CapSense_lowBaselineReset
 1378              		.cfi_endproc
 1379              	.LFE54:
 1380              		.size	CapSense_SetLowBaselineReset, .-CapSense_SetLowBaselineReset
 1381              		.section	.text.CapSense_CheckIsSensorActive,"ax",%progbits
 1382              		.align	2
 1383              		.global	CapSense_CheckIsSensorActive
 1384              		.code	16
 1385              		.thumb_func
 1386              		.type	CapSense_CheckIsSensorActive, %function
 1387              	CapSense_CheckIsSensorActive:
 1388              	.LFB55:
1062:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (CapSense_TUNING_METHOD != CapSense__TUNING_NONE) */
1063:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1064:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1065:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
1066:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_CheckIsSensorActive
1067:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
1068:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1069:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
1070:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Compares the CapSense_sensorSignal[sensor] array element to the finger
1071:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  threshold of the widget it belongs to. The hysteresis and debounce are taken into 
1072:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  account. The hysteresis is added or subtracted from the finger threshold 
1073:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  based on whether the sensor is currently active. 
1074:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  If the sensor is active, the threshold is lowered by the hysteresis amount.
1075:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  If the sensor is inactive, the threshold is raised by the hysteresis amount.
1076:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  The debounce counter is added to the sensor active transition.
1077:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This function updates the CapSense_sensorOnMask[] array element.
1078:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1079:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
1080:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor:  Sensor number.
1081:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1082:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
1083:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Returns sensor state 1 if active, 0 if not active.
1084:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1085:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
1086:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorSignal[] - used to store the difference between 
1087:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  the current value of raw data and a previous value of the baseline.
1088:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_debounceCounter[]   - used to store the current debounce 
1089:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  counter of the sensor. the widget which have this parameter are buttons, matrix 
1090:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  buttons, proximity, and guard. All other widgets don't have the  debounce parameter
1091:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  and use the last element of this array with value 0 (it means no debounce).
1092:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorOnMask[] - used to store the sensors on/off state.
1093:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorOnMask[0] contains the masked bits for sensors 
1094:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *   0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
1095:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[1] contains the masked bits for 
1096:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
1097:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  0 - sensor is inactive.
1098:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  1 - sensor is active.
1099:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * 
1100:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
1101:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
1102:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1103:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\ccK6nYzE.s 			page 45


1104:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint32 CapSense_CheckIsSensorActive(uint32 sensor)
1105:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {	
 1389              		.loc 1 1105 0
 1390              		.cfi_startproc
 1391 0000 80B5     		push	{r7, lr}
 1392              		.cfi_def_cfa_offset 8
 1393              		.cfi_offset 7, -8
 1394              		.cfi_offset 14, -4
 1395 0002 84B0     		sub	sp, sp, #16
 1396              		.cfi_def_cfa_offset 24
 1397 0004 00AF     		add	r7, sp, #0
 1398              		.cfi_def_cfa_register 7
 1399 0006 7860     		str	r0, [r7, #4]
1106:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	uint8 widget;
1107:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	uint8 debounce;
1108:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	uint8 debounceIndex;
1109:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1110:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	uint8 fingerThreshold;
1111:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	uint8 hysteresis;
1112:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	static uint8 CapSense_debounceCounter[] = {
1113:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     0u, 
1114:.\Generated_Source\PSoC4/CapSense_CSHL.c **** };
1115:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1116:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1117:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	
1118:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Prepare to find debounce counter index */
1119:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     widget = CapSense_widgetNumber[sensor];
 1400              		.loc 1 1119 0
 1401 0008 3B1C     		mov	r3, r7
 1402 000a 0F33     		add	r3, r3, #15
 1403 000c 4549     		ldr	r1, .L101
 1404 000e 7A68     		ldr	r2, [r7, #4]
 1405 0010 8A18     		add	r2, r1, r2
 1406 0012 1278     		ldrb	r2, [r2]
 1407 0014 1A70     		strb	r2, [r3]
1120:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	
1121:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     fingerThreshold = CapSense_fingerThreshold[widget];
 1408              		.loc 1 1121 0
 1409 0016 3B1C     		mov	r3, r7
 1410 0018 0F33     		add	r3, r3, #15
 1411 001a 1A78     		ldrb	r2, [r3]
 1412 001c 3B1C     		mov	r3, r7
 1413 001e 0E33     		add	r3, r3, #14
 1414 0020 4149     		ldr	r1, .L101+4
 1415 0022 8A5C     		ldrb	r2, [r1, r2]
 1416 0024 1A70     		strb	r2, [r3]
1122:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	hysteresis = CapSense_hysteresis[widget];
 1417              		.loc 1 1122 0
 1418 0026 3B1C     		mov	r3, r7
 1419 0028 0F33     		add	r3, r3, #15
 1420 002a 1A78     		ldrb	r2, [r3]
 1421 002c 3B1C     		mov	r3, r7
 1422 002e 0D33     		add	r3, r3, #13
 1423 0030 3E49     		ldr	r1, .L101+8
 1424 0032 8A5C     		ldrb	r2, [r1, r2]
 1425 0034 1A70     		strb	r2, [r3]
1123:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	debounce = CapSense_debounce[widget];	
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\ccK6nYzE.s 			page 46


 1426              		.loc 1 1123 0
 1427 0036 3B1C     		mov	r3, r7
 1428 0038 0F33     		add	r3, r3, #15
 1429 003a 1A78     		ldrb	r2, [r3]
 1430 003c 3B1C     		mov	r3, r7
 1431 003e 0C33     		add	r3, r3, #12
 1432 0040 3B49     		ldr	r1, .L101+12
 1433 0042 8A5C     		ldrb	r2, [r1, r2]
 1434 0044 1A70     		strb	r2, [r3]
1124:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	
1125:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	    debounceIndex = CapSense_UNUSED_DEBOUNCE_COUNTER_INDEX;
 1435              		.loc 1 1125 0
 1436 0046 3B1C     		mov	r3, r7
 1437 0048 0B33     		add	r3, r3, #11
 1438 004a 0022     		mov	r2, #0
 1439 004c 1A70     		strb	r2, [r3]
1126:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_debounceCounter[debounceIndex] = 1u;
 1440              		.loc 1 1126 0
 1441 004e 3B1C     		mov	r3, r7
 1442 0050 0B33     		add	r3, r3, #11
 1443 0052 1B78     		ldrb	r3, [r3]
 1444 0054 374A     		ldr	r2, .L101+16
 1445 0056 0121     		mov	r1, #1
 1446 0058 D154     		strb	r1, [r2, r3]
1127:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1128:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	
1129:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Was on */
1130:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     if (0u != CapSense_GetBitValue(CapSense_sensorOnMask, sensor))
 1447              		.loc 1 1130 0
 1448 005a 374A     		ldr	r2, .L101+20
 1449 005c 7B68     		ldr	r3, [r7, #4]
 1450 005e 101C     		mov	r0, r2
 1451 0060 191C     		mov	r1, r3
 1452 0062 FFF7FEFF 		bl	CapSense_GetBitValue
 1453 0066 031C     		mov	r3, r0
 1454 0068 002B     		cmp	r3, #0
 1455 006a 1DD0     		beq	.L93
1131:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
1132:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Hysteresis minus */
1133:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if (CapSense_sensorSignal[sensor] < (fingerThreshold - hysteresis))
 1456              		.loc 1 1133 0
 1457 006c 334A     		ldr	r2, .L101+24
 1458 006e 7B68     		ldr	r3, [r7, #4]
 1459 0070 D318     		add	r3, r2, r3
 1460 0072 1B78     		ldrb	r3, [r3]
 1461 0074 1A1C     		mov	r2, r3
 1462 0076 3B1C     		mov	r3, r7
 1463 0078 0E33     		add	r3, r3, #14
 1464 007a 1978     		ldrb	r1, [r3]
 1465 007c 3B1C     		mov	r3, r7
 1466 007e 0D33     		add	r3, r3, #13
 1467 0080 1B78     		ldrb	r3, [r3]
 1468 0082 CB1A     		sub	r3, r1, r3
 1469 0084 9A42     		cmp	r2, r3
 1470 0086 3DDA     		bge	.L95
1134:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1135:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	   		CapSense_SetBitValue(CapSense_sensorOnMask, sensor, 0u);
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\ccK6nYzE.s 			page 47


 1471              		.loc 1 1135 0
 1472 0088 2B4A     		ldr	r2, .L101+20
 1473 008a 7B68     		ldr	r3, [r7, #4]
 1474 008c 101C     		mov	r0, r2
 1475 008e 191C     		mov	r1, r3
 1476 0090 0022     		mov	r2, #0
 1477 0092 FFF7FEFF 		bl	CapSense_SetBitValue
1136:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			/* Sensor inactive - reset Debounce counter */
1137:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_debounceCounter[debounceIndex] = debounce;
 1478              		.loc 1 1137 0
 1479 0096 3B1C     		mov	r3, r7
 1480 0098 0B33     		add	r3, r3, #11
 1481 009a 1B78     		ldrb	r3, [r3]
 1482 009c 254A     		ldr	r2, .L101+16
 1483 009e 391C     		mov	r1, r7
 1484 00a0 0C31     		add	r1, r1, #12
 1485 00a2 0978     		ldrb	r1, [r1]
 1486 00a4 D154     		strb	r1, [r2, r3]
 1487 00a6 2DE0     		b	.L95
 1488              	.L93:
1138:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1139:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
1140:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     else    /* Was off */
1141:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
1142:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Hysteresis plus */
1143:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if (CapSense_sensorSignal[sensor] >= (fingerThreshold + hysteresis))
 1489              		.loc 1 1143 0
 1490 00a8 244A     		ldr	r2, .L101+24
 1491 00aa 7B68     		ldr	r3, [r7, #4]
 1492 00ac D318     		add	r3, r2, r3
 1493 00ae 1B78     		ldrb	r3, [r3]
 1494 00b0 1A1C     		mov	r2, r3
 1495 00b2 3B1C     		mov	r3, r7
 1496 00b4 0E33     		add	r3, r3, #14
 1497 00b6 1978     		ldrb	r1, [r3]
 1498 00b8 3B1C     		mov	r3, r7
 1499 00ba 0D33     		add	r3, r3, #13
 1500 00bc 1B78     		ldrb	r3, [r3]
 1501 00be CB18     		add	r3, r1, r3
 1502 00c0 9A42     		cmp	r2, r3
 1503 00c2 17DB     		blt	.L96
1144:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1145:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			CapSense_debounceCounter[debounceIndex]--;
 1504              		.loc 1 1145 0
 1505 00c4 3B1C     		mov	r3, r7
 1506 00c6 0B33     		add	r3, r3, #11
 1507 00c8 1B78     		ldrb	r3, [r3]
 1508 00ca 1A4A     		ldr	r2, .L101+16
 1509 00cc D25C     		ldrb	r2, [r2, r3]
 1510 00ce 013A     		sub	r2, r2, #1
 1511 00d0 D1B2     		uxtb	r1, r2
 1512 00d2 184A     		ldr	r2, .L101+16
 1513 00d4 D154     		strb	r1, [r2, r3]
1146:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Sensor active, decrement debounce counter */
1147:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             if(CapSense_debounceCounter[debounceIndex] == 0u)
 1514              		.loc 1 1147 0
 1515 00d6 3B1C     		mov	r3, r7
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\ccK6nYzE.s 			page 48


 1516 00d8 0B33     		add	r3, r3, #11
 1517 00da 1B78     		ldrb	r3, [r3]
 1518 00dc 154A     		ldr	r2, .L101+16
 1519 00de D35C     		ldrb	r3, [r2, r3]
 1520 00e0 002B     		cmp	r3, #0
 1521 00e2 0FD1     		bne	.L95
1148:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
1149:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 CapSense_SetBitValue(CapSense_sensorOnMask, sensor, 1u); 
 1522              		.loc 1 1149 0
 1523 00e4 144A     		ldr	r2, .L101+20
 1524 00e6 7B68     		ldr	r3, [r7, #4]
 1525 00e8 101C     		mov	r0, r2
 1526 00ea 191C     		mov	r1, r3
 1527 00ec 0122     		mov	r2, #1
 1528 00ee FFF7FEFF 		bl	CapSense_SetBitValue
 1529 00f2 07E0     		b	.L95
 1530              	.L96:
1150:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
1151:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1152:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         else
1153:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1154:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Sensor inactive - reset Debounce counter */
1155:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_debounceCounter[debounceIndex] = debounce;
 1531              		.loc 1 1155 0
 1532 00f4 3B1C     		mov	r3, r7
 1533 00f6 0B33     		add	r3, r3, #11
 1534 00f8 1B78     		ldrb	r3, [r3]
 1535 00fa 0E4A     		ldr	r2, .L101+16
 1536 00fc 391C     		mov	r1, r7
 1537 00fe 0C31     		add	r1, r1, #12
 1538 0100 0978     		ldrb	r1, [r1]
 1539 0102 D154     		strb	r1, [r2, r3]
 1540              	.L95:
1156:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1157:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
1158:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
1159:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     return ((uint32)((0u != CapSense_GetBitValue(CapSense_sensorOnMask, sensor)) ? 1u : 0u));
 1541              		.loc 1 1159 0
 1542 0104 0C4A     		ldr	r2, .L101+20
 1543 0106 7B68     		ldr	r3, [r7, #4]
 1544 0108 101C     		mov	r0, r2
 1545 010a 191C     		mov	r1, r3
 1546 010c FFF7FEFF 		bl	CapSense_GetBitValue
 1547 0110 031C     		mov	r3, r0
 1548 0112 002B     		cmp	r3, #0
 1549 0114 01D0     		beq	.L98
 1550              		.loc 1 1159 0 is_stmt 0 discriminator 1
 1551 0116 0123     		mov	r3, #1
 1552 0118 00E0     		b	.L99
 1553              	.L98:
 1554              		.loc 1 1159 0 discriminator 2
 1555 011a 0023     		mov	r3, #0
 1556              	.L99:
1160:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 1557              		.loc 1 1160 0 is_stmt 1 discriminator 3
 1558 011c 181C     		mov	r0, r3
 1559 011e BD46     		mov	sp, r7
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\ccK6nYzE.s 			page 49


 1560 0120 04B0     		add	sp, sp, #16
 1561              		@ sp needed
 1562 0122 80BD     		pop	{r7, pc}
 1563              	.L102:
 1564              		.align	2
 1565              	.L101:
 1566 0124 00000000 		.word	CapSense_widgetNumber
 1567 0128 00000000 		.word	CapSense_fingerThreshold
 1568 012c 00000000 		.word	CapSense_hysteresis
 1569 0130 00000000 		.word	CapSense_debounce
 1570 0134 20000000 		.word	CapSense_debounceCounter.5350
 1571 0138 00000000 		.word	CapSense_sensorOnMask
 1572 013c 00000000 		.word	CapSense_sensorSignal
 1573              		.cfi_endproc
 1574              	.LFE55:
 1575              		.size	CapSense_CheckIsSensorActive, .-CapSense_CheckIsSensorActive
 1576              		.section	.text.CapSense_CheckIsWidgetActive,"ax",%progbits
 1577              		.align	2
 1578              		.global	CapSense_CheckIsWidgetActive
 1579              		.code	16
 1580              		.thumb_func
 1581              		.type	CapSense_CheckIsWidgetActive, %function
 1582              	CapSense_CheckIsWidgetActive:
 1583              	.LFB56:
1161:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1162:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1163:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
1164:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_CheckIsWidgetActive
1165:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
1166:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1167:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
1168:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Compares the CapSense_sensorSignal[] array element to the finger threshold of 
1169:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * the widget it belongs to. The hysteresis and debounce are taken into account. 
1170:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * The hysteresis is added or subtracted from the finger threshold based on whether
1171:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  the sensor is currently active. If the sensor is active, the threshold is 
1172:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  lowered by the hysteresis amount. If the sensor is inactive, the threshold 
1173:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  is raised by the hysteresis amount. 
1174:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * The debounce counter added to the sensor active transition. 
1175:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * This function updates CapSense_sensorOnMask[] array element
1176:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1177:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
1178:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  widget:  widget number.
1179:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1180:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
1181:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Returns widget sensor state 1 if one or more sensors within widget is/are 
1182:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  active, 0 if all sensors within widget are inactive.
1183:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1184:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
1185:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  rawDataIndex[]: Contains the  1st sensor position in the widget
1186:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * 
1187:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
1188:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
1189:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1190:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
1191:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint32 CapSense_CheckIsWidgetActive(uint32 widget)
1192:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 1584              		.loc 1 1192 0
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\ccK6nYzE.s 			page 50


 1585              		.cfi_startproc
 1586 0000 80B5     		push	{r7, lr}
 1587              		.cfi_def_cfa_offset 8
 1588              		.cfi_offset 7, -8
 1589              		.cfi_offset 14, -4
 1590 0002 86B0     		sub	sp, sp, #24
 1591              		.cfi_def_cfa_offset 32
 1592 0004 00AF     		add	r7, sp, #0
 1593              		.cfi_def_cfa_register 7
 1594 0006 7860     		str	r0, [r7, #4]
1193:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 rawIndex = (uint32)CapSense_rawDataIndex[widget];
 1595              		.loc 1 1193 0
 1596 0008 0023     		mov	r3, #0
 1597 000a 7B61     		str	r3, [r7, #20]
1194:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 numOfSensors = (uint32)CapSense_numberOfSensors[widget] + rawIndex;
 1598              		.loc 1 1194 0
 1599 000c 0523     		mov	r3, #5
 1600 000e 1A1C     		mov	r2, r3
 1601 0010 7B69     		ldr	r3, [r7, #20]
 1602 0012 D318     		add	r3, r2, r3
 1603 0014 FB60     		str	r3, [r7, #12]
1195:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 state = 0u;
 1604              		.loc 1 1195 0
 1605 0016 0023     		mov	r3, #0
 1606 0018 3B61     		str	r3, [r7, #16]
 1607              	.L105:
1196:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1197:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Check all sensors of widget */
1198:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     do
1199:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
1200:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if(CapSense_CheckIsSensorActive((uint32)rawIndex) != 0u)
 1608              		.loc 1 1200 0
 1609 001a 7B69     		ldr	r3, [r7, #20]
 1610 001c 181C     		mov	r0, r3
 1611 001e FFF7FEFF 		bl	CapSense_CheckIsSensorActive
 1612 0022 031C     		mov	r3, r0
 1613 0024 002B     		cmp	r3, #0
 1614 0026 01D0     		beq	.L104
1201:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1202:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             state = CapSense_SENSOR_IS_ACTIVE;
 1615              		.loc 1 1202 0
 1616 0028 0123     		mov	r3, #1
 1617 002a 3B61     		str	r3, [r7, #16]
 1618              	.L104:
1203:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1204:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         rawIndex++;
 1619              		.loc 1 1204 0
 1620 002c 7B69     		ldr	r3, [r7, #20]
 1621 002e 0133     		add	r3, r3, #1
 1622 0030 7B61     		str	r3, [r7, #20]
1205:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
1206:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     while(rawIndex < numOfSensors);
 1623              		.loc 1 1206 0
 1624 0032 7A69     		ldr	r2, [r7, #20]
 1625 0034 FB68     		ldr	r3, [r7, #12]
 1626 0036 9A42     		cmp	r2, r3
 1627 0038 EFD3     		bcc	.L105
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\ccK6nYzE.s 			page 51


1207:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
1208:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1209:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
1210:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     return state;
 1628              		.loc 1 1210 0
 1629 003a 3B69     		ldr	r3, [r7, #16]
1211:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 1630              		.loc 1 1211 0
 1631 003c 181C     		mov	r0, r3
 1632 003e BD46     		mov	sp, r7
 1633 0040 06B0     		add	sp, sp, #24
 1634              		@ sp needed
 1635 0042 80BD     		pop	{r7, pc}
 1636              		.cfi_endproc
 1637              	.LFE56:
 1638              		.size	CapSense_CheckIsWidgetActive, .-CapSense_CheckIsWidgetActive
 1639              		.section	.text.CapSense_CheckIsAnyWidgetActive,"ax",%progbits
 1640              		.align	2
 1641              		.global	CapSense_CheckIsAnyWidgetActive
 1642              		.code	16
 1643              		.thumb_func
 1644              		.type	CapSense_CheckIsAnyWidgetActive, %function
 1645              	CapSense_CheckIsAnyWidgetActive:
 1646              	.LFB57:
1212:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1213:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1214:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
1215:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_CheckIsAnyWidgetActive
1216:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
1217:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1218:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
1219:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Compares all the sensors of the CapSense_Signal[] array to their finger 
1220:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  threshold. Calls CapSense_CheckIsWidgetActive() for each widget so 
1221:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  the CapSense_sensorOnMask[] array is up to date after calling this 
1222:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  function.
1223:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1224:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
1225:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  widget:  widget number.
1226:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1227:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
1228:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Returns 1 if any widget is active, 0 none of widgets are active.
1229:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1230:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
1231:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
1232:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * 
1233:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
1234:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
1235:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1236:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
1237:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint32 CapSense_CheckIsAnyWidgetActive(void)
1238:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 1647              		.loc 1 1238 0
 1648              		.cfi_startproc
 1649 0000 80B5     		push	{r7, lr}
 1650              		.cfi_def_cfa_offset 8
 1651              		.cfi_offset 7, -8
 1652              		.cfi_offset 14, -4
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\ccK6nYzE.s 			page 52


 1653 0002 82B0     		sub	sp, sp, #8
 1654              		.cfi_def_cfa_offset 16
 1655 0004 00AF     		add	r7, sp, #0
 1656              		.cfi_def_cfa_register 7
1239:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1240:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	    uint32 i;
1241:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 state = 0u;
 1657              		.loc 1 1241 0
 1658 0006 0023     		mov	r3, #0
 1659 0008 3B60     		str	r3, [r7]
1242:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
1243:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     for(i = 0u; i < CapSense_TOTAL_WIDGET_COUNT; i++)
 1660              		.loc 1 1243 0
 1661 000a 0023     		mov	r3, #0
 1662 000c 7B60     		str	r3, [r7, #4]
 1663 000e 0BE0     		b	.L108
 1664              	.L110:
1244:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
1245:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if (CapSense_CheckIsWidgetActive(i) != 0u)
 1665              		.loc 1 1245 0
 1666 0010 7B68     		ldr	r3, [r7, #4]
 1667 0012 181C     		mov	r0, r3
 1668 0014 FFF7FEFF 		bl	CapSense_CheckIsWidgetActive
 1669 0018 031C     		mov	r3, r0
 1670 001a 002B     		cmp	r3, #0
 1671 001c 01D0     		beq	.L109
1246:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1247:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             state = CapSense_WIDGET_IS_ACTIVE;
 1672              		.loc 1 1247 0
 1673 001e 0123     		mov	r3, #1
 1674 0020 3B60     		str	r3, [r7]
 1675              	.L109:
1243:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     for(i = 0u; i < CapSense_TOTAL_WIDGET_COUNT; i++)
 1676              		.loc 1 1243 0
 1677 0022 7B68     		ldr	r3, [r7, #4]
 1678 0024 0133     		add	r3, r3, #1
 1679 0026 7B60     		str	r3, [r7, #4]
 1680              	.L108:
1243:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     for(i = 0u; i < CapSense_TOTAL_WIDGET_COUNT; i++)
 1681              		.loc 1 1243 0 is_stmt 0 discriminator 1
 1682 0028 7B68     		ldr	r3, [r7, #4]
 1683 002a 002B     		cmp	r3, #0
 1684 002c F0D0     		beq	.L110
1248:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1249:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
1250:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
1251:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1252:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1253:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     return state;
 1685              		.loc 1 1253 0 is_stmt 1
 1686 002e 3B68     		ldr	r3, [r7]
1254:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 1687              		.loc 1 1254 0
 1688 0030 181C     		mov	r0, r3
 1689 0032 BD46     		mov	sp, r7
 1690 0034 02B0     		add	sp, sp, #8
 1691              		@ sp needed
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\ccK6nYzE.s 			page 53


 1692 0036 80BD     		pop	{r7, pc}
 1693              		.cfi_endproc
 1694              	.LFE57:
 1695              		.size	CapSense_CheckIsAnyWidgetActive, .-CapSense_CheckIsAnyWidgetActive
 1696              		.section	.text.CapSense_EnableWidget,"ax",%progbits
 1697              		.align	2
 1698              		.global	CapSense_EnableWidget
 1699              		.code	16
 1700              		.thumb_func
 1701              		.type	CapSense_EnableWidget, %function
 1702              	CapSense_EnableWidget:
 1703              	.LFB58:
1255:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1256:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1257:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
1258:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_EnableWidget
1259:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
1260:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1261:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
1262:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Enables all the widget elements (sensors) to the scanning process.
1263:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1264:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
1265:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  widget:  widget number.
1266:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1267:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
1268:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
1269:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1270:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
1271:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[] - used to store the sensor scanning 
1272:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  state.
1273:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[0] contains the masked bits for sensors 
1274:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
1275:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[1] contains the masked bits for 
1276:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
1277:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  0 - sensor doesn't scan by CapSense_ScanEnabledWidgets().
1278:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  1 - sensor scans by CapSense_ScanEnabledWidgets().
1279:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * 
1280:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
1281:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
1282:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1283:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
1284:.\Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_EnableWidget(uint32 widget)
1285:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 1704              		.loc 1 1285 0
 1705              		.cfi_startproc
 1706 0000 80B5     		push	{r7, lr}
 1707              		.cfi_def_cfa_offset 8
 1708              		.cfi_offset 7, -8
 1709              		.cfi_offset 14, -4
 1710 0002 84B0     		sub	sp, sp, #16
 1711              		.cfi_def_cfa_offset 24
 1712 0004 00AF     		add	r7, sp, #0
 1713              		.cfi_def_cfa_register 7
 1714 0006 7860     		str	r0, [r7, #4]
1286:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1287:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 rawIndex = CapSense_rawDataIndex[widget];
 1715              		.loc 1 1287 0
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\ccK6nYzE.s 			page 54


 1716 0008 3B1C     		mov	r3, r7
 1717 000a 0F33     		add	r3, r3, #15
 1718 000c 0022     		mov	r2, #0
 1719 000e 1A70     		strb	r2, [r3]
1288:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 numOfSensors = CapSense_numberOfSensors[widget] + rawIndex;
 1720              		.loc 1 1288 0
 1721 0010 0521     		mov	r1, #5
 1722 0012 3B1C     		mov	r3, r7
 1723 0014 0E33     		add	r3, r3, #14
 1724 0016 3A1C     		mov	r2, r7
 1725 0018 0F32     		add	r2, r2, #15
 1726 001a 1278     		ldrb	r2, [r2]
 1727 001c 8A18     		add	r2, r1, r2
 1728 001e 1A70     		strb	r2, [r3]
 1729              	.L113:
1289:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
1290:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Enable all sensors of widget */
1291:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     do
1292:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
1293:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_SetBitValue(CapSense_sensorEnableMask, (uint32)rawIndex, 1u);
 1730              		.loc 1 1293 0 discriminator 1
 1731 0020 3B1C     		mov	r3, r7
 1732 0022 0F33     		add	r3, r3, #15
 1733 0024 1B78     		ldrb	r3, [r3]
 1734 0026 0C4A     		ldr	r2, .L114
 1735 0028 101C     		mov	r0, r2
 1736 002a 191C     		mov	r1, r3
 1737 002c 0122     		mov	r2, #1
 1738 002e FFF7FEFF 		bl	CapSense_SetBitValue
1294:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         rawIndex++;
 1739              		.loc 1 1294 0 discriminator 1
 1740 0032 3B1C     		mov	r3, r7
 1741 0034 0F33     		add	r3, r3, #15
 1742 0036 1A78     		ldrb	r2, [r3]
 1743 0038 3B1C     		mov	r3, r7
 1744 003a 0F33     		add	r3, r3, #15
 1745 003c 0132     		add	r2, r2, #1
 1746 003e 1A70     		strb	r2, [r3]
1295:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
1296:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     while(rawIndex < numOfSensors);
 1747              		.loc 1 1296 0 discriminator 1
 1748 0040 3A1C     		mov	r2, r7
 1749 0042 0F32     		add	r2, r2, #15
 1750 0044 3B1C     		mov	r3, r7
 1751 0046 0E33     		add	r3, r3, #14
 1752 0048 1278     		ldrb	r2, [r2]
 1753 004a 1B78     		ldrb	r3, [r3]
 1754 004c 9A42     		cmp	r2, r3
 1755 004e E7D3     		bcc	.L113
1297:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 1756              		.loc 1 1297 0
 1757 0050 BD46     		mov	sp, r7
 1758 0052 04B0     		add	sp, sp, #16
 1759              		@ sp needed
 1760 0054 80BD     		pop	{r7, pc}
 1761              	.L115:
 1762 0056 C046     		.align	2
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\ccK6nYzE.s 			page 55


 1763              	.L114:
 1764 0058 00000000 		.word	CapSense_sensorEnableMask
 1765              		.cfi_endproc
 1766              	.LFE58:
 1767              		.size	CapSense_EnableWidget, .-CapSense_EnableWidget
 1768              		.section	.text.CapSense_DisableWidget,"ax",%progbits
 1769              		.align	2
 1770              		.global	CapSense_DisableWidget
 1771              		.code	16
 1772              		.thumb_func
 1773              		.type	CapSense_DisableWidget, %function
 1774              	CapSense_DisableWidget:
 1775              	.LFB59:
1298:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1299:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1300:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
1301:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_DisableWidget
1302:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
1303:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1304:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
1305:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Disables all the widget elements (sensors) from the scanning process.
1306:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1307:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
1308:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  widget:  widget number.
1309:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1310:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
1311:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
1312:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1313:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
1314:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[] - used to store the sensor scanning 
1315:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  state.
1316:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[0] contains the masked bits for sensors 
1317:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
1318:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[1] contains the masked bits for 
1319:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
1320:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  0 - sensor isn't scanned by CapSense_ScanEnabledWidgets().
1321:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  1 - sensor is scanned by CapSense_ScanEnabledWidgets().
1322:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * 
1323:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
1324:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
1325:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1326:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
1327:.\Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_DisableWidget(uint32 widget)
1328:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 1776              		.loc 1 1328 0
 1777              		.cfi_startproc
 1778 0000 80B5     		push	{r7, lr}
 1779              		.cfi_def_cfa_offset 8
 1780              		.cfi_offset 7, -8
 1781              		.cfi_offset 14, -4
 1782 0002 84B0     		sub	sp, sp, #16
 1783              		.cfi_def_cfa_offset 24
 1784 0004 00AF     		add	r7, sp, #0
 1785              		.cfi_def_cfa_register 7
 1786 0006 7860     		str	r0, [r7, #4]
1329:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 rawIndex = CapSense_rawDataIndex[widget];
 1787              		.loc 1 1329 0
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\ccK6nYzE.s 			page 56


 1788 0008 3B1C     		mov	r3, r7
 1789 000a 0F33     		add	r3, r3, #15
 1790 000c 0022     		mov	r2, #0
 1791 000e 1A70     		strb	r2, [r3]
1330:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 numOfSensors = CapSense_numberOfSensors[widget] + rawIndex;
 1792              		.loc 1 1330 0
 1793 0010 0521     		mov	r1, #5
 1794 0012 3B1C     		mov	r3, r7
 1795 0014 0E33     		add	r3, r3, #14
 1796 0016 3A1C     		mov	r2, r7
 1797 0018 0F32     		add	r2, r2, #15
 1798 001a 1278     		ldrb	r2, [r2]
 1799 001c 8A18     		add	r2, r1, r2
 1800 001e 1A70     		strb	r2, [r3]
 1801              	.L117:
1331:.\Generated_Source\PSoC4/CapSense_CSHL.c ****    
1332:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Disable all sensors of widget */
1333:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     do
1334:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
1335:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1336:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_SetBitValue(CapSense_sensorEnableMask, (uint32)rawIndex, 0u);
 1802              		.loc 1 1336 0 discriminator 1
 1803 0020 3B1C     		mov	r3, r7
 1804 0022 0F33     		add	r3, r3, #15
 1805 0024 1B78     		ldrb	r3, [r3]
 1806 0026 0C4A     		ldr	r2, .L118
 1807 0028 101C     		mov	r0, r2
 1808 002a 191C     		mov	r1, r3
 1809 002c 0022     		mov	r2, #0
 1810 002e FFF7FEFF 		bl	CapSense_SetBitValue
1337:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         rawIndex++;
 1811              		.loc 1 1337 0 discriminator 1
 1812 0032 3B1C     		mov	r3, r7
 1813 0034 0F33     		add	r3, r3, #15
 1814 0036 1A78     		ldrb	r2, [r3]
 1815 0038 3B1C     		mov	r3, r7
 1816 003a 0F33     		add	r3, r3, #15
 1817 003c 0132     		add	r2, r2, #1
 1818 003e 1A70     		strb	r2, [r3]
1338:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
1339:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     while(rawIndex < numOfSensors);
 1819              		.loc 1 1339 0 discriminator 1
 1820 0040 3A1C     		mov	r2, r7
 1821 0042 0F32     		add	r2, r2, #15
 1822 0044 3B1C     		mov	r3, r7
 1823 0046 0E33     		add	r3, r3, #14
 1824 0048 1278     		ldrb	r2, [r2]
 1825 004a 1B78     		ldrb	r3, [r3]
 1826 004c 9A42     		cmp	r2, r3
 1827 004e E7D3     		bcc	.L117
1340:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 1828              		.loc 1 1340 0
 1829 0050 BD46     		mov	sp, r7
 1830 0052 04B0     		add	sp, sp, #16
 1831              		@ sp needed
 1832 0054 80BD     		pop	{r7, pc}
 1833              	.L119:
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\ccK6nYzE.s 			page 57


 1834 0056 C046     		.align	2
 1835              	.L118:
 1836 0058 00000000 		.word	CapSense_sensorEnableMask
 1837              		.cfi_endproc
 1838              	.LFE59:
 1839              		.size	CapSense_DisableWidget, .-CapSense_DisableWidget
 1840              		.section	.text.CapSense_FindMaximum,"ax",%progbits
 1841              		.align	2
 1842              		.global	CapSense_FindMaximum
 1843              		.code	16
 1844              		.thumb_func
 1845              		.type	CapSense_FindMaximum, %function
 1846              	CapSense_FindMaximum:
 1847              	.LFB60:
1341:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1342:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1343:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if(CapSense_TOTAL_CENTROIDS_BASIC_COUNT)
1344:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
1345:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_FindMaximum
1346:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
1347:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1348:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
1349:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Finds the index of the maximum element within a defined centroid. Checks 
1350:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense_sensorSignal[] within a defined centroid and 
1351:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  returns the index of the maximum element. The values below the finger threshold are 
1352:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  ignored.
1353:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  The centroid is defined by offset of the first element and a number of elements - count.
1354:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  The diplexed centroid requires at least two consecutive elements above
1355:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  FingerThreshold to find the index of the maximum element.
1356:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * 
1357:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
1358:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  offset:  Start index of centroid in CapSense_sensorSignal[] array.
1359:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  count:   number of elements within centroid.
1360:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  fingerThreshold:  Finger threshold.
1361:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  diplex:   pointer to diplex table.
1362:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * 
1363:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
1364:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns the index of the maximum element within a defined centroid.
1365:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  If the index of the maximum element isn't found it returns 0xFF.
1366:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
1367:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Global Variables:
1368:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  CapSense_startOfSlider[] - contains the index of the first slider element
1369:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* 
1370:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Side Effects: 
1371:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
1372:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* 
1373:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
1374:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	#if (CapSense_IS_DIPLEX_SLIDER)
1375:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		uint8 CapSense_FindMaximum(uint8 offset, uint8 count, uint8 fingerThreshold, const uint8 *diplex)
1376:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	#else 
1377:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		uint8 CapSense_FindMaximum(uint8 offset, uint8 count, uint8 fingerThreshold)
1378:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	#endif /* (CapSense_IS_DIPLEX_SLIDER) */
1379:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 1848              		.loc 1 1379 0
 1849              		.cfi_startproc
 1850 0000 80B5     		push	{r7, lr}
 1851              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\ccK6nYzE.s 			page 58


 1852              		.cfi_offset 7, -8
 1853              		.cfi_offset 14, -4
 1854 0002 84B0     		sub	sp, sp, #16
 1855              		.cfi_def_cfa_offset 24
 1856 0004 00AF     		add	r7, sp, #0
 1857              		.cfi_def_cfa_register 7
 1858 0006 FB1D     		add	r3, r7, #7
 1859 0008 1870     		strb	r0, [r3]
 1860 000a BB1D     		add	r3, r7, #6
 1861 000c 1970     		strb	r1, [r3]
 1862 000e 7B1D     		add	r3, r7, #5
 1863 0010 1A70     		strb	r2, [r3]
1380:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 i;
1381:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)        
1382:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 curPos = 0u;
1383:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             /* No centroid at Start */
1384:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 curCntrdSize = 0u;
1385:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 curCtrdStartPos = CapSense_MAXIMUM_CENTROID;
1386:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Biggest centroid is zero */
1387:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 biggestCtrdSize = 0u;
1388:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 biggestCtrdStartPos = 0u;
1389:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1390:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 maximum = CapSense_MAXIMUM_CENTROID;
 1864              		.loc 1 1390 0
 1865 0012 3B1C     		mov	r3, r7
 1866 0014 0E33     		add	r3, r3, #14
 1867 0016 FF22     		mov	r2, #255
 1868 0018 1A70     		strb	r2, [r3]
1391:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		
1392:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 temp = 0u;
 1869              		.loc 1 1392 0
 1870 001a 3B1C     		mov	r3, r7
 1871 001c 0D33     		add	r3, r3, #13
 1872 001e 0022     		mov	r2, #0
 1873 0020 1A70     		strb	r2, [r3]
1393:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 *startOfSlider = &CapSense_sensorSignal[offset];
 1874              		.loc 1 1393 0
 1875 0022 FB1D     		add	r3, r7, #7
 1876 0024 1A78     		ldrb	r2, [r3]
 1877 0026 204B     		ldr	r3, .L125
 1878 0028 D318     		add	r3, r2, r3
 1879 002a BB60     		str	r3, [r7, #8]
1394:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1395:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)        
1396:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             if(diplex != 0u)
1397:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
1398:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Initialize */
1399:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 i = 0u;
1400:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 
1401:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Make slider x2 as Diplexed */
1402:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 count <<= 1u;
1403:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 while(1u)
1404:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 { 
1405:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     if (startOfSlider[curPos] > 0u)    /* Looking for centroids */
1406:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1407:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         if (curCtrdStartPos == CapSense_MAXIMUM_CENTROID)
1408:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         {
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\ccK6nYzE.s 			page 59


1409:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             /* Start of centroid */
1410:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             curCtrdStartPos = i;
1411:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             curCntrdSize++;
1412:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         }
1413:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         else
1414:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         {
1415:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             curCntrdSize++;
1416:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         }
1417:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
1418:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     else   /* Select biggest and indicate zero start */
1419:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     {          
1420:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         if(curCntrdSize > 0u)
1421:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         {
1422:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             /* We are at the end of current */
1423:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             if(curCntrdSize > biggestCtrdSize)
1424:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1425:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 biggestCtrdSize = curCntrdSize;
1426:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 biggestCtrdStartPos = curCtrdStartPos;
1427:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
1428:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             
1429:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             curCntrdSize = 0u;
1430:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             curCtrdStartPos = CapSense_MAXIMUM_CENTROID;
1431:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         }
1432:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
1433:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     
1434:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     i++; 
1435:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     curPos = diplex[i];
1436:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     if(i == count)
1437:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1438:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         break;
1439:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     }            
1440:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1441:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     
1442:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     /* Find biggest centroid if two are same size, last one wins
1443:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                        We are at the end of current */
1444:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 if (curCntrdSize >= biggestCtrdSize) 
1445:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1446:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     biggestCtrdSize = curCntrdSize;
1447:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     biggestCtrdStartPos = curCtrdStartPos;
1448:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1449:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
1450:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             else
1451:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
1452:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Without diplexing */ 
1453:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 biggestCtrdSize = count;
1454:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
1455:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         
1456:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1457:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Check centroid size */
1458:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #if (CapSense_IS_NON_DIPLEX_SLIDER)
1459:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 if((biggestCtrdSize >= 2u) || ((biggestCtrdSize == 1u) && (diplex == 0u)))
1460:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #else                    
1461:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 if(biggestCtrdSize >= 2u)
1462:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #endif /* (CapSense_IS_NON_DIPLEX_SLIDER) */
1463:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1464:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     for (i = biggestCtrdStartPos; i < (biggestCtrdStartPos + biggestCtrdSize); i++)
1465:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\ccK6nYzE.s 			page 60


1466:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (CapSense_IS_DIPLEX_SLIDER && CapSense_IS_NON_DIPLEX_SLIDER)
1467:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (diplex == 0u)
1468:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1469:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 curPos = i;
1470:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
1471:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             else
1472:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1473:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 curPos = diplex[i];
1474:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             }                    
1475:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #elif (CapSense_IS_DIPLEX_SLIDER)                    
1476:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             curPos = diplex[i];                    
1477:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (CapSense_IS_DIPLEX_SLIDER && CapSense_IS_NON_DIPLEX_SLIDER) */
1478:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         /* Looking for greater element within centroid */
1479:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         if(startOfSlider[curPos] > fingerThreshold)
1480:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         {
1481:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             if(startOfSlider[curPos] > temp)
1482:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1483:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 maximum = i;
1484:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 temp = startOfSlider[curPos];
1485:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
1486:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         }
1487:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
1488:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 } 
1489:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #else
1490:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             for (i = 0u; i < count; i++)
 1880              		.loc 1 1490 0
 1881 002c 3B1C     		mov	r3, r7
 1882 002e 0F33     		add	r3, r3, #15
 1883 0030 0022     		mov	r2, #0
 1884 0032 1A70     		strb	r2, [r3]
 1885 0034 2AE0     		b	.L121
 1886              	.L123:
1491:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {                      
1492:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Looking for greater element within centroid */
1493:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 if(startOfSlider[i] > fingerThreshold)
 1887              		.loc 1 1493 0
 1888 0036 3B1C     		mov	r3, r7
 1889 0038 0F33     		add	r3, r3, #15
 1890 003a 1B78     		ldrb	r3, [r3]
 1891 003c BA68     		ldr	r2, [r7, #8]
 1892 003e D318     		add	r3, r2, r3
 1893 0040 1B78     		ldrb	r3, [r3]
 1894 0042 7A1D     		add	r2, r7, #5
 1895 0044 1278     		ldrb	r2, [r2]
 1896 0046 9A42     		cmp	r2, r3
 1897 0048 19D2     		bcs	.L122
1494:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1495:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     if(startOfSlider[i] > temp)
 1898              		.loc 1 1495 0
 1899 004a 3B1C     		mov	r3, r7
 1900 004c 0F33     		add	r3, r3, #15
 1901 004e 1B78     		ldrb	r3, [r3]
 1902 0050 BA68     		ldr	r2, [r7, #8]
 1903 0052 D318     		add	r3, r2, r3
 1904 0054 1B78     		ldrb	r3, [r3]
 1905 0056 3A1C     		mov	r2, r7
 1906 0058 0D32     		add	r2, r2, #13
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\ccK6nYzE.s 			page 61


 1907 005a 1278     		ldrb	r2, [r2]
 1908 005c 9A42     		cmp	r2, r3
 1909 005e 0ED2     		bcs	.L122
1496:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1497:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         maximum = i;
 1910              		.loc 1 1497 0
 1911 0060 3B1C     		mov	r3, r7
 1912 0062 0E33     		add	r3, r3, #14
 1913 0064 3A1C     		mov	r2, r7
 1914 0066 0F32     		add	r2, r2, #15
 1915 0068 1278     		ldrb	r2, [r2]
 1916 006a 1A70     		strb	r2, [r3]
1498:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         temp = startOfSlider[i];
 1917              		.loc 1 1498 0
 1918 006c 3B1C     		mov	r3, r7
 1919 006e 0F33     		add	r3, r3, #15
 1920 0070 1B78     		ldrb	r3, [r3]
 1921 0072 BA68     		ldr	r2, [r7, #8]
 1922 0074 D218     		add	r2, r2, r3
 1923 0076 3B1C     		mov	r3, r7
 1924 0078 0D33     		add	r3, r3, #13
 1925 007a 1278     		ldrb	r2, [r2]
 1926 007c 1A70     		strb	r2, [r3]
 1927              	.L122:
1490:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             for (i = 0u; i < count; i++)
 1928              		.loc 1 1490 0
 1929 007e 3B1C     		mov	r3, r7
 1930 0080 0F33     		add	r3, r3, #15
 1931 0082 1A78     		ldrb	r2, [r3]
 1932 0084 3B1C     		mov	r3, r7
 1933 0086 0F33     		add	r3, r3, #15
 1934 0088 0132     		add	r2, r2, #1
 1935 008a 1A70     		strb	r2, [r3]
 1936              	.L121:
1490:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             for (i = 0u; i < count; i++)
 1937              		.loc 1 1490 0 is_stmt 0 discriminator 1
 1938 008c 3A1C     		mov	r2, r7
 1939 008e 0F32     		add	r2, r2, #15
 1940 0090 BB1D     		add	r3, r7, #6
 1941 0092 1278     		ldrb	r2, [r2]
 1942 0094 1B78     		ldrb	r3, [r3]
 1943 0096 9A42     		cmp	r2, r3
 1944 0098 CDD3     		bcc	.L123
1499:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
1500:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1501:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }    
1502:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1503:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         return (maximum);
 1945              		.loc 1 1503 0 is_stmt 1
 1946 009a 3B1C     		mov	r3, r7
 1947 009c 0E33     		add	r3, r3, #14
 1948 009e 1B78     		ldrb	r3, [r3]
1504:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 1949              		.loc 1 1504 0
 1950 00a0 181C     		mov	r0, r3
 1951 00a2 BD46     		mov	sp, r7
 1952 00a4 04B0     		add	sp, sp, #16
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\ccK6nYzE.s 			page 62


 1953              		@ sp needed
 1954 00a6 80BD     		pop	{r7, pc}
 1955              	.L126:
 1956              		.align	2
 1957              	.L125:
 1958 00a8 00000000 		.word	CapSense_sensorSignal
 1959              		.cfi_endproc
 1960              	.LFE60:
 1961              		.size	CapSense_FindMaximum, .-CapSense_FindMaximum
 1962              		.global	__aeabi_idiv
 1963              		.section	.text.CapSense_CalcCentroid,"ax",%progbits
 1964              		.align	2
 1965              		.global	CapSense_CalcCentroid
 1966              		.code	16
 1967              		.thumb_func
 1968              		.type	CapSense_CalcCentroid, %function
 1969              	CapSense_CalcCentroid:
 1970              	.LFB61:
1505:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
1506:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
1507:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
1508:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_CalcCentroid
1509:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
1510:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1511:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
1512:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns a position value calculated according to the index of the maximum element and API
1513:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  resolution.
1514:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1515:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
1516:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  type:  widget type.
1517:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  diplex:  pointer to diplex table.
1518:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  maximum:  Index of maximum element within centroid.
1519:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  offset:   Start index of centroid in CapSense_sensorSignal[] array.
1520:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  count:    Number of elements within centroid.
1521:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  resolution:  multiplicator calculated according to centroid type and
1522:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  API resolution.
1523:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  noiseThreshold:  Noise threshold.
1524:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * 
1525:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
1526:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns a position value of the slider.
1527:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
1528:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Side Effects: 
1529:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
1530:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* 
1531:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
1532:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if (CapSense_TOTAL_TRACKPAD_GESTURES_COUNT > 0u)
1533:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 CapSense_CalcCentroid(uint8 maximum, uint8 offset, 
1534:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                         uint8 count, uint32 resolution, uint8 noiseThreshold)
1535:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #else								
1536:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 CapSense_CalcCentroid(uint8 maximum, uint8 offset, 
1537:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                         uint8 count, uint16 resolution, uint8 noiseThreshold)						
1538:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (CapSense_TOTAL_TRACKPAD_GESTURES_COUNT > 0u) */
1539:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 1971              		.loc 1 1539 0
 1972              		.cfi_startproc
 1973 0000 90B5     		push	{r4, r7, lr}
 1974              		.cfi_def_cfa_offset 12
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\ccK6nYzE.s 			page 63


 1975              		.cfi_offset 4, -12
 1976              		.cfi_offset 7, -8
 1977              		.cfi_offset 14, -4
 1978 0002 89B0     		sub	sp, sp, #36
 1979              		.cfi_def_cfa_offset 48
 1980 0004 00AF     		add	r7, sp, #0
 1981              		.cfi_def_cfa_register 7
 1982 0006 041C     		mov	r4, r0
 1983 0008 081C     		mov	r0, r1
 1984 000a 111C     		mov	r1, r2
 1985 000c 1A1C     		mov	r2, r3
 1986 000e FB1D     		add	r3, r7, #7
 1987 0010 1C70     		strb	r4, [r3]
 1988 0012 BB1D     		add	r3, r7, #6
 1989 0014 1870     		strb	r0, [r3]
 1990 0016 7B1D     		add	r3, r7, #5
 1991 0018 1970     		strb	r1, [r3]
 1992 001a BB1C     		add	r3, r7, #2
 1993 001c 1A80     		strh	r2, [r3]
1540:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if ((CapSense_TOTAL_LINEAR_SLIDERS_COUNT > 0u) || (CapSense_TOTAL_TOUCH_PADS_BASIC_COUNT >
1541:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 posPrev;
1542:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 posNext;
1543:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* ((CapSense_TOTAL_LINEAR_SLIDERS_COUNT>0u) || (CapSense_TOTAL_TOUCH_PADS_BASIC_COU
1544:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
1545:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Helps during centroid calculation */
1546:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_TOTAL_CENTROIDS_BASIC_COUNT)
1547:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		    static uint8 CapSense_centroid[3u];
1548:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif  /* (CapSense_TOTAL_CENTROIDS_BASIC_COUNT) */
1549:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                
1550:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)                
1551:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 pos;
1552:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1553:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1554:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 position;
1555:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint32 numerator;
1556:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         int32 denominator;
1557:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		
1558:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		uint8  *startOfSlider = &CapSense_sensorSignal[offset];
 1994              		.loc 1 1558 0
 1995 001e BB1D     		add	r3, r7, #6
 1996 0020 1A78     		ldrb	r2, [r3]
 1997 0022 5A4B     		ldr	r3, .L137
 1998 0024 D318     		add	r3, r2, r3
 1999 0026 BB61     		str	r3, [r7, #24]
1559:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		
1560:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if ((CapSense_TOTAL_LINEAR_SLIDERS_COUNT > 0u) || (CapSense_TOTAL_TOUCH_PADS_BASIC_COUNT >
1561:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             posPrev = 0u;
 2000              		.loc 1 1561 0
 2001 0028 3B1C     		mov	r3, r7
 2002 002a 1F33     		add	r3, r3, #31
 2003 002c 0022     		mov	r2, #0
 2004 002e 1A70     		strb	r2, [r3]
1562:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* ((CapSense_TOTAL_LINEAR_SLIDERS_COUNT>0u) || (CapSense_TOTAL_TOUCH_PADS_BASIC_COU
1563:.\Generated_Source\PSoC4/CapSense_CSHL.c ****      
1564:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_ADD_SLIDER_TYPE)
1565:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             if(type == CapSense_TYPE_RADIAL_SLIDER)
1566:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\ccK6nYzE.s 			page 64


1567:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_ADD_SLIDER_TYPE) */
1568:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1569:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #if (CapSense_TOTAL_RADIAL_SLIDERS_COUNT > 0u)                
1570:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Copy Signal to the centroid array */
1571:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 CapSense_centroid[CapSense_POS] = startOfSlider[maximum];
1572:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                  
1573:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Check borders for ROTARY Slider */
1574:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 if (maximum == 0u)                   /* Start of centroid */
1575:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 { 
1576:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_PREV] = startOfSlider[count - 1u];
1577:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_NEXT] = startOfSlider[1u];
1578:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1579:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 else if (maximum == (count - 1u))    /* End of centroid */
1580:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1581:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_PREV] = startOfSlider[maximum - 1u];
1582:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_NEXT] = startOfSlider[0u];
1583:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1584:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 else                                /* Not first Not last */
1585:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1586:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_PREV] = startOfSlider[maximum - 1u];
1587:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_NEXT] = startOfSlider[maximum + 1u];
1588:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1589:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #endif /* (CapSense_TOTAL_RADIAL_SLIDERS_COUNT > 0u) */
1590:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1591:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_ADD_SLIDER_TYPE)
1592:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
1593:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             else
1594:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
1595:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_ADD_SLIDER_TYPE) */
1596:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1597:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #if ((CapSense_TOTAL_LINEAR_SLIDERS_COUNT > 0u) || (CapSense_TOTAL_TOUCH_PADS_BASIC_COU
1598:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 #if (CapSense_IS_DIPLEX_SLIDER && CapSense_IS_NON_DIPLEX_SLIDER)                   
1599:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     /* Calculate next and previous near to maximum */
1600:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     if(diplex == 0u)
1601:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1602:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         pos     = maximum;
1603:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         posPrev = maximum - 1u;
1604:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         posNext = maximum + 1u; 
1605:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
1606:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     else
1607:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1608:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         pos     = diplex[maximum];
1609:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         posPrev = diplex[maximum - 1u];
1610:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         posNext = diplex[maximum + 1u];
1611:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         count <<= 1u;
1612:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     }                    
1613:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 #elif (CapSense_IS_DIPLEX_SLIDER)
1614:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     /* Calculate next and previous near to maximum */
1615:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     pos     = diplex[maximum];
1616:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     posPrev = diplex[maximum - 1u];
1617:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     posNext = diplex[maximum + 1u];
1618:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     count <<= 1u;                    
1619:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 #else                    
1620:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     /* Calculate next and previous near to maximum */
1621:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     if (maximum >= 1u)
 2005              		.loc 1 1621 0
 2006 0030 FB1D     		add	r3, r7, #7
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\ccK6nYzE.s 			page 65


 2007 0032 1B78     		ldrb	r3, [r3]
 2008 0034 002B     		cmp	r3, #0
 2009 0036 05D0     		beq	.L128
1622:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1623:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         posPrev = maximum - 1u;
 2010              		.loc 1 1623 0
 2011 0038 3B1C     		mov	r3, r7
 2012 003a 1F33     		add	r3, r3, #31
 2013 003c FA1D     		add	r2, r7, #7
 2014 003e 1278     		ldrb	r2, [r2]
 2015 0040 013A     		sub	r2, r2, #1
 2016 0042 1A70     		strb	r2, [r3]
 2017              	.L128:
1624:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
1625:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     posNext = maximum + 1u;
 2018              		.loc 1 1625 0
 2019 0044 3B1C     		mov	r3, r7
 2020 0046 1733     		add	r3, r3, #23
 2021 0048 FA1D     		add	r2, r7, #7
 2022 004a 1278     		ldrb	r2, [r2]
 2023 004c 0132     		add	r2, r2, #1
 2024 004e 1A70     		strb	r2, [r3]
1626:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 #endif /* (CapSense_IS_DIPLEX_SLIDER && CapSense_IS_NON_DIPLEX_SLIDER) */
1627:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         
1628:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Copy Signal to the centroid array */
1629:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 #if (CapSense_IS_DIPLEX_SLIDER)
1630:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS] = startOfSlider[pos];
1631:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 #else
1632:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS] = startOfSlider[maximum];
 2025              		.loc 1 1632 0
 2026 0050 FB1D     		add	r3, r7, #7
 2027 0052 1B78     		ldrb	r3, [r3]
 2028 0054 BA69     		ldr	r2, [r7, #24]
 2029 0056 D318     		add	r3, r2, r3
 2030 0058 1A78     		ldrb	r2, [r3]
 2031 005a 4D4B     		ldr	r3, .L137+4
 2032 005c 5A70     		strb	r2, [r3, #1]
1633:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1634:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     
1635:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Check borders for LINEAR Slider */
1636:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 if (maximum == 0u)                   /* Start of centroid */
 2033              		.loc 1 1636 0
 2034 005e FB1D     		add	r3, r7, #7
 2035 0060 1B78     		ldrb	r3, [r3]
 2036 0062 002B     		cmp	r3, #0
 2037 0064 0BD1     		bne	.L129
1637:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 { 
1638:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_PREV] = 0u;
 2038              		.loc 1 1638 0
 2039 0066 4A4B     		ldr	r3, .L137+4
 2040 0068 0022     		mov	r2, #0
 2041 006a 1A70     		strb	r2, [r3]
1639:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_NEXT] = startOfSlider[posNext];
 2042              		.loc 1 1639 0
 2043 006c 3B1C     		mov	r3, r7
 2044 006e 1733     		add	r3, r3, #23
 2045 0070 1B78     		ldrb	r3, [r3]
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\ccK6nYzE.s 			page 66


 2046 0072 BA69     		ldr	r2, [r7, #24]
 2047 0074 D318     		add	r3, r2, r3
 2048 0076 1A78     		ldrb	r2, [r3]
 2049 0078 454B     		ldr	r3, .L137+4
 2050 007a 9A70     		strb	r2, [r3, #2]
 2051 007c 22E0     		b	.L130
 2052              	.L129:
1640:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1641:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 else if (maximum == ((count) - 1u)) /* End of centroid */
 2053              		.loc 1 1641 0
 2054 007e FB1D     		add	r3, r7, #7
 2055 0080 1A78     		ldrb	r2, [r3]
 2056 0082 7B1D     		add	r3, r7, #5
 2057 0084 1B78     		ldrb	r3, [r3]
 2058 0086 013B     		sub	r3, r3, #1
 2059 0088 9A42     		cmp	r2, r3
 2060 008a 0BD1     		bne	.L131
1642:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1643:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_PREV] = startOfSlider[posPrev];
 2061              		.loc 1 1643 0
 2062 008c 3B1C     		mov	r3, r7
 2063 008e 1F33     		add	r3, r3, #31
 2064 0090 1B78     		ldrb	r3, [r3]
 2065 0092 BA69     		ldr	r2, [r7, #24]
 2066 0094 D318     		add	r3, r2, r3
 2067 0096 1A78     		ldrb	r2, [r3]
 2068 0098 3D4B     		ldr	r3, .L137+4
 2069 009a 1A70     		strb	r2, [r3]
1644:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_NEXT] = 0u;
 2070              		.loc 1 1644 0
 2071 009c 3C4B     		ldr	r3, .L137+4
 2072 009e 0022     		mov	r2, #0
 2073 00a0 9A70     		strb	r2, [r3, #2]
 2074 00a2 0FE0     		b	.L130
 2075              	.L131:
1645:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1646:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 else                                /* Not first Not last */
1647:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1648:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_PREV] = startOfSlider[posPrev];
 2076              		.loc 1 1648 0
 2077 00a4 3B1C     		mov	r3, r7
 2078 00a6 1F33     		add	r3, r3, #31
 2079 00a8 1B78     		ldrb	r3, [r3]
 2080 00aa BA69     		ldr	r2, [r7, #24]
 2081 00ac D318     		add	r3, r2, r3
 2082 00ae 1A78     		ldrb	r2, [r3]
 2083 00b0 374B     		ldr	r3, .L137+4
 2084 00b2 1A70     		strb	r2, [r3]
1649:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_NEXT] = startOfSlider[posNext];
 2085              		.loc 1 1649 0
 2086 00b4 3B1C     		mov	r3, r7
 2087 00b6 1733     		add	r3, r3, #23
 2088 00b8 1B78     		ldrb	r3, [r3]
 2089 00ba BA69     		ldr	r2, [r7, #24]
 2090 00bc D318     		add	r3, r2, r3
 2091 00be 1A78     		ldrb	r2, [r3]
 2092 00c0 334B     		ldr	r3, .L137+4
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\ccK6nYzE.s 			page 67


 2093 00c2 9A70     		strb	r2, [r3, #2]
 2094              	.L130:
1650:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1651:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #endif /* ((CapSense_TOTAL_LINEAR_SLIDERS_COUNT>0u)||(CapSense_TOTAL_TOUCH_PADS_BASIC_C
1652:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1653:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_ADD_SLIDER_TYPE)
1654:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
1655:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_ADD_SLIDER_TYPE) */
1656:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
1657:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Subtract noiseThreshold */
1658:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if(CapSense_centroid[CapSense_POS_PREV] > noiseThreshold)
 2095              		.loc 1 1658 0
 2096 00c4 324B     		ldr	r3, .L137+4
 2097 00c6 1B78     		ldrb	r3, [r3]
 2098 00c8 3A1C     		mov	r2, r7
 2099 00ca 3032     		add	r2, r2, #48
 2100 00cc 1278     		ldrb	r2, [r2]
 2101 00ce 9A42     		cmp	r2, r3
 2102 00d0 09D2     		bcs	.L132
1659:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1660:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_centroid[CapSense_POS_PREV] -= noiseThreshold;
 2103              		.loc 1 1660 0
 2104 00d2 2F4B     		ldr	r3, .L137+4
 2105 00d4 1A78     		ldrb	r2, [r3]
 2106 00d6 3B1C     		mov	r3, r7
 2107 00d8 3033     		add	r3, r3, #48
 2108 00da 1B78     		ldrb	r3, [r3]
 2109 00dc D31A     		sub	r3, r2, r3
 2110 00de DAB2     		uxtb	r2, r3
 2111 00e0 2B4B     		ldr	r3, .L137+4
 2112 00e2 1A70     		strb	r2, [r3]
 2113 00e4 02E0     		b	.L133
 2114              	.L132:
1661:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1662:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         else
1663:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1664:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_centroid[CapSense_POS_PREV] = 0u;
 2115              		.loc 1 1664 0
 2116 00e6 2A4B     		ldr	r3, .L137+4
 2117 00e8 0022     		mov	r2, #0
 2118 00ea 1A70     		strb	r2, [r3]
 2119              	.L133:
1665:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1666:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
1667:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Maximum always greater than fingerThreshold, so greater than noiseThreshold */
1668:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_centroid[CapSense_POS] -= noiseThreshold;
 2120              		.loc 1 1668 0
 2121 00ec 284B     		ldr	r3, .L137+4
 2122 00ee 5A78     		ldrb	r2, [r3, #1]
 2123 00f0 3B1C     		mov	r3, r7
 2124 00f2 3033     		add	r3, r3, #48
 2125 00f4 1B78     		ldrb	r3, [r3]
 2126 00f6 D31A     		sub	r3, r2, r3
 2127 00f8 DAB2     		uxtb	r2, r3
 2128 00fa 254B     		ldr	r3, .L137+4
 2129 00fc 5A70     		strb	r2, [r3, #1]
1669:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\ccK6nYzE.s 			page 68


1670:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Subtract noiseThreshold */
1671:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if(CapSense_centroid[CapSense_POS_NEXT] > noiseThreshold)
 2130              		.loc 1 1671 0
 2131 00fe 244B     		ldr	r3, .L137+4
 2132 0100 9B78     		ldrb	r3, [r3, #2]
 2133 0102 3A1C     		mov	r2, r7
 2134 0104 3032     		add	r2, r2, #48
 2135 0106 1278     		ldrb	r2, [r2]
 2136 0108 9A42     		cmp	r2, r3
 2137 010a 09D2     		bcs	.L134
1672:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1673:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_centroid[CapSense_POS_NEXT] -= noiseThreshold;
 2138              		.loc 1 1673 0
 2139 010c 204B     		ldr	r3, .L137+4
 2140 010e 9A78     		ldrb	r2, [r3, #2]
 2141 0110 3B1C     		mov	r3, r7
 2142 0112 3033     		add	r3, r3, #48
 2143 0114 1B78     		ldrb	r3, [r3]
 2144 0116 D31A     		sub	r3, r2, r3
 2145 0118 DAB2     		uxtb	r2, r3
 2146 011a 1D4B     		ldr	r3, .L137+4
 2147 011c 9A70     		strb	r2, [r3, #2]
 2148 011e 02E0     		b	.L135
 2149              	.L134:
1674:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1675:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         else
1676:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1677:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_centroid[CapSense_POS_NEXT] = 0u;
 2150              		.loc 1 1677 0
 2151 0120 1B4B     		ldr	r3, .L137+4
 2152 0122 0022     		mov	r2, #0
 2153 0124 9A70     		strb	r2, [r3, #2]
 2154              	.L135:
1678:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1679:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
1680:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
1681:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Si+1 - Si-1 */
1682:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         numerator = (uint32) CapSense_centroid[CapSense_POS_NEXT] -
 2155              		.loc 1 1682 0
 2156 0126 1A4B     		ldr	r3, .L137+4
 2157 0128 9B78     		ldrb	r3, [r3, #2]
 2158 012a 1A1C     		mov	r2, r3
1683:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     (uint32) CapSense_centroid[CapSense_POS_PREV];
 2159              		.loc 1 1683 0
 2160 012c 184B     		ldr	r3, .L137+4
 2161 012e 1B78     		ldrb	r3, [r3]
1682:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         numerator = (uint32) CapSense_centroid[CapSense_POS_NEXT] -
 2162              		.loc 1 1682 0
 2163 0130 D31A     		sub	r3, r2, r3
 2164 0132 3B61     		str	r3, [r7, #16]
1684:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1685:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Si+1 + Si + Si-1 */
1686:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         denominator = (int32) CapSense_centroid[CapSense_POS_PREV] + 
 2165              		.loc 1 1686 0
 2166 0134 164B     		ldr	r3, .L137+4
 2167 0136 1B78     		ldrb	r3, [r3]
 2168 0138 1A1C     		mov	r2, r3
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\ccK6nYzE.s 			page 69


1687:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                       (int32) CapSense_centroid[CapSense_POS] + 
 2169              		.loc 1 1687 0
 2170 013a 154B     		ldr	r3, .L137+4
 2171 013c 5B78     		ldrb	r3, [r3, #1]
1686:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         denominator = (int32) CapSense_centroid[CapSense_POS_PREV] + 
 2172              		.loc 1 1686 0
 2173 013e D218     		add	r2, r2, r3
1688:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                       (int32) CapSense_centroid[CapSense_POS_NEXT];
 2174              		.loc 1 1688 0
 2175 0140 134B     		ldr	r3, .L137+4
 2176 0142 9B78     		ldrb	r3, [r3, #2]
1686:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         denominator = (int32) CapSense_centroid[CapSense_POS_PREV] + 
 2177              		.loc 1 1686 0
 2178 0144 D318     		add	r3, r2, r3
 2179 0146 FB60     		str	r3, [r7, #12]
1689:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
1690:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* (numerator/denominator) + maximum */
1691:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         denominator = (((int32)(uint32)((uint32)numerator << 8u)/denominator) + (int32)(uint32)((ui
 2180              		.loc 1 1691 0
 2181 0148 3B69     		ldr	r3, [r7, #16]
 2182 014a 1B02     		lsl	r3, r3, #8
 2183 014c 181C     		mov	r0, r3
 2184 014e F968     		ldr	r1, [r7, #12]
 2185 0150 FFF7FEFF 		bl	__aeabi_idiv
 2186 0154 031C     		mov	r3, r0
 2187 0156 1A1C     		mov	r2, r3
 2188 0158 FB1D     		add	r3, r7, #7
 2189 015a 1B78     		ldrb	r3, [r3]
 2190 015c 1B02     		lsl	r3, r3, #8
 2191 015e D318     		add	r3, r2, r3
 2192 0160 FB60     		str	r3, [r7, #12]
1692:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1693:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if(CapSense_TOTAL_RADIAL_SLIDERS_COUNT > 0u)
1694:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Only required for RADIAL Slider */
1695:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             if(denominator < 0)
1696:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
1697:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 denominator += (int32)((uint16)((uint16) count << 8u));
1698:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
1699:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_TOTAL_RADIAL_SLIDERS_COUNT > 0u) */
1700:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
1701:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         denominator *= (int16)resolution;
 2193              		.loc 1 1701 0
 2194 0162 BB1C     		add	r3, r7, #2
 2195 0164 1B88     		ldrh	r3, [r3]
 2196 0166 1AB2     		sxth	r2, r3
 2197 0168 FB68     		ldr	r3, [r7, #12]
 2198 016a 5343     		mul	r3, r2
 2199 016c FB60     		str	r3, [r7, #12]
1702:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
1703:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Round result and put it to uint8 */
1704:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         position = ((uint8) HI16((uint32)denominator + CapSense_CENTROID_ROUND_VALUE));
 2200              		.loc 1 1704 0
 2201 016e FB68     		ldr	r3, [r7, #12]
 2202 0170 FE22     		mov	r2, #254
 2203 0172 D201     		lsl	r2, r2, #7
 2204 0174 9B18     		add	r3, r3, r2
 2205 0176 1A0C     		lsr	r2, r3, #16
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\ccK6nYzE.s 			page 70


 2206 0178 3B1C     		mov	r3, r7
 2207 017a 0B33     		add	r3, r3, #11
 2208 017c 1A70     		strb	r2, [r3]
1705:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1706:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         return (position);
 2209              		.loc 1 1706 0
 2210 017e 3B1C     		mov	r3, r7
 2211 0180 0B33     		add	r3, r3, #11
 2212 0182 1B78     		ldrb	r3, [r3]
1707:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }    
 2213              		.loc 1 1707 0
 2214 0184 181C     		mov	r0, r3
 2215 0186 BD46     		mov	sp, r7
 2216 0188 09B0     		add	sp, sp, #36
 2217              		@ sp needed
 2218 018a 90BD     		pop	{r4, r7, pc}
 2219              	.L138:
 2220              		.align	2
 2221              	.L137:
 2222 018c 00000000 		.word	CapSense_sensorSignal
 2223 0190 24000000 		.word	CapSense_centroid.5402
 2224              		.cfi_endproc
 2225              	.LFE61:
 2226              		.size	CapSense_CalcCentroid, .-CapSense_CalcCentroid
 2227              		.section	.text.CapSense_GetCentroidPos,"ax",%progbits
 2228              		.align	2
 2229              		.global	CapSense_GetCentroidPos
 2230              		.code	16
 2231              		.thumb_func
 2232              		.type	CapSense_GetCentroidPos, %function
 2233              	CapSense_GetCentroidPos:
 2234              	.LFB62:
1708:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (CapSense_TOTAL_CENTROIDS_BASIC_COUNT) */
1709:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1710:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1711:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if((CapSense_TOTAL_RADIAL_SLIDERS_COUNT > 0u) || (CapSense_TOTAL_LINEAR_SLIDERS_COUNT > 0u))
1712:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
1713:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_GetCentroidPos
1714:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
1715:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1716:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
1717:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Checks the CapSense_Signal[ ] array for a centroid within
1718:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  a slider specified range. The centroid position is calculated according to the resolution
1719:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  specified in the CapSense customizer. The position filters are applied to the
1720:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  result if enabled.
1721:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1722:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
1723:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  widget:  Widget number.
1724:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  For every linear slider widget there are defines in this format:
1725:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  #define CapSense_"widget_name"__LS           5
1726:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * 
1727:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
1728:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns a position value of the linear slider.
1729:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
1730:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Global Variables:
1731:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
1732:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\ccK6nYzE.s 			page 71


1733:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
1734:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  If any sensor within the slider widget is active, the function returns values
1735:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  from zero to the API resolution value set in the CapSense customizer. If no
1736:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  sensors are active, the function returns 0xFFFF. If an error occurs during
1737:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  execution of the centroid/diplexing algorithm, the function returns 0xFFFF.
1738:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  There are no checks of the widget type argument provided to this function.
1739:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  The unproper widget type provided will cause unexpected position calculations.
1740:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1741:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Note:
1742:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  If noise counts on the slider segments are greater than the noise
1743:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  threshold, this subroutine may generate a false centroid result. The noise
1744:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  threshold should be set carefully (high enough above the noise level) so
1745:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  that noise will not generate a false centroid.
1746:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
1747:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_GetCentroidPos(uint32 widget)
1748:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 2235              		.loc 1 1748 0
 2236              		.cfi_startproc
 2237 0000 90B5     		push	{r4, r7, lr}
 2238              		.cfi_def_cfa_offset 12
 2239              		.cfi_offset 4, -12
 2240              		.cfi_offset 7, -8
 2241              		.cfi_offset 14, -4
 2242 0002 87B0     		sub	sp, sp, #28
 2243              		.cfi_def_cfa_offset 40
 2244 0004 02AF     		add	r7, sp, #8
 2245              		.cfi_def_cfa 7, 32
 2246 0006 7860     		str	r0, [r7, #4]
1749:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)
1750:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             const uint8 *diplex;
1751:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1752:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 
1753:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (0u != CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)
1754:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 posIndex;
1755:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 firstTimeIndex = CapSense_posFiltersData[widget];
 2247              		.loc 1 1755 0
 2248 0008 3B1C     		mov	r3, r7
 2249 000a 0D33     		add	r3, r3, #13
 2250 000c 4F49     		ldr	r1, .L145
 2251 000e 7A68     		ldr	r2, [r7, #4]
 2252 0010 8A18     		add	r2, r1, r2
 2253 0012 1278     		ldrb	r2, [r2]
 2254 0014 1A70     		strb	r2, [r3]
1756:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 posFiltersMask = CapSense_posFiltersMask[widget];  
 2255              		.loc 1 1756 0
 2256 0016 3B1C     		mov	r3, r7
 2257 0018 0C33     		add	r3, r3, #12
 2258 001a 4D49     		ldr	r1, .L145+4
 2259 001c 7A68     		ldr	r2, [r7, #4]
 2260 001e 8A18     		add	r2, r1, r2
 2261 0020 1278     		ldrb	r2, [r2]
 2262 0022 1A70     		strb	r2, [r3]
1757:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (0u != CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK) */
1758:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1759:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if ((0u != (CapSense_MEDIAN_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)) || \
1760:.\Generated_Source\PSoC4/CapSense_CSHL.c ****              (0u != (CapSense_AVERAGING_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)))
1761:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 tempPos;
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\ccK6nYzE.s 			page 72


1762:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* ((0u != (CapSense_MEDIAN_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)) || \
1763:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                *   (0u != (CapSense_AVERAGING_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)))
1764:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                */
1765:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1766:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 maximum;
1767:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint16 position;
1768:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 offset = CapSense_rawDataIndex[widget];
 2263              		.loc 1 1768 0
 2264 0024 3B1C     		mov	r3, r7
 2265 0026 0B33     		add	r3, r3, #11
 2266 0028 0022     		mov	r2, #0
 2267 002a 1A70     		strb	r2, [r3]
1769:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 count = CapSense_numberOfSensors[widget];
 2268              		.loc 1 1769 0
 2269 002c 3B1C     		mov	r3, r7
 2270 002e 0A33     		add	r3, r3, #10
 2271 0030 0522     		mov	r2, #5
 2272 0032 1A70     		strb	r2, [r3]
1770:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         
1771:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)
1772:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             if(widget < CapSense_TOTAL_DIPLEXED_SLIDERS_COUNT)
1773:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
1774:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 maximum = CapSense_diplexTable[widget];
1775:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 diplex = &CapSense_diplexTable[maximum];
1776:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
1777:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             else
1778:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
1779:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 diplex = 0u;
1780:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
1781:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1782:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1783:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		/* Find Maximum within centroid */      
1784:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		#if (CapSense_IS_DIPLEX_SLIDER)        
1785:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			maximum = CapSense_FindMaximum(offset, count, (uint8)CapSense_fingerThreshold[widget], diplex);
1786:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		#else
1787:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			maximum = CapSense_FindMaximum(offset, count, (uint8)CapSense_fingerThreshold[widget]);
 2273              		.loc 1 1787 0
 2274 0034 474A     		ldr	r2, .L145+8
 2275 0036 7B68     		ldr	r3, [r7, #4]
 2276 0038 D318     		add	r3, r2, r3
 2277 003a 1B78     		ldrb	r3, [r3]
 2278 003c 3C1C     		mov	r4, r7
 2279 003e 0934     		add	r4, r4, #9
 2280 0040 3A1C     		mov	r2, r7
 2281 0042 0B32     		add	r2, r2, #11
 2282 0044 1178     		ldrb	r1, [r2]
 2283 0046 3A1C     		mov	r2, r7
 2284 0048 0A32     		add	r2, r2, #10
 2285 004a 1278     		ldrb	r2, [r2]
 2286 004c 081C     		mov	r0, r1
 2287 004e 111C     		mov	r1, r2
 2288 0050 1A1C     		mov	r2, r3
 2289 0052 FFF7FEFF 		bl	CapSense_FindMaximum
 2290 0056 031C     		mov	r3, r0
 2291 0058 2370     		strb	r3, [r4]
1788:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		#endif /* (CapSense_IS_DIPLEX_SLIDER) */
1789:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\ccK6nYzE.s 			page 73


1790:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if (maximum != 0xFFu)
 2292              		.loc 1 1790 0
 2293 005a 3B1C     		mov	r3, r7
 2294 005c 0933     		add	r3, r3, #9
 2295 005e 1B78     		ldrb	r3, [r3]
 2296 0060 FF2B     		cmp	r3, #255
 2297 0062 5AD0     		beq	.L140
1791:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1792:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Calculate centroid */
1793:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             position = (uint16) CapSense_CalcCentroid(maximum, 
 2298              		.loc 1 1793 0
 2299 0064 FE23     		mov	r3, #254
 2300 0066 5B01     		lsl	r3, r3, #5
 2301 0068 3B49     		ldr	r1, .L145+12
 2302 006a 7A68     		ldr	r2, [r7, #4]
 2303 006c 8A18     		add	r2, r1, r2
 2304 006e 1478     		ldrb	r4, [r2]
 2305 0070 3A1C     		mov	r2, r7
 2306 0072 0932     		add	r2, r2, #9
 2307 0074 1078     		ldrb	r0, [r2]
 2308 0076 3A1C     		mov	r2, r7
 2309 0078 0B32     		add	r2, r2, #11
 2310 007a 1178     		ldrb	r1, [r2]
 2311 007c 3A1C     		mov	r2, r7
 2312 007e 0A32     		add	r2, r2, #10
 2313 0080 1278     		ldrb	r2, [r2]
 2314 0082 0094     		str	r4, [sp]
 2315 0084 FFF7FEFF 		bl	CapSense_CalcCentroid
 2316 0088 031C     		mov	r3, r0
 2317 008a 1A1C     		mov	r2, r3
 2318 008c 3B1C     		mov	r3, r7
 2319 008e 0E33     		add	r3, r3, #14
 2320 0090 1A80     		strh	r2, [r3]
1794:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                          offset, count, CapSense_centroidMult[widget], CapSense_noiseThreshold[widg
1795:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1796:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #if (0u != CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)
1797:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Check if this linear slider has enabled filters */
1798:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 if (0u != (posFiltersMask & CapSense_ANY_POS_FILTER))
 2321              		.loc 1 1798 0
 2322 0092 3B1C     		mov	r3, r7
 2323 0094 0C33     		add	r3, r3, #12
 2324 0096 1A78     		ldrb	r2, [r3]
 2325 0098 1F23     		mov	r3, #31
 2326 009a 1340     		and	r3, r2
 2327 009c 4ED0     		beq	.L143
1799:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1800:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     /* Calculate position to store filters data */
1801:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     posIndex  = firstTimeIndex + 1u;
 2328              		.loc 1 1801 0
 2329 009e 3B1C     		mov	r3, r7
 2330 00a0 0833     		add	r3, r3, #8
 2331 00a2 3A1C     		mov	r2, r7
 2332 00a4 0D32     		add	r2, r2, #13
 2333 00a6 1278     		ldrb	r2, [r2]
 2334 00a8 0132     		add	r2, r2, #1
 2335 00aa 1A70     		strb	r2, [r3]
1802:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\ccK6nYzE.s 			page 74


1803:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     if (0u == CapSense_posFiltersData[firstTimeIndex])
 2336              		.loc 1 1803 0
 2337 00ac 3B1C     		mov	r3, r7
 2338 00ae 0D33     		add	r3, r3, #13
 2339 00b0 1B78     		ldrb	r3, [r3]
 2340 00b2 264A     		ldr	r2, .L145
 2341 00b4 D35C     		ldrb	r3, [r2, r3]
 2342 00b6 002B     		cmp	r3, #0
 2343 00b8 0FD1     		bne	.L142
1804:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1805:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         /* Init filters */
1806:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         CapSense_posFiltersData[posIndex] = (uint8) position;
 2344              		.loc 1 1806 0
 2345 00ba 3B1C     		mov	r3, r7
 2346 00bc 0833     		add	r3, r3, #8
 2347 00be 1B78     		ldrb	r3, [r3]
 2348 00c0 3A1C     		mov	r2, r7
 2349 00c2 0E32     		add	r2, r2, #14
 2350 00c4 1288     		ldrh	r2, [r2]
 2351 00c6 D1B2     		uxtb	r1, r2
 2352 00c8 204A     		ldr	r2, .L145
 2353 00ca D154     		strb	r1, [r2, r3]
1807:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if ((0u != (CapSense_MEDIAN_FILTER & \
1808:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                      CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)) || \
1809:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                              (0u != (CapSense_AVERAGING_FILTER & \
1810:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                      CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)))
1811:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1812:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             if ( (0u != (posFiltersMask & CapSense_MEDIAN_FILTER)) || 
1813:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                  (0u != (posFiltersMask & CapSense_AVERAGING_FILTER)) )
1814:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1815:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex + 1u] = (uint8) position;
1816:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
1817:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* ((0u != (CapSense_MEDIAN_FILTER & \
1818:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                *           CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)) || \
1819:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                *   (0u != (CapSense_AVERAGING_FILTER & \
1820:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                *           CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)))
1821:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
1822:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         
1823:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         CapSense_posFiltersData[firstTimeIndex] = 1u;
 2354              		.loc 1 1823 0
 2355 00cc 3B1C     		mov	r3, r7
 2356 00ce 0D33     		add	r3, r3, #13
 2357 00d0 1B78     		ldrb	r3, [r3]
 2358 00d2 1E4A     		ldr	r2, .L145
 2359 00d4 0121     		mov	r1, #1
 2360 00d6 D154     		strb	r1, [r2, r3]
 2361 00d8 30E0     		b	.L143
 2362              	.L142:
1824:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
1825:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     else
1826:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1827:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         /* Do filtering */
1828:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (0u != (CapSense_MEDIAN_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MA
1829:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_MEDIAN_FILTER))
1830:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1831:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 tempPos = (uint8) position;
1832:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_MedianFilter(position,
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\ccK6nYzE.s 			page 75


1833:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                 (uint16)CapSense_posFiltersData[pos
1834:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                 (uint16)CapSense_posFiltersData[pos
1835:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex + 1u] =
1836:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                              CapSense_posFiltersDat
1837:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = tempPos;
1838:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
1839:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /*(0u != (CapSense_MEDIAN_FILTER &
1840:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                *         CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK))
1841:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
1842:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1843:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if(0u!=(CapSense_AVERAGING_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MA
1844:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_AVERAGING_FILTER)) 
1845:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1846:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 tempPos = (uint8) position;
1847:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_AveragingFilter(position,
1848:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                 (uint16)CapSense_posFiltersData[pos
1849:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                 (uint16)CapSense_posFiltersData[pos
1850:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex+1u]=CapSense_posFiltersData[posInd
1851:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = tempPos;
1852:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
1853:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_AVERAGING_FILTER & \
1854:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                *           CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK))
1855:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
1856:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1857:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (0u != (CapSense_IIR2_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK
1858:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_IIR2_FILTER)) 
1859:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1860:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_IIR2Filter(position,
1861:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                     (uint16)CapSense_posFiltersData
1862:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = (uint8) position;
1863:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
1864:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_IIR2_FILTER & \
1865:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                *          CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK))
1866:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
1867:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1868:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (0u != (CapSense_IIR4_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK
1869:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_IIR4_FILTER))
 2363              		.loc 1 1869 0
 2364 00da 3B1C     		mov	r3, r7
 2365 00dc 0C33     		add	r3, r3, #12
 2366 00de 1A78     		ldrb	r2, [r3]
 2367 00e0 0823     		mov	r3, #8
 2368 00e2 1340     		and	r3, r2
 2369 00e4 2AD0     		beq	.L143
1870:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1871:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_IIR4Filter(position,
1872:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                     (uint16)CapSense_posFiltersData
 2370              		.loc 1 1872 0
 2371 00e6 3B1C     		mov	r3, r7
 2372 00e8 0833     		add	r3, r3, #8
 2373 00ea 1B78     		ldrb	r3, [r3]
 2374 00ec 174A     		ldr	r2, .L145
 2375 00ee D35C     		ldrb	r3, [r2, r3]
1871:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_IIR4Filter(position,
 2376              		.loc 1 1871 0
 2377 00f0 3C1C     		mov	r4, r7
 2378 00f2 0E34     		add	r4, r4, #14
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\ccK6nYzE.s 			page 76


 2379 00f4 3A1C     		mov	r2, r7
 2380 00f6 0E32     		add	r2, r2, #14
 2381 00f8 1288     		ldrh	r2, [r2]
 2382 00fa 101C     		mov	r0, r2
 2383 00fc 191C     		mov	r1, r3
 2384 00fe FFF7FEFF 		bl	CapSense_IIR4Filter
 2385 0102 031C     		mov	r3, r0
 2386 0104 2380     		strh	r3, [r4]
1873:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = (uint8) position;
 2387              		.loc 1 1873 0
 2388 0106 3B1C     		mov	r3, r7
 2389 0108 0833     		add	r3, r3, #8
 2390 010a 1B78     		ldrb	r3, [r3]
 2391 010c 3A1C     		mov	r2, r7
 2392 010e 0E32     		add	r2, r2, #14
 2393 0110 1288     		ldrh	r2, [r2]
 2394 0112 D1B2     		uxtb	r1, r2
 2395 0114 0D4A     		ldr	r2, .L145
 2396 0116 D154     		strb	r1, [r2, r3]
 2397 0118 10E0     		b	.L143
 2398              	.L140:
1874:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             }                                
1875:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_IIR4_FILTER & \
1876:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                *          CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK))
1877:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
1878:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1879:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (0u != (CapSense_JITTER_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MA
1880:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_JITTER_FILTER))
1881:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1882:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_JitterFilter(position,
1883:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                     (uint16)CapSense_posFiltersData
1884:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = (uint8) position;
1885:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
1886:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_JITTER_FILTER & \
1887:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                *           CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK))
1888:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
1889:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
1890:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1891:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #endif /* (0u != CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK) */
1892:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1893:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1894:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         else
1895:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1896:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Maximum wasn't found */
1897:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             position = 0xFFFFu;
 2399              		.loc 1 1897 0
 2400 011a 3B1C     		mov	r3, r7
 2401 011c 0E33     		add	r3, r3, #14
 2402 011e 0122     		mov	r2, #1
 2403 0120 5242     		neg	r2, r2
 2404 0122 1A80     		strh	r2, [r3]
1898:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1899:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #if(0u != CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)
1900:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Reset filters */
1901:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 if(0u != (posFiltersMask & CapSense_ANY_POS_FILTER))
 2405              		.loc 1 1901 0
 2406 0124 3B1C     		mov	r3, r7
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\ccK6nYzE.s 			page 77


 2407 0126 0C33     		add	r3, r3, #12
 2408 0128 1A78     		ldrb	r2, [r3]
 2409 012a 1F23     		mov	r3, #31
 2410 012c 1340     		and	r3, r2
 2411 012e 05D0     		beq	.L143
1902:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1903:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_posFiltersData[firstTimeIndex] = 0u;
 2412              		.loc 1 1903 0
 2413 0130 3B1C     		mov	r3, r7
 2414 0132 0D33     		add	r3, r3, #13
 2415 0134 1B78     		ldrb	r3, [r3]
 2416 0136 054A     		ldr	r2, .L145
 2417 0138 0021     		mov	r1, #0
 2418 013a D154     		strb	r1, [r2, r3]
 2419              	.L143:
1904:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1905:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #endif /* (0u != CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK) */
1906:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1907:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1908:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
1909:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         return (position);
 2420              		.loc 1 1909 0
 2421 013c 3B1C     		mov	r3, r7
 2422 013e 0E33     		add	r3, r3, #14
 2423 0140 1B88     		ldrh	r3, [r3]
1910:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 2424              		.loc 1 1910 0
 2425 0142 181C     		mov	r0, r3
 2426 0144 BD46     		mov	sp, r7
 2427 0146 05B0     		add	sp, sp, #20
 2428              		@ sp needed
 2429 0148 90BD     		pop	{r4, r7, pc}
 2430              	.L146:
 2431 014a C046     		.align	2
 2432              	.L145:
 2433 014c 10000000 		.word	CapSense_posFiltersData
 2434 0150 0C000000 		.word	CapSense_posFiltersMask
 2435 0154 00000000 		.word	CapSense_fingerThreshold
 2436 0158 00000000 		.word	CapSense_noiseThreshold
 2437              		.cfi_endproc
 2438              	.LFE62:
 2439              		.size	CapSense_GetCentroidPos, .-CapSense_GetCentroidPos
 2440              		.section	.text.CapSense_GetRadialCentroidPos,"ax",%progbits
 2441              		.align	2
 2442              		.global	CapSense_GetRadialCentroidPos
 2443              		.code	16
 2444              		.thumb_func
 2445              		.type	CapSense_GetRadialCentroidPos, %function
 2446              	CapSense_GetRadialCentroidPos:
 2447              	.LFB63:
1911:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* ((CapSense_TOTAL_RADIAL_SLIDERS_COUNT > 0u) || (CapSense_TOTAL_LINEAR_SLIDERS_COUNT > 0u)
1912:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1913:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1914:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if((CapSense_TOTAL_RADIAL_SLIDERS_COUNT > 0u) || (CapSense_TOTAL_LINEAR_SLIDERS_COUNT > 0u))
1915:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
1916:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_GetRadialCentroidPos
1917:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\ccK6nYzE.s 			page 78


1918:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1919:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
1920:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Checks the CapSense_Signal[ ] array for a centroid within
1921:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  a slider specified range. The centroid position is calculated according to the resolution
1922:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  specified in the CapSense customizer. The position filters are applied to the
1923:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  result if enabled.
1924:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1925:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
1926:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  widget:  Widget number.
1927:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  For every radial slider widget there are defines in this format:
1928:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  #define CapSense_"widget_name"__RS           5
1929:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * 
1930:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
1931:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns a position value of the radial slider.
1932:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1933:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Global Variables:
1934:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None.
1935:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
1936:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
1937:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  If any sensor within the slider widget is active, the function returns values
1938:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  from zero to the API resolution value set in the CapSense customizer. If no
1939:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  sensors are active, the function returns 0xFFFF.
1940:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  There are no checks of the widget type argument provided to this function.
1941:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  The unproper widget type provided will cause unexpected position calculations.
1942:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1943:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Note:
1944:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  If noise counts on the slider segments are greater than the noise
1945:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  threshold, this subroutine may generate a false centroid result. The noise
1946:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  threshold should be set carefully (high enough above the noise level) so 
1947:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  that noise will not generate a false centroid.
1948:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1949:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
1950:.\Generated_Source\PSoC4/CapSense_CSHL.c ****      uint16 CapSense_GetRadialCentroidPos(uint32 widget)
1951:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 2448              		.loc 1 1951 0
 2449              		.cfi_startproc
 2450 0000 90B5     		push	{r4, r7, lr}
 2451              		.cfi_def_cfa_offset 12
 2452              		.cfi_offset 4, -12
 2453              		.cfi_offset 7, -8
 2454              		.cfi_offset 14, -4
 2455 0002 87B0     		sub	sp, sp, #28
 2456              		.cfi_def_cfa_offset 40
 2457 0004 02AF     		add	r7, sp, #8
 2458              		.cfi_def_cfa 7, 32
 2459 0006 7860     		str	r0, [r7, #4]
1952:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (0u != CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)
1953:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 posIndex;
1954:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 firstTimeIndex = CapSense_posFiltersData[widget];
1955:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 posFiltersMask = CapSense_posFiltersMask[widget]; 
1956:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (0u != CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK) */
1957:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1958:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if ((0u != (CapSense_MEDIAN_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)) || \
1959:.\Generated_Source\PSoC4/CapSense_CSHL.c ****              (0u != (CapSense_AVERAGING_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)))
1960:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 tempPos;
1961:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* ((0u != (CapSense_MEDIAN_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)) || \
1962:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                *   (0u != (CapSense_AVERAGING_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)))
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\ccK6nYzE.s 			page 79


1963:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                */
1964:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1965:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 maximum;
1966:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint16 position;
1967:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 offset = CapSense_rawDataIndex[widget];
 2460              		.loc 1 1967 0
 2461 0008 3B1C     		mov	r3, r7
 2462 000a 0D33     		add	r3, r3, #13
 2463 000c 0022     		mov	r2, #0
 2464 000e 1A70     		strb	r2, [r3]
1968:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 count = CapSense_numberOfSensors[widget];
 2465              		.loc 1 1968 0
 2466 0010 3B1C     		mov	r3, r7
 2467 0012 0C33     		add	r3, r3, #12
 2468 0014 0522     		mov	r2, #5
 2469 0016 1A70     		strb	r2, [r3]
1969:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1970:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		/* Find Maximum within centroid */      
1971:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		#if (CapSense_IS_DIPLEX_SLIDER)        
1972:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			maximum = CapSense_FindMaximum(offset, count, (uint8)CapSense_fingerThreshold[widget], 0u);
1973:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		#else
1974:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			maximum = CapSense_FindMaximum(offset, count, (uint8)CapSense_fingerThreshold[widget]);
 2470              		.loc 1 1974 0
 2471 0018 1D4A     		ldr	r2, .L151
 2472 001a 7B68     		ldr	r3, [r7, #4]
 2473 001c D318     		add	r3, r2, r3
 2474 001e 1B78     		ldrb	r3, [r3]
 2475 0020 3C1C     		mov	r4, r7
 2476 0022 0B34     		add	r4, r4, #11
 2477 0024 3A1C     		mov	r2, r7
 2478 0026 0D32     		add	r2, r2, #13
 2479 0028 1178     		ldrb	r1, [r2]
 2480 002a 3A1C     		mov	r2, r7
 2481 002c 0C32     		add	r2, r2, #12
 2482 002e 1278     		ldrb	r2, [r2]
 2483 0030 081C     		mov	r0, r1
 2484 0032 111C     		mov	r1, r2
 2485 0034 1A1C     		mov	r2, r3
 2486 0036 FFF7FEFF 		bl	CapSense_FindMaximum
 2487 003a 031C     		mov	r3, r0
 2488 003c 2370     		strb	r3, [r4]
1975:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		#endif /* (CapSense_IS_DIPLEX_SLIDER) */
1976:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
1977:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if (maximum != CapSense_MAXIMUM_CENTROID)
 2489              		.loc 1 1977 0
 2490 003e 3B1C     		mov	r3, r7
 2491 0040 0B33     		add	r3, r3, #11
 2492 0042 1B78     		ldrb	r3, [r3]
 2493 0044 FF2B     		cmp	r3, #255
 2494 0046 17D0     		beq	.L148
1978:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1979:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Calculate centroid */
1980:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             position = (uint16) CapSense_CalcCentroid(maximum, 
 2495              		.loc 1 1980 0
 2496 0048 FE23     		mov	r3, #254
 2497 004a 5B01     		lsl	r3, r3, #5
 2498 004c 1149     		ldr	r1, .L151+4
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\ccK6nYzE.s 			page 80


 2499 004e 7A68     		ldr	r2, [r7, #4]
 2500 0050 8A18     		add	r2, r1, r2
 2501 0052 1478     		ldrb	r4, [r2]
 2502 0054 3A1C     		mov	r2, r7
 2503 0056 0B32     		add	r2, r2, #11
 2504 0058 1078     		ldrb	r0, [r2]
 2505 005a 3A1C     		mov	r2, r7
 2506 005c 0D32     		add	r2, r2, #13
 2507 005e 1178     		ldrb	r1, [r2]
 2508 0060 3A1C     		mov	r2, r7
 2509 0062 0C32     		add	r2, r2, #12
 2510 0064 1278     		ldrb	r2, [r2]
 2511 0066 0094     		str	r4, [sp]
 2512 0068 FFF7FEFF 		bl	CapSense_CalcCentroid
 2513 006c 031C     		mov	r3, r0
 2514 006e 1A1C     		mov	r2, r3
 2515 0070 3B1C     		mov	r3, r7
 2516 0072 0E33     		add	r3, r3, #14
 2517 0074 1A80     		strh	r2, [r3]
 2518 0076 04E0     		b	.L149
 2519              	.L148:
1981:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                          offset, count, CapSense_centroidMult[widget], CapSense_noiseThreshold[widg
1982:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1983:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #if (0u != CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)
1984:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Check if this Radial slider has enabled filters */
1985:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 if (0u != (posFiltersMask & CapSense_ANY_POS_FILTER))
1986:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1987:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     /* Calculate position to store filters data */
1988:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     posIndex  = firstTimeIndex + 1u;
1989:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     
1990:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     if (0u == CapSense_posFiltersData[firstTimeIndex])
1991:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1992:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         /* Init filters */
1993:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         CapSense_posFiltersData[posIndex] = (uint8) position;
1994:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if ((0u != (CapSense_MEDIAN_FILTER & \
1995:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                      CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)) || \
1996:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                              (0u != (CapSense_AVERAGING_FILTER & \
1997:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                      CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)))
1998:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1999:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             if ( (0u != (posFiltersMask & CapSense_MEDIAN_FILTER))  || 
2000:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                  (0u != (posFiltersMask & CapSense_AVERAGING_FILTER)) )
2001:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
2002:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex + 1u] = (uint8) position;
2003:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
2004:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* ((0u != (CapSense_MEDIAN_FILTER & \
2005:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                *           CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)) || \
2006:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                *   (0u != (CapSense_AVERAGING_FILTER & \
2007:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                *           CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)))
2008:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
2009:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         
2010:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         CapSense_posFiltersData[firstTimeIndex] = 1u;
2011:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
2012:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     else
2013:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
2014:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         /* Do filtering */
2015:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (0u != (CapSense_MEDIAN_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MA
2016:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_MEDIAN_FILTER))
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\ccK6nYzE.s 			page 81


2017:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
2018:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 tempPos = (uint8) position;
2019:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_MedianFilter(position,
2020:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                         CapSense_posFiltersData[pos
2021:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                         CapSense_posFiltersData[pos
2022:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex + 1u] = 
2023:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                               CapSense_posFiltersDa
2024:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = tempPos;
2025:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
2026:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_MEDIAN_FILTER & 
2027:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                *          CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK))
2028:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
2029:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2030:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (0u != (CapSense_AVERAGING_FILTER & \
2031:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK))
2032:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_AVERAGING_FILTER))
2033:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
2034:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 tempPos = (uint8) position;
2035:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_AveragingFilter(position, 
2036:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                        CapSense_posFiltersData[posI
2037:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                        CapSense_posFiltersData[posI
2038:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex+1u]= CapSense_posFiltersData[posIn
2039:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = tempPos;
2040:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
2041:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_AVERAGING_FILTER & \
2042:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                *          CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK))
2043:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
2044:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2045:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (0u != (CapSense_IIR2_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK
2046:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_IIR2_FILTER))
2047:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
2048:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_IIR2Filter(position,
2049:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                     (uint16)CapSense_posFiltersData
2050:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = (uint8) position;
2051:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
2052:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_IIR2_FILTER & 
2053:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                *          CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK))
2054:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
2055:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2056:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (0u != (CapSense_IIR4_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK
2057:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_IIR4_FILTER))
2058:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
2059:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_IIR4Filter(position,
2060:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                     (uint16)CapSense_posFiltersData
2061:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = (uint8) position;
2062:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
2063:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_IIR4_FILTER & 
2064:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                *          CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK))
2065:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
2066:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2067:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (0u != (CapSense_JITTER_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MA
2068:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_JITTER_FILTER))
2069:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
2070:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_JitterFilter(position, 
2071:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                          CapSense_posFiltersData[po
2072:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = (uint8) position;
2073:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\ccK6nYzE.s 			page 82


2074:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_JITTER_FILTER &
2075:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                *           CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK))
2076:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
2077:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
2078:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
2079:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #endif /* (0u != CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK) */
2080:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2081:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
2082:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         else
2083:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
2084:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Maximum was not found */
2085:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             position = 0xFFFFu;
 2520              		.loc 1 2085 0
 2521 0078 3B1C     		mov	r3, r7
 2522 007a 0E33     		add	r3, r3, #14
 2523 007c 0122     		mov	r2, #1
 2524 007e 5242     		neg	r2, r2
 2525 0080 1A80     		strh	r2, [r3]
 2526              	.L149:
2086:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2087:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #if (0u != CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)
2088:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Reset filters */
2089:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 if((posFiltersMask & CapSense_ANY_POS_FILTER) != 0u)
2090:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
2091:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_posFiltersData[firstTimeIndex] = 0u;
2092:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
2093:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #endif /* (0u != CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK) */
2094:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
2095:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
2096:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         return (position);
 2527              		.loc 1 2096 0
 2528 0082 3B1C     		mov	r3, r7
 2529 0084 0E33     		add	r3, r3, #14
 2530 0086 1B88     		ldrh	r3, [r3]
2097:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 2531              		.loc 1 2097 0
 2532 0088 181C     		mov	r0, r3
 2533 008a BD46     		mov	sp, r7
 2534 008c 05B0     		add	sp, sp, #20
 2535              		@ sp needed
 2536 008e 90BD     		pop	{r4, r7, pc}
 2537              	.L152:
 2538              		.align	2
 2539              	.L151:
 2540 0090 00000000 		.word	CapSense_fingerThreshold
 2541 0094 00000000 		.word	CapSense_noiseThreshold
 2542              		.cfi_endproc
 2543              	.LFE63:
 2544              		.size	CapSense_GetRadialCentroidPos, .-CapSense_GetRadialCentroidPos
 2545              		.section	.text.CapSense_MedianFilter,"ax",%progbits
 2546              		.align	2
 2547              		.global	CapSense_MedianFilter
 2548              		.code	16
 2549              		.thumb_func
 2550              		.type	CapSense_MedianFilter, %function
 2551              	CapSense_MedianFilter:
 2552              	.LFB64:
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\ccK6nYzE.s 			page 83


2098:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* ((CapSense_TOTAL_RADIAL_SLIDERS_COUNT > 0u) || (CapSense_TOTAL_LINEAR_SLIDERS_COUNT > 0u)
2099:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2100:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2101:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if(CapSense_TOTAL_TOUCH_PADS_BASIC_COUNT > 0u)
2102:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2103:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_GetTouchCentroidPos
2104:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2105:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2106:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2107:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  If a finger is present on a touchpad, this function calculates the X and Y
2108:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  position of the finger by calculating the centroids within touchpad specified
2109:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  range. The X and Y positions are calculated according to the API resolutions set in the
2110:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense customizer. Returns 1 if a finger is on the touchpad.
2111:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  The position filter is applied to the result if enabled.
2112:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This function is available only if a touch pad is defined by the CapSense
2113:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  customizer.
2114:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2115:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2116:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  widget:  Widget number. 
2117:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  For every touchpad widget there are defines in this format:
2118:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  #define CapSense_"widget_name"__TP            5
2119:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2120:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  pos:     Pointer to the array of two uint16 elements, where result
2121:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  result of calculation of X and Y position are stored.
2122:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  pos[0u]  - position of X
2123:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  pos[1u]  - position of Y
2124:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2125:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2126:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns a 1 if a finger is on the touch pad, 0 - if not.
2127:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
2128:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Global Variables:
2129:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None.
2130:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
2131:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
2132:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *   There are no checks of the widget type argument provided to this function.
2133:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *   The unproper widget type provided will cause unexpected position
2134:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *   calculations.
2135:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2136:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2137:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 CapSense_GetTouchCentroidPos(uint32 widget, uint16* pos)
2138:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
2139:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (0u != CapSense_TOUCH_PADS_POS_FILTERS_MASK)
2140:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 posXIndex;
2141:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 posYIndex;
2142:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 firstTimeIndex = CapSense_posFiltersData[widget];
2143:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 posFiltersMask = CapSense_posFiltersMask[widget];
2144:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (0u != CapSense_TOUCH_PADS_POS_FILTERS_MASK) */
2145:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2146:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if ((0u != (CapSense_MEDIAN_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MASK)) || \
2147:.\Generated_Source\PSoC4/CapSense_CSHL.c ****              (0u != (CapSense_AVERAGING_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MASK)))
2148:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint16 tempPos;
2149:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* ((0u != (CapSense_MEDIAN_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MASK)) || \
2150:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                *   (0u != (CapSense_AVERAGING_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MASK)))
2151:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                */
2152:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2153:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 MaxX;
2154:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 MaxY;
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\ccK6nYzE.s 			page 84


2155:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 posX;
2156:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 posY;
2157:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint32 touch = 0u;
2158:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 offset = CapSense_rawDataIndex[widget];
2159:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 count = CapSense_numberOfSensors[widget];
2160:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
2161:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Find Maximum within X centroid */
2162:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)
2163:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             MaxX = CapSense_FindMaximum(offset, count, CapSense_fingerThreshold[widget], 0u);
2164:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #else
2165:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             MaxX = CapSense_FindMaximum(offset, count, CapSense_fingerThreshold[widget]);
2166:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_IS_DIPLEX_SLIDER) */
2167:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2168:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if (MaxX != CapSense_MAXIMUM_CENTROID)
2169:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
2170:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             offset = CapSense_rawDataIndex[widget + 1u];
2171:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             count = CapSense_numberOfSensors[widget + 1u];
2172:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2173:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Find Maximum within Y centroid */
2174:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #if (CapSense_IS_DIPLEX_SLIDER)
2175:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 MaxY = CapSense_FindMaximum(offset, count, CapSense_fingerThreshold[widget + 1u], 0
2176:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #else
2177:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 MaxY = CapSense_FindMaximum(offset, count, CapSense_fingerThreshold[widget + 1u]);
2178:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #endif /* (CapSense_IS_DIPLEX_SLIDER) */
2179:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2180:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             if (MaxY != CapSense_MAXIMUM_CENTROID)
2181:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
2182:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* X and Y maximums are found = true touch */
2183:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 touch = 1u;
2184:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 
2185:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Calculate Y centroid */
2186:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 posY = CapSense_CalcCentroid(MaxY, offset, count, 
2187:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             CapSense_centroidMult[widget + 1u], CapSense_noiseThreshold[widget + 1u
2188:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 
2189:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Calculate X centroid */
2190:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 offset = CapSense_rawDataIndex[widget];
2191:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 count = CapSense_numberOfSensors[widget];
2192:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 
2193:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 posX = CapSense_CalcCentroid(MaxX, offset, count, 
2194:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             CapSense_centroidMult[widget],CapSense_noiseThreshold[widget]);
2195:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
2196:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 #if (0u != CapSense_TOUCH_PADS_POS_FILTERS_MASK)
2197:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     /* Check if this TP has enabled filters */
2198:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     if (0u != (posFiltersMask & CapSense_ANY_POS_FILTER))
2199:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
2200:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         /* Calculate position to store filters data */
2201:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         posXIndex  = firstTimeIndex + 1u;
2202:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         posYIndex  = CapSense_posFiltersData[widget + 1u];
2203:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         
2204:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         if (0u == CapSense_posFiltersData[firstTimeIndex])
2205:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         {
2206:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             /* Init filters */
2207:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             CapSense_posFiltersData[posXIndex] = posX;
2208:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             CapSense_posFiltersData[posYIndex] = posY;
2209:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2210:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             #if((0u != (CapSense_MEDIAN_FILTER & \
2211:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                         CapSense_TOUCH_PADS_POS_FILTERS_MASK))|| \
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\ccK6nYzE.s 			page 85


2212:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 (0u != (CapSense_AVERAGING_FILTER & \
2213:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                         CapSense_TOUCH_PADS_POS_FILTERS_MASK)))
2214:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2215:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 if ( (0u != (posFiltersMask & CapSense_MEDIAN_FILTER)) || 
2216:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                      (0u != (posFiltersMask & CapSense_AVERAGING_FILTER)) )
2217:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 {
2218:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posXIndex + 1u] = posX;
2219:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posYIndex + 1u] = posY;
2220:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 }
2221:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             #endif /* ((0u != (CapSense_MEDIAN_FILTER & \
2222:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                    *           CapSense_TOUCH_PADS_POS_FILTERS_MASK)) || \
2223:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                    *    (0u != (CapSense_AVERAGING_FILTER & \
2224:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                    *            CapSense_TOUCH_PADS_POS_FILTERS_MASK)))
2225:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                    */
2226:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             
2227:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             CapSense_posFiltersData[firstTimeIndex] = 1u;
2228:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         }
2229:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         else
2230:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         {
2231:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             /* Do filtering */
2232:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             #if (0u != (CapSense_MEDIAN_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MA
2233:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 if (0u != (posFiltersMask & CapSense_MEDIAN_FILTER))
2234:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 {
2235:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     tempPos = posX;
2236:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     posX = (uint8) CapSense_MedianFilter(posX,
2237:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                       CapSense_posFiltersData[posXI
2238:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                       CapSense_posFiltersData[posXI
2239:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posXIndex + 1u] = 
2240:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                              CapSense_posFiltersDat
2241:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posXIndex] = tempPos;
2242:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     
2243:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     tempPos = posY;
2244:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     posY = (uint8) CapSense_MedianFilter(posY,
2245:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                        CapSense_posFiltersData[posY
2246:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                        CapSense_posFiltersData[posY
2247:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posYIndex + 1u] = 
2248:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                              CapSense_posFiltersDat
2249:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posYIndex] = tempPos;
2250:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 }
2251:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 
2252:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             #endif /* (0u != (CapSense_MEDIAN_FILTER & \
2253:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                    *          CapSense_TOUCH_PADS_POS_FILTERS_MASK))
2254:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                    */
2255:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2256:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             #if(0u !=(CapSense_AVERAGING_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_M
2257:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 if (0u != (posFiltersMask & CapSense_AVERAGING_FILTER))
2258:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 {
2259:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     tempPos = posX;
2260:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     posX = (uint8) CapSense_AveragingFilter(posX,
2261:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                        CapSense_posFiltersData[posX
2262:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                        CapSense_posFiltersData[posX
2263:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posXIndex + 1u] = 
2264:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                              CapSense_posFiltersDat
2265:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posXIndex] = tempPos;
2266:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     
2267:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     tempPos = posY;
2268:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     posY = (uint8) CapSense_AveragingFilter(posY, 
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\ccK6nYzE.s 			page 86


2269:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                       CapSense_posFiltersData[posYI
2270:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                       CapSense_posFiltersData[posYI
2271:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posYIndex + 1u] = 
2272:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                             CapSense_posFiltersData
2273:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posYIndex] = tempPos;
2274:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 }
2275:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2276:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             #endif /* (0u != (CapSense_AVERAGING_FILTER & \
2277:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                    *           CapSense_TOUCH_PADS_POS_FILTERS_MASK))
2278:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                    */
2279:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2280:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             #if (0u != (CapSense_IIR2_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MASK
2281:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 if (0u != (posFiltersMask & CapSense_IIR2_FILTER))
2282:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 {
2283:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     posX = (uint8) CapSense_IIR2Filter(posX, 
2284:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                            CapSense_posFiltersData[
2285:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posXIndex] = posX;
2286:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     
2287:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     posY = (uint8) CapSense_IIR2Filter(posY, 
2288:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                             CapSense_posFiltersData
2289:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posYIndex] = posY;
2290:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 }
2291:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 
2292:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             #endif /* (0u != (CapSense_IIR2_FILTER & \
2293:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                    *          CapSense_TOUCH_PADS_POS_FILTERS_MASK))
2294:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                    */
2295:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2296:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             #if (0u != (CapSense_IIR4_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MASK
2297:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 if (0u != (posFiltersMask & CapSense_IIR4_FILTER))
2298:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 {
2299:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     posX = (uint8) CapSense_IIR4Filter((uint16)posX,
2300:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                     (uint16)CapSense_posFiltersData
2301:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posXIndex] = posX;
2302:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2303:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     posY = (uint8) CapSense_IIR4Filter((uint16)posY,
2304:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                     (uint16)CapSense_posFiltersData
2305:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posYIndex] = posY;
2306:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 }
2307:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 
2308:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             #endif /* (0u != (CapSense_IIR4_FILTER & \
2309:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                    *           CapSense_TOUCH_PADS_POS_FILTERS_MASK))
2310:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                    */
2311:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2312:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             #if (0u != (CapSense_JITTER_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MA
2313:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 if (0u != (posFiltersMask & CapSense_JITTER_FILTER))
2314:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     {
2315:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                         posX = (uint8) CapSense_JitterFilter(posX, 
2316:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                             CapSense_posFiltersData
2317:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                         CapSense_posFiltersData[posXIndex] = posX;
2318:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                         
2319:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                         posY = (uint8) CapSense_JitterFilter(posY, 
2320:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                             CapSense_posFiltersData
2321:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                         CapSense_posFiltersData[posYIndex] = posY;
2322:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     }
2323:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             #endif /* (0u != (CapSense_JITTER_FILTER & \
2324:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                    *           CapSense_TOUCH_PADS_POS_FILTERS_MASK))
2325:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                    */
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\ccK6nYzE.s 			page 87


2326:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         }
2327:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
2328:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 #endif /* (0u != CapSense_TOUCH_PADS_POS_FILTERS_MASK) */
2329:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2330:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Save positions */
2331:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 pos[0u] = posX;
2332:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 pos[1u] = posY;
2333:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
2334:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
2335:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2336:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (0u != CapSense_TOUCH_PADS_POS_FILTERS_MASK)
2337:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             if(touch == 0u)
2338:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
2339:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Reset filters */
2340:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 if ((posFiltersMask & CapSense_ANY_POS_FILTER) != 0u)
2341:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
2342:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_posFiltersData[firstTimeIndex] = 0u;
2343:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
2344:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
2345:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (0u != CapSense_TOUCH_PADS_POS_FILTERS_MASK) */
2346:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
2347:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         return (touch);
2348:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
2349:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (CapSense_TOTAL_TOUCH_PADS_BASIC_COUNT > 0u) */
2350:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2351:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2352:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER)) || \
2353:.\Generated_Source\PSoC4/CapSense_CSHL.c ****       (0u != (CapSense_POS_FILTERS_MASK & CapSense_MEDIAN_FILTER)) || \
2354:.\Generated_Source\PSoC4/CapSense_CSHL.c ****       ((CapSense_TUNING_METHOD == CapSense__TUNING_AUTO)) )
2355:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2356:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_MedianFilter
2357:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2358:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2359:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2360:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This is the Median filter function. 
2361:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  The median filter looks at the three most recent samples and reports the 
2362:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  median value.
2363:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2364:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2365:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x1:  Current value.
2366:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x2:  Previous value.
2367:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x3:  Before previous value.
2368:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2369:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2370:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns filtered value.
2371:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
2372:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Global Variables:
2373:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None.
2374:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
2375:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Side Effects:
2376:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
2377:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* 
2378:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2379:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_MedianFilter(uint16 x1, uint16 x2, uint16 x3)
2380:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 2553              		.loc 1 2380 0
 2554              		.cfi_startproc
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\ccK6nYzE.s 			page 88


 2555 0000 80B5     		push	{r7, lr}
 2556              		.cfi_def_cfa_offset 8
 2557              		.cfi_offset 7, -8
 2558              		.cfi_offset 14, -4
 2559 0002 84B0     		sub	sp, sp, #16
 2560              		.cfi_def_cfa_offset 24
 2561 0004 00AF     		add	r7, sp, #0
 2562              		.cfi_def_cfa_register 7
 2563 0006 BB1D     		add	r3, r7, #6
 2564 0008 1880     		strh	r0, [r3]
 2565 000a 3B1D     		add	r3, r7, #4
 2566 000c 1980     		strh	r1, [r3]
 2567 000e BB1C     		add	r3, r7, #2
 2568 0010 1A80     		strh	r2, [r3]
2381:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint16 tmp;
2382:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
2383:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if (x1 > x2)
 2569              		.loc 1 2383 0
 2570 0012 BA1D     		add	r2, r7, #6
 2571 0014 3B1D     		add	r3, r7, #4
 2572 0016 1288     		ldrh	r2, [r2]
 2573 0018 1B88     		ldrh	r3, [r3]
 2574 001a 9A42     		cmp	r2, r3
 2575 001c 0DD9     		bls	.L154
2384:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
2385:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             tmp = x2;
 2576              		.loc 1 2385 0
 2577 001e 3B1C     		mov	r3, r7
 2578 0020 0E33     		add	r3, r3, #14
 2579 0022 3A1D     		add	r2, r7, #4
 2580 0024 1288     		ldrh	r2, [r2]
 2581 0026 1A80     		strh	r2, [r3]
2386:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             x2 = x1;
 2582              		.loc 1 2386 0
 2583 0028 3B1D     		add	r3, r7, #4
 2584 002a BA1D     		add	r2, r7, #6
 2585 002c 1288     		ldrh	r2, [r2]
 2586 002e 1A80     		strh	r2, [r3]
2387:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             x1 = tmp;
 2587              		.loc 1 2387 0
 2588 0030 BB1D     		add	r3, r7, #6
 2589 0032 3A1C     		mov	r2, r7
 2590 0034 0E32     		add	r2, r2, #14
 2591 0036 1288     		ldrh	r2, [r2]
 2592 0038 1A80     		strh	r2, [r3]
 2593              	.L154:
2388:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
2389:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
2390:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if (x2 > x3)
 2594              		.loc 1 2390 0
 2595 003a 3A1D     		add	r2, r7, #4
 2596 003c BB1C     		add	r3, r7, #2
 2597 003e 1288     		ldrh	r2, [r2]
 2598 0040 1B88     		ldrh	r3, [r3]
 2599 0042 9A42     		cmp	r2, r3
 2600 0044 03D9     		bls	.L155
2391:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\ccK6nYzE.s 			page 89


2392:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             x2 = x3;
 2601              		.loc 1 2392 0
 2602 0046 3B1D     		add	r3, r7, #4
 2603 0048 BA1C     		add	r2, r7, #2
 2604 004a 1288     		ldrh	r2, [r2]
 2605 004c 1A80     		strh	r2, [r3]
 2606              	.L155:
2393:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
2394:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
2395:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         return ((x1 > x2) ? x1 : x2);
 2607              		.loc 1 2395 0
 2608 004e 3B1D     		add	r3, r7, #4
 2609 0050 BA1D     		add	r2, r7, #6
 2610 0052 1288     		ldrh	r2, [r2]
 2611 0054 1B88     		ldrh	r3, [r3]
 2612 0056 98B2     		uxth	r0, r3
 2613 0058 91B2     		uxth	r1, r2
 2614 005a 8842     		cmp	r0, r1
 2615 005c 00D2     		bcs	.L156
 2616 005e 131C     		add	r3, r2, #0
 2617              	.L156:
 2618 0060 9BB2     		uxth	r3, r3
2396:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 2619              		.loc 1 2396 0
 2620 0062 181C     		mov	r0, r3
 2621 0064 BD46     		mov	sp, r7
 2622 0066 04B0     		add	sp, sp, #16
 2623              		@ sp needed
 2624 0068 80BD     		pop	{r7, pc}
 2625              		.cfi_endproc
 2626              	.LFE64:
 2627              		.size	CapSense_MedianFilter, .-CapSense_MedianFilter
 2628 006a C046     		.section	.text.CapSense_IIR4Filter,"ax",%progbits
 2629              		.align	2
 2630              		.global	CapSense_IIR4Filter
 2631              		.code	16
 2632              		.thumb_func
 2633              		.type	CapSense_IIR4Filter, %function
 2634              	CapSense_IIR4Filter:
 2635              	.LFB65:
2397:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER)) || \
2398:.\Generated_Source\PSoC4/CapSense_CSHL.c ****       (0u != (CapSense_POS_FILTERS_MASK & CapSense_MEDIAN_FILTER)) || \
2399:.\Generated_Source\PSoC4/CapSense_CSHL.c ****       ((CapSense_TUNING_METHOD == CapSense__TUNING_AUTO)) ) */
2400:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2401:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2402:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_AVERAGING_FILTER)) || \
2403:.\Generated_Source\PSoC4/CapSense_CSHL.c ****       (0u != (CapSense_POS_FILTERS_MASK & CapSense_AVERAGING_FILTER)) )
2404:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2405:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_AveragingFilter
2406:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2407:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2408:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2409:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This is the Averaging filter function.
2410:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  The averaging filter looks at the three most recent samples of a position and
2411:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  reports the averaging value.
2412:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2413:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\ccK6nYzE.s 			page 90


2414:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x1:  Current value.
2415:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x2:  Previous value.
2416:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x3:  Before previous value.
2417:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2418:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2419:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns filtered value.
2420:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
2421:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Global Variables:
2422:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None.
2423:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
2424:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Side Effects:
2425:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
2426:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* 
2427:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2428:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_AveragingFilter(uint16 x1, uint16 x2, uint16 x3)
2429:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
2430:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint32 tmp = ((uint32)x1 + (uint32)x2 + (uint32)x3) / 3u;
2431:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
2432:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         return ((uint16) tmp);
2433:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
2434:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_AVERAGING_FILTER) || \
2435:.\Generated_Source\PSoC4/CapSense_CSHL.c ****       (0u != (CapSense_POS_FILTERS_MASK & CapSense_AVERAGING_FILTER) ) */
2436:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2437:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2438:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR2_FILTER)) || \
2439:.\Generated_Source\PSoC4/CapSense_CSHL.c ****       (0u != (CapSense_POS_FILTERS_MASK & CapSense_IIR2_FILTER)) )
2440:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2441:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_IIR2Filter
2442:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2443:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2444:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2445:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This is the IIR1/2 filter function. IIR1/2 = 1/2current + 1/2previous.
2446:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2447:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2448:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x1:  Current value.
2449:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x2:  Previous value.
2450:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2451:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2452:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns filtered value.
2453:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
2454:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Global Variables:
2455:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None.
2456:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
2457:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Side Effects:
2458:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
2459:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* 
2460:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2461:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_IIR2Filter(uint16 x1, uint16 x2)
2462:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
2463:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint32 tmp;
2464:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
2465:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* IIR = 1/2 Current Value+ 1/2 Previous Value */
2466:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp = (uint32)x1 + (uint32)x2;
2467:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp >>= 1u;
2468:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
2469:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         return ((uint16) tmp);
2470:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\ccK6nYzE.s 			page 91


2471:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR2_FILTER)) || \
2472:.\Generated_Source\PSoC4/CapSense_CSHL.c ****        *    (0u != (CapSense_POS_FILTERS_MASK & CapSense_IIR2_FILTER)) )
2473:.\Generated_Source\PSoC4/CapSense_CSHL.c ****        */
2474:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2475:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2476:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR4_FILTER)) || \
2477:.\Generated_Source\PSoC4/CapSense_CSHL.c ****       (0u != (CapSense_POS_FILTERS_MASK & CapSense_IIR4_FILTER)) )
2478:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2479:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_IIR4Filter
2480:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2481:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2482:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2483:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This is the IIR1/4 filter function. IIR1/4 = 1/4current + 3/4previous.
2484:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2485:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2486:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x1:  Current value.
2487:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x2:  Previous value.
2488:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2489:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2490:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns a filtered value.
2491:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
2492:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Global Variables:
2493:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None.
2494:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
2495:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Side Effects:
2496:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
2497:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* 
2498:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2499:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_IIR4Filter(uint16 x1, uint16 x2)
2500:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 2636              		.loc 1 2500 0
 2637              		.cfi_startproc
 2638 0000 80B5     		push	{r7, lr}
 2639              		.cfi_def_cfa_offset 8
 2640              		.cfi_offset 7, -8
 2641              		.cfi_offset 14, -4
 2642 0002 84B0     		sub	sp, sp, #16
 2643              		.cfi_def_cfa_offset 24
 2644 0004 00AF     		add	r7, sp, #0
 2645              		.cfi_def_cfa_register 7
 2646 0006 0A1C     		mov	r2, r1
 2647 0008 BB1D     		add	r3, r7, #6
 2648 000a 011C     		add	r1, r0, #0
 2649 000c 1980     		strh	r1, [r3]
 2650 000e 3B1D     		add	r3, r7, #4
 2651 0010 1A80     		strh	r2, [r3]
2501:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint32 tmp;
2502:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
2503:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* IIR = 1/4 Current Value + 3/4 Previous Value */
2504:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp = (uint32)x1 + (uint32)x2;
 2652              		.loc 1 2504 0
 2653 0012 BB1D     		add	r3, r7, #6
 2654 0014 1A88     		ldrh	r2, [r3]
 2655 0016 3B1D     		add	r3, r7, #4
 2656 0018 1B88     		ldrh	r3, [r3]
 2657 001a D318     		add	r3, r2, r3
 2658 001c FB60     		str	r3, [r7, #12]
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\ccK6nYzE.s 			page 92


2505:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp += ((uint32)x2 << 1u);
 2659              		.loc 1 2505 0
 2660 001e 3B1D     		add	r3, r7, #4
 2661 0020 1B88     		ldrh	r3, [r3]
 2662 0022 5B00     		lsl	r3, r3, #1
 2663 0024 FA68     		ldr	r2, [r7, #12]
 2664 0026 D318     		add	r3, r2, r3
 2665 0028 FB60     		str	r3, [r7, #12]
2506:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp >>= 2u;
 2666              		.loc 1 2506 0
 2667 002a FB68     		ldr	r3, [r7, #12]
 2668 002c 9B08     		lsr	r3, r3, #2
 2669 002e FB60     		str	r3, [r7, #12]
2507:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
2508:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         return ((uint16) tmp);
 2670              		.loc 1 2508 0
 2671 0030 FB68     		ldr	r3, [r7, #12]
 2672 0032 9BB2     		uxth	r3, r3
2509:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 2673              		.loc 1 2509 0
 2674 0034 181C     		mov	r0, r3
 2675 0036 BD46     		mov	sp, r7
 2676 0038 04B0     		add	sp, sp, #16
 2677              		@ sp needed
 2678 003a 80BD     		pop	{r7, pc}
 2679              		.cfi_endproc
 2680              	.LFE65:
 2681              		.size	CapSense_IIR4Filter, .-CapSense_IIR4Filter
 2682              		.section	.text.CapSense_GetWidgetNumber,"ax",%progbits
 2683              		.align	2
 2684              		.global	CapSense_GetWidgetNumber
 2685              		.code	16
 2686              		.thumb_func
 2687              		.type	CapSense_GetWidgetNumber, %function
 2688              	CapSense_GetWidgetNumber:
 2689              	.LFB66:
2510:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR4_FILTER)) || \
2511:.\Generated_Source\PSoC4/CapSense_CSHL.c ****        *    (0u != (CapSense_POS_FILTERS_MASK & CapSense_IIR4_FILTER)) )
2512:.\Generated_Source\PSoC4/CapSense_CSHL.c ****        */
2513:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2514:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2515:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_JITTER_FILTER)) || \
2516:.\Generated_Source\PSoC4/CapSense_CSHL.c ****       (0u != (CapSense_POS_FILTERS_MASK & CapSense_JITTER_FILTER)) || \
2517:.\Generated_Source\PSoC4/CapSense_CSHL.c ****       (0u != (CapSense_TRACKPAD_GEST_POS_FILTERS_MASK & CapSense_JITTER_FILTER)))  
2518:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2519:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: uint16 CapSense_JitterFilter
2520:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2521:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2522:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2523:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This is the Jitter filter function.
2524:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2525:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2526:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x1:  Current value.
2527:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x2:  Previous value.
2528:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2529:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2530:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns filtered value.
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\ccK6nYzE.s 			page 93


2531:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
2532:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Global Variables:
2533:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None.
2534:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
2535:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Side Effects:
2536:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
2537:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* 
2538:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2539:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_JitterFilter(uint16 x1, uint16 x2)
2540:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
2541:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if (x1 > x2)
2542:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
2543:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             x1--;
2544:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
2545:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         else
2546:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
2547:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             if (x1 < x2)
2548:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
2549:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 x1++;
2550:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
2551:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
2552:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
2553:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         return x1;
2554:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
2555:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_JITTER_FILTER)) || \
2556:.\Generated_Source\PSoC4/CapSense_CSHL.c ****        *    (0u != (CapSense_POS_FILTERS_MASK & CapSense_JITTER_FILTER)) )
2557:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	   *    (0u != (CapSense_TRACKPAD_GEST_POS_FILTERS_MASK & CapSense_JITTER_FILTER)) )
2558:.\Generated_Source\PSoC4/CapSense_CSHL.c ****        */
2559:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2560:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2561:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR8_FILTER))
2562:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2563:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_IIR8Filter
2564:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2565:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2566:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2567:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This is the IIR1/8 filter function. IIR1/8 = 1/8current + 7/8previous.
2568:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Only applies for raw data.
2569:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2570:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2571:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x1:  Current value.
2572:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x2:  Previous value.
2573:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2574:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2575:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns filtered value.
2576:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
2577:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Global Variables:
2578:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None.
2579:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
2580:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Side Effects:
2581:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
2582:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* 
2583:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2584:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_IIR8Filter(uint16 x1, uint16 x2)
2585:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
2586:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint32 tmp;
2587:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\ccK6nYzE.s 			page 94


2588:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* IIR = 1/8 Current Value + 7/8 Previous Value */
2589:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp = (uint32)x1;
2590:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp += (((uint32)x2 << 3u) - ((uint32)x2));
2591:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp >>= 3u;
2592:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
2593:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         return ((uint16) tmp);
2594:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
2595:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR8_FILTER)) */
2596:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2597:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2598:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR16_FILTER))
2599:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2600:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_IIR16Filter
2601:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2602:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2603:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2604:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This is the IIR1/16 filter function. IIR1/16 = 1/16current + 15/16previous.
2605:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Only applies for raw data.
2606:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2607:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2608:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x1:  Current value.
2609:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x2:  Previous value.
2610:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2611:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2612:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns filtered value.
2613:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
2614:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Global Variables:
2615:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None.
2616:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
2617:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Side Effects:
2618:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
2619:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* 
2620:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2621:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_IIR16Filter(uint16 x1, uint16 x2)
2622:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
2623:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint32 tmp;
2624:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
2625:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* IIR = 1/16 Current Value + 15/16 Previous Value */
2626:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp = (uint32)x1;
2627:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp += (((uint32)x2 << 4u) - ((uint32)x2));
2628:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp >>= 4u;
2629:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
2630:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         return ((uint16) tmp);
2631:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
2632:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (CapSense_RAW_FILTER_MASK & CapSense_IIR16_FILTER) */
2633:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2634:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2635:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if (0u != (CapSense_TOTAL_MATRIX_BUTTONS_COUNT))
2636:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2637:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2638:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_GetMatrixButtonPos
2639:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2640:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2641:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2642:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Function calculates and returns a touch position (column and row) for the matrix
2643:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  button widget.
2644:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\ccK6nYzE.s 			page 95


2645:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2646:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  widget:  widget number;
2647:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  pos:     pointer to an array of two uint8, where touch position will be 
2648:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *           stored:
2649:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *           pos[0] - column position;
2650:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *           pos[1] - raw position.
2651:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2652:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2653:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns 1 if row and column sensors of matrix button are active, 0 - in other
2654:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  cases.
2655:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
2656:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Global Variables:
2657:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  CapSense_fingerThreshold[ ] - used to store the finger threshold for all widgets.
2658:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  CapSense_sensorSignal[ ] - used to store a difference between the current value of 
2659:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  raw data and a previous value of the baseline.
2660:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
2661:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Side Effects:
2662:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
2663:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* 
2664:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2665:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 CapSense_GetMatrixButtonPos(uint32 widget, uint8* pos)
2666:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
2667:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 i;
2668:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint32 retVal = 0u;
2669:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint16 row_sig_max = 0u;
2670:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint16 col_sig_max = 0u;
2671:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 row_ind = 0u;
2672:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 col_ind = 0u;
2673:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2674:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if (CapSense_CheckIsWidgetActive(widget) == 1u)
2675:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
2676:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Find row number with maximal signal value */
2677:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             for(i = CapSense_rawDataIndex[widget]; i < (CapSense_rawDataIndex[widget] + \
2678:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                  CapSense_numberOfSensors[widget]); i++)
2679:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
2680:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 if (CapSense_sensorSignal[i] > col_sig_max)
2681:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
2682:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     col_ind = i;
2683:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     col_sig_max = CapSense_sensorSignal[i];
2684:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
2685:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
2686:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2687:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Find row number with maximal signal value */
2688:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             for(i = CapSense_rawDataIndex[widget+1u]; i < (CapSense_rawDataIndex[widget+1u] + \
2689:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                  CapSense_numberOfSensors[widget+1u]); i++)
2690:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
2691:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 if (CapSense_sensorSignal[i] > row_sig_max)
2692:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
2693:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     row_ind = i;
2694:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     row_sig_max = CapSense_sensorSignal[i];
2695:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
2696:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
2697:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2698:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             if((col_sig_max >= CapSense_fingerThreshold[widget]) && \
2699:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                (row_sig_max >= CapSense_fingerThreshold[widget+1u]))
2700:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
2701:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 pos[0u] = col_ind - CapSense_rawDataIndex[widget];
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\ccK6nYzE.s 			page 96


2702:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 pos[1u] = row_ind - CapSense_rawDataIndex[widget+1u];
2703:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 retVal = 1u;
2704:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
2705:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
2706:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         return (retVal);
2707:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
2708:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2709:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (0u != (CapSense_TOTAL_MATRIX_BUTTONS_COUNT)) */
2710:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2711:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
2712:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_GetWidgetNumber
2713:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
2714:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
2715:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
2716:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns the widget number for the sensor.
2717:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
2718:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
2719:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor: sensor index. The value of index can be 
2720:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  from 0 to (CapSense_TOTAL_SENSOR_COUNT-1).
2721:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
2722:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
2723:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns the widget number for the sensor. 
2724:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
2725:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
2726:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_widgetNumber[]  - stores widget numbers.
2727:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * 
2728:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
2729:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
2730:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
2731:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
2732:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint32 CapSense_GetWidgetNumber(uint32 sensor)
2733:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 2690              		.loc 1 2733 0
 2691              		.cfi_startproc
 2692 0000 80B5     		push	{r7, lr}
 2693              		.cfi_def_cfa_offset 8
 2694              		.cfi_offset 7, -8
 2695              		.cfi_offset 14, -4
 2696 0002 82B0     		sub	sp, sp, #8
 2697              		.cfi_def_cfa_offset 16
 2698 0004 00AF     		add	r7, sp, #0
 2699              		.cfi_def_cfa_register 7
 2700 0006 7860     		str	r0, [r7, #4]
2734:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	return((uint32)CapSense_widgetNumber[sensor]);
 2701              		.loc 1 2734 0
 2702 0008 034A     		ldr	r2, .L162
 2703 000a 7B68     		ldr	r3, [r7, #4]
 2704 000c D318     		add	r3, r2, r3
 2705 000e 1B78     		ldrb	r3, [r3]
2735:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 2706              		.loc 1 2735 0
 2707 0010 181C     		mov	r0, r3
 2708 0012 BD46     		mov	sp, r7
 2709 0014 02B0     		add	sp, sp, #8
 2710              		@ sp needed
 2711 0016 80BD     		pop	{r7, pc}
 2712              	.L163:
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\ccK6nYzE.s 			page 97


 2713              		.align	2
 2714              	.L162:
 2715 0018 00000000 		.word	CapSense_widgetNumber
 2716              		.cfi_endproc
 2717              	.LFE66:
 2718              		.size	CapSense_GetWidgetNumber, .-CapSense_GetWidgetNumber
 2719              		.section	.text.CapSense_GetLowBaselineReset,"ax",%progbits
 2720              		.align	2
 2721              		.global	CapSense_GetLowBaselineReset
 2722              		.code	16
 2723              		.thumb_func
 2724              		.type	CapSense_GetLowBaselineReset, %function
 2725              	CapSense_GetLowBaselineReset:
 2726              	.LFB67:
2736:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2737:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
2738:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_GetLowBaselineReset
2739:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
2740:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
2741:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
2742:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns the low baseline reset threshold value for the  sensor.
2743:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
2744:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
2745:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor: sensor index. The value of index can be 
2746:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  from 0 to (CapSense_TOTAL_SENSOR_COUNT-1).
2747:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
2748:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
2749:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  low baseline reset threshold value a sensor.
2750:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
2751:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
2752:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_lowBaselineReset[]  - stores low baseline reset values.
2753:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * 
2754:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
2755:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
2756:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
2757:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
2758:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_GetLowBaselineReset(uint32 sensor)
2759:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 2727              		.loc 1 2759 0
 2728              		.cfi_startproc
 2729 0000 80B5     		push	{r7, lr}
 2730              		.cfi_def_cfa_offset 8
 2731              		.cfi_offset 7, -8
 2732              		.cfi_offset 14, -4
 2733 0002 82B0     		sub	sp, sp, #8
 2734              		.cfi_def_cfa_offset 16
 2735 0004 00AF     		add	r7, sp, #0
 2736              		.cfi_def_cfa_register 7
 2737 0006 7860     		str	r0, [r7, #4]
2760:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	return(CapSense_lowBaselineReset[sensor]);
 2738              		.loc 1 2760 0
 2739 0008 034A     		ldr	r2, .L166
 2740 000a 7B68     		ldr	r3, [r7, #4]
 2741 000c D318     		add	r3, r2, r3
 2742 000e 1B78     		ldrb	r3, [r3]
2761:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 2743              		.loc 1 2761 0
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\ccK6nYzE.s 			page 98


 2744 0010 181C     		mov	r0, r3
 2745 0012 BD46     		mov	sp, r7
 2746 0014 02B0     		add	sp, sp, #8
 2747              		@ sp needed
 2748 0016 80BD     		pop	{r7, pc}
 2749              	.L167:
 2750              		.align	2
 2751              	.L166:
 2752 0018 00000000 		.word	CapSense_lowBaselineReset
 2753              		.cfi_endproc
 2754              	.LFE67:
 2755              		.size	CapSense_GetLowBaselineReset, .-CapSense_GetLowBaselineReset
 2756              		.section	.text.CapSense_GetDebounce,"ax",%progbits
 2757              		.align	2
 2758              		.global	CapSense_GetDebounce
 2759              		.code	16
 2760              		.thumb_func
 2761              		.type	CapSense_GetDebounce, %function
 2762              	CapSense_GetDebounce:
 2763              	.LFB68:
2762:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2763:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
2764:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_GetDebounce
2765:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
2766:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
2767:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
2768:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns a debounce value.
2769:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
2770:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
2771:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor: sensor index. The value of index can be 
2772:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  from 0 to (CapSense_TOTAL_SENSOR_COUNT-1).
2773:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
2774:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
2775:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Debounce value 
2776:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
2777:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
2778:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_debounce[]  - stores the debounce value.
2779:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * 
2780:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
2781:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
2782:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
2783:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
2784:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_GetDebounce(uint32 widget)
2785:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 2764              		.loc 1 2785 0
 2765              		.cfi_startproc
 2766 0000 80B5     		push	{r7, lr}
 2767              		.cfi_def_cfa_offset 8
 2768              		.cfi_offset 7, -8
 2769              		.cfi_offset 14, -4
 2770 0002 82B0     		sub	sp, sp, #8
 2771              		.cfi_def_cfa_offset 16
 2772 0004 00AF     		add	r7, sp, #0
 2773              		.cfi_def_cfa_register 7
 2774 0006 7860     		str	r0, [r7, #4]
2786:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	return(CapSense_debounce[widget]);
 2775              		.loc 1 2786 0
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\ccK6nYzE.s 			page 99


 2776 0008 034A     		ldr	r2, .L170
 2777 000a 7B68     		ldr	r3, [r7, #4]
 2778 000c D318     		add	r3, r2, r3
 2779 000e 1B78     		ldrb	r3, [r3]
2787:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 2780              		.loc 1 2787 0
 2781 0010 181C     		mov	r0, r3
 2782 0012 BD46     		mov	sp, r7
 2783 0014 02B0     		add	sp, sp, #8
 2784              		@ sp needed
 2785 0016 80BD     		pop	{r7, pc}
 2786              	.L171:
 2787              		.align	2
 2788              	.L170:
 2789 0018 00000000 		.word	CapSense_debounce
 2790              		.cfi_endproc
 2791              	.LFE68:
 2792              		.size	CapSense_GetDebounce, .-CapSense_GetDebounce
 2793              		.section	.text.CapSense_EnableRawDataFilters,"ax",%progbits
 2794              		.align	2
 2795              		.global	CapSense_EnableRawDataFilters
 2796              		.code	16
 2797              		.thumb_func
 2798              		.type	CapSense_EnableRawDataFilters, %function
 2799              	CapSense_EnableRawDataFilters:
 2800              	.LFB69:
2788:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2789:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if (CapSense_RAW_FILTER_MASK != 0u)
2790:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	/*******************************************************************************
2791:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Function Name: CapSense_EnableRawDataFilters
2792:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	********************************************************************************
2793:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
2794:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Summary:
2795:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  Enables the rawdata filters for the sensor signals.
2796:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
2797:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Parameters:
2798:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
2799:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
2800:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Return:
2801:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
2802:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
2803:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Global Variables:
2804:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  CapSense_enableRawFilters defines if the filters are enabled or not.
2805:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
2806:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Side Effects:
2807:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
2808:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* 
2809:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*******************************************************************************/
2810:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	void CapSense_EnableRawDataFilters(void)
2811:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	{
 2801              		.loc 1 2811 0
 2802              		.cfi_startproc
 2803 0000 80B5     		push	{r7, lr}
 2804              		.cfi_def_cfa_offset 8
 2805              		.cfi_offset 7, -8
 2806              		.cfi_offset 14, -4
 2807 0002 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\ccK6nYzE.s 			page 100


 2808              		.cfi_def_cfa_register 7
2812:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		CapSense_enableRawFilters = CapSense_RAW_FILTERS_ENABLED;
 2809              		.loc 1 2812 0
 2810 0004 024B     		ldr	r3, .L173
 2811 0006 0122     		mov	r2, #1
 2812 0008 1A70     		strb	r2, [r3]
2813:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	}
 2813              		.loc 1 2813 0
 2814 000a BD46     		mov	sp, r7
 2815              		@ sp needed
 2816 000c 80BD     		pop	{r7, pc}
 2817              	.L174:
 2818 000e C046     		.align	2
 2819              	.L173:
 2820 0010 00000000 		.word	CapSense_enableRawFilters
 2821              		.cfi_endproc
 2822              	.LFE69:
 2823              		.size	CapSense_EnableRawDataFilters, .-CapSense_EnableRawDataFilters
 2824              		.section	.text.CapSense_DisableRawDataFilters,"ax",%progbits
 2825              		.align	2
 2826              		.global	CapSense_DisableRawDataFilters
 2827              		.code	16
 2828              		.thumb_func
 2829              		.type	CapSense_DisableRawDataFilters, %function
 2830              	CapSense_DisableRawDataFilters:
 2831              	.LFB70:
2814:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2815:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	/*******************************************************************************
2816:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Function Name: CapSense_DisableRawDataFilters
2817:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	********************************************************************************
2818:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
2819:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Summary:
2820:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  Disables the rawdata filters for the sensor signals.
2821:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
2822:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Parameters:
2823:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
2824:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
2825:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Return:
2826:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
2827:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
2828:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Global Variables:
2829:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  CapSense_enableRawFilters defines if the filters are enabled or not.
2830:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
2831:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Side Effects:
2832:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
2833:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* 
2834:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*******************************************************************************/
2835:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	void CapSense_DisableRawDataFilters(void)
2836:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	{
 2832              		.loc 1 2836 0
 2833              		.cfi_startproc
 2834 0000 80B5     		push	{r7, lr}
 2835              		.cfi_def_cfa_offset 8
 2836              		.cfi_offset 7, -8
 2837              		.cfi_offset 14, -4
 2838 0002 00AF     		add	r7, sp, #0
 2839              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\ccK6nYzE.s 			page 101


2837:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		CapSense_enableRawFilters = CapSense_RAW_FILTERS_DISABLED;
 2840              		.loc 1 2837 0
 2841 0004 024B     		ldr	r3, .L176
 2842 0006 0022     		mov	r2, #0
 2843 0008 1A70     		strb	r2, [r3]
2838:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	}
 2844              		.loc 1 2838 0
 2845 000a BD46     		mov	sp, r7
 2846              		@ sp needed
 2847 000c 80BD     		pop	{r7, pc}
 2848              	.L177:
 2849 000e C046     		.align	2
 2850              	.L176:
 2851 0010 00000000 		.word	CapSense_enableRawFilters
 2852              		.cfi_endproc
 2853              	.LFE70:
 2854              		.size	CapSense_DisableRawDataFilters, .-CapSense_DisableRawDataFilters
 2855              		.bss
 2856 001d 000000   		.align	2
 2857              	CapSense_debounceCounter.5350:
 2858 0020 00       		.space	1
 2859 0021 000000   		.align	2
 2860              	CapSense_centroid.5402:
 2861 0024 000000   		.space	3
 2862 0027 00       		.text
 2863              	.Letext0:
 2864              		.file 2 ".\\Generated_Source\\PSoC4\\cytypes.h"
 2865              		.file 3 ".\\Generated_Source\\PSoC4\\CapSense_PVT.h"
 2866              		.section	.debug_info,"",%progbits
 2867              	.Ldebug_info0:
 2868 0000 C20D0000 		.4byte	0xdc2
 2869 0004 0400     		.2byte	0x4
 2870 0006 00000000 		.4byte	.Ldebug_abbrev0
 2871 000a 04       		.byte	0x4
 2872 000b 01       		.uleb128 0x1
 2873 000c F9060000 		.4byte	.LASF136
 2874 0010 01       		.byte	0x1
 2875 0011 2F050000 		.4byte	.LASF137
 2876 0015 94060000 		.4byte	.LASF138
 2877 0019 00000000 		.4byte	.Ldebug_ranges0+0
 2878 001d 00000000 		.4byte	0
 2879 0021 00000000 		.4byte	.Ldebug_line0
 2880 0025 02       		.uleb128 0x2
 2881 0026 01       		.byte	0x1
 2882 0027 06       		.byte	0x6
 2883 0028 D2090000 		.4byte	.LASF0
 2884 002c 02       		.uleb128 0x2
 2885 002d 01       		.byte	0x1
 2886 002e 08       		.byte	0x8
 2887 002f F9080000 		.4byte	.LASF1
 2888 0033 02       		.uleb128 0x2
 2889 0034 02       		.byte	0x2
 2890 0035 05       		.byte	0x5
 2891 0036 BF070000 		.4byte	.LASF2
 2892 003a 02       		.uleb128 0x2
 2893 003b 02       		.byte	0x2
 2894 003c 07       		.byte	0x7
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\ccK6nYzE.s 			page 102


 2895 003d DE090000 		.4byte	.LASF3
 2896 0041 02       		.uleb128 0x2
 2897 0042 04       		.byte	0x4
 2898 0043 05       		.byte	0x5
 2899 0044 C9070000 		.4byte	.LASF4
 2900 0048 02       		.uleb128 0x2
 2901 0049 04       		.byte	0x4
 2902 004a 07       		.byte	0x7
 2903 004b 76080000 		.4byte	.LASF5
 2904 004f 02       		.uleb128 0x2
 2905 0050 08       		.byte	0x8
 2906 0051 05       		.byte	0x5
 2907 0052 58050000 		.4byte	.LASF6
 2908 0056 02       		.uleb128 0x2
 2909 0057 08       		.byte	0x8
 2910 0058 07       		.byte	0x7
 2911 0059 E9020000 		.4byte	.LASF7
 2912 005d 03       		.uleb128 0x3
 2913 005e 04       		.byte	0x4
 2914 005f 05       		.byte	0x5
 2915 0060 696E7400 		.ascii	"int\000"
 2916 0064 02       		.uleb128 0x2
 2917 0065 04       		.byte	0x4
 2918 0066 07       		.byte	0x7
 2919 0067 15010000 		.4byte	.LASF8
 2920 006b 04       		.uleb128 0x4
 2921 006c 6E0A0000 		.4byte	.LASF9
 2922 0070 02       		.byte	0x2
 2923 0071 B3       		.byte	0xb3
 2924 0072 2C000000 		.4byte	0x2c
 2925 0076 04       		.uleb128 0x4
 2926 0077 EE040000 		.4byte	.LASF10
 2927 007b 02       		.byte	0x2
 2928 007c B4       		.byte	0xb4
 2929 007d 3A000000 		.4byte	0x3a
 2930 0081 04       		.uleb128 0x4
 2931 0082 53060000 		.4byte	.LASF11
 2932 0086 02       		.byte	0x2
 2933 0087 B5       		.byte	0xb5
 2934 0088 48000000 		.4byte	0x48
 2935 008c 04       		.uleb128 0x4
 2936 008d 3A010000 		.4byte	.LASF12
 2937 0091 02       		.byte	0x2
 2938 0092 B7       		.byte	0xb7
 2939 0093 33000000 		.4byte	0x33
 2940 0097 04       		.uleb128 0x4
 2941 0098 A4020000 		.4byte	.LASF13
 2942 009c 02       		.byte	0x2
 2943 009d B8       		.byte	0xb8
 2944 009e 41000000 		.4byte	0x41
 2945 00a2 02       		.uleb128 0x2
 2946 00a3 04       		.byte	0x4
 2947 00a4 04       		.byte	0x4
 2948 00a5 9E020000 		.4byte	.LASF14
 2949 00a9 02       		.uleb128 0x2
 2950 00aa 08       		.byte	0x8
 2951 00ab 04       		.byte	0x4
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\ccK6nYzE.s 			page 103


 2952 00ac 740A0000 		.4byte	.LASF15
 2953 00b0 02       		.uleb128 0x2
 2954 00b1 01       		.byte	0x1
 2955 00b2 08       		.byte	0x8
 2956 00b3 C6040000 		.4byte	.LASF16
 2957 00b7 02       		.uleb128 0x2
 2958 00b8 04       		.byte	0x4
 2959 00b9 07       		.byte	0x7
 2960 00ba 6D080000 		.4byte	.LASF17
 2961 00be 05       		.uleb128 0x5
 2962 00bf 38       		.byte	0x38
 2963 00c0 03       		.byte	0x3
 2964 00c1 2F       		.byte	0x2f
 2965 00c2 6F010000 		.4byte	0x16f
 2966 00c6 06       		.uleb128 0x6
 2967 00c7 FA040000 		.4byte	.LASF18
 2968 00cb 03       		.byte	0x3
 2969 00cc 31       		.byte	0x31
 2970 00cd 6F010000 		.4byte	0x16f
 2971 00d1 00       		.byte	0
 2972 00d2 06       		.uleb128 0x6
 2973 00d3 B0070000 		.4byte	.LASF19
 2974 00d7 03       		.byte	0x3
 2975 00d8 32       		.byte	0x32
 2976 00d9 6F010000 		.4byte	0x16f
 2977 00dd 04       		.byte	0x4
 2978 00de 06       		.uleb128 0x6
 2979 00df 83090000 		.4byte	.LASF20
 2980 00e3 03       		.byte	0x3
 2981 00e4 33       		.byte	0x33
 2982 00e5 6F010000 		.4byte	0x16f
 2983 00e9 08       		.byte	0x8
 2984 00ea 06       		.uleb128 0x6
 2985 00eb EC080000 		.4byte	.LASF21
 2986 00ef 03       		.byte	0x3
 2987 00f0 34       		.byte	0x34
 2988 00f1 6F010000 		.4byte	0x16f
 2989 00f5 0C       		.byte	0xc
 2990 00f6 06       		.uleb128 0x6
 2991 00f7 C8090000 		.4byte	.LASF22
 2992 00fb 03       		.byte	0x3
 2993 00fc 35       		.byte	0x35
 2994 00fd 6F010000 		.4byte	0x16f
 2995 0101 10       		.byte	0x10
 2996 0102 06       		.uleb128 0x6
 2997 0103 F8070000 		.4byte	.LASF23
 2998 0107 03       		.byte	0x3
 2999 0108 36       		.byte	0x36
 3000 0109 75010000 		.4byte	0x175
 3001 010d 14       		.byte	0x14
 3002 010e 06       		.uleb128 0x6
 3003 010f B0020000 		.4byte	.LASF24
 3004 0113 03       		.byte	0x3
 3005 0114 37       		.byte	0x37
 3006 0115 80010000 		.4byte	0x180
 3007 0119 18       		.byte	0x18
 3008 011a 06       		.uleb128 0x6
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\ccK6nYzE.s 			page 104


 3009 011b D1010000 		.4byte	.LASF25
 3010 011f 03       		.byte	0x3
 3011 0120 38       		.byte	0x38
 3012 0121 75010000 		.4byte	0x175
 3013 0125 1C       		.byte	0x1c
 3014 0126 06       		.uleb128 0x6
 3015 0127 89000000 		.4byte	.LASF26
 3016 012b 03       		.byte	0x3
 3017 012c 39       		.byte	0x39
 3018 012d 75010000 		.4byte	0x175
 3019 0131 20       		.byte	0x20
 3020 0132 06       		.uleb128 0x6
 3021 0133 B0050000 		.4byte	.LASF27
 3022 0137 03       		.byte	0x3
 3023 0138 3A       		.byte	0x3a
 3024 0139 95010000 		.4byte	0x195
 3025 013d 24       		.byte	0x24
 3026 013e 06       		.uleb128 0x6
 3027 013f 88050000 		.4byte	.LASF28
 3028 0143 03       		.byte	0x3
 3029 0144 3B       		.byte	0x3b
 3030 0145 A6010000 		.4byte	0x1a6
 3031 0149 28       		.byte	0x28
 3032 014a 06       		.uleb128 0x6
 3033 014b F1030000 		.4byte	.LASF29
 3034 014f 03       		.byte	0x3
 3035 0150 3C       		.byte	0x3c
 3036 0151 95010000 		.4byte	0x195
 3037 0155 2C       		.byte	0x2c
 3038 0156 06       		.uleb128 0x6
 3039 0157 99000000 		.4byte	.LASF30
 3040 015b 03       		.byte	0x3
 3041 015c 3D       		.byte	0x3d
 3042 015d C0010000 		.4byte	0x1c0
 3043 0161 30       		.byte	0x30
 3044 0162 06       		.uleb128 0x6
 3045 0163 0F0A0000 		.4byte	.LASF31
 3046 0167 03       		.byte	0x3
 3047 0168 3E       		.byte	0x3e
 3048 0169 DB010000 		.4byte	0x1db
 3049 016d 34       		.byte	0x34
 3050 016e 00       		.byte	0
 3051 016f 07       		.uleb128 0x7
 3052 0170 04       		.byte	0x4
 3053 0171 6B000000 		.4byte	0x6b
 3054 0175 07       		.uleb128 0x7
 3055 0176 04       		.byte	0x4
 3056 0177 7B010000 		.4byte	0x17b
 3057 017b 08       		.uleb128 0x8
 3058 017c 6B000000 		.4byte	0x6b
 3059 0180 07       		.uleb128 0x7
 3060 0181 04       		.byte	0x4
 3061 0182 81000000 		.4byte	0x81
 3062 0186 09       		.uleb128 0x9
 3063 0187 76000000 		.4byte	0x76
 3064 018b 95010000 		.4byte	0x195
 3065 018f 0A       		.uleb128 0xa
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\ccK6nYzE.s 			page 105


 3066 0190 81000000 		.4byte	0x81
 3067 0194 00       		.byte	0
 3068 0195 07       		.uleb128 0x7
 3069 0196 04       		.byte	0x4
 3070 0197 86010000 		.4byte	0x186
 3071 019b 0B       		.uleb128 0xb
 3072 019c A6010000 		.4byte	0x1a6
 3073 01a0 0A       		.uleb128 0xa
 3074 01a1 81000000 		.4byte	0x81
 3075 01a5 00       		.byte	0
 3076 01a6 07       		.uleb128 0x7
 3077 01a7 04       		.byte	0x4
 3078 01a8 9B010000 		.4byte	0x19b
 3079 01ac 09       		.uleb128 0x9
 3080 01ad 81000000 		.4byte	0x81
 3081 01b1 C0010000 		.4byte	0x1c0
 3082 01b5 0A       		.uleb128 0xa
 3083 01b6 75010000 		.4byte	0x175
 3084 01ba 0A       		.uleb128 0xa
 3085 01bb 81000000 		.4byte	0x81
 3086 01bf 00       		.byte	0
 3087 01c0 07       		.uleb128 0x7
 3088 01c1 04       		.byte	0x4
 3089 01c2 AC010000 		.4byte	0x1ac
 3090 01c6 0B       		.uleb128 0xb
 3091 01c7 DB010000 		.4byte	0x1db
 3092 01cb 0A       		.uleb128 0xa
 3093 01cc 6F010000 		.4byte	0x16f
 3094 01d0 0A       		.uleb128 0xa
 3095 01d1 81000000 		.4byte	0x81
 3096 01d5 0A       		.uleb128 0xa
 3097 01d6 81000000 		.4byte	0x81
 3098 01da 00       		.byte	0
 3099 01db 07       		.uleb128 0x7
 3100 01dc 04       		.byte	0x4
 3101 01dd C6010000 		.4byte	0x1c6
 3102 01e1 04       		.uleb128 0x4
 3103 01e2 A0080000 		.4byte	.LASF32
 3104 01e6 03       		.byte	0x3
 3105 01e7 3F       		.byte	0x3f
 3106 01e8 BE000000 		.4byte	0xbe
 3107 01ec 05       		.uleb128 0x5
 3108 01ed 0C       		.byte	0xc
 3109 01ee 03       		.byte	0x3
 3110 01ef 41       		.byte	0x41
 3111 01f0 3D020000 		.4byte	0x23d
 3112 01f4 06       		.uleb128 0x6
 3113 01f5 87040000 		.4byte	.LASF33
 3114 01f9 03       		.byte	0x3
 3115 01fa 43       		.byte	0x43
 3116 01fb 6B000000 		.4byte	0x6b
 3117 01ff 00       		.byte	0
 3118 0200 06       		.uleb128 0x6
 3119 0201 DE010000 		.4byte	.LASF34
 3120 0205 03       		.byte	0x3
 3121 0206 44       		.byte	0x44
 3122 0207 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\ccK6nYzE.s 			page 106


 3123 020b 01       		.byte	0x1
 3124 020c 06       		.uleb128 0x6
 3125 020d 22010000 		.4byte	.LASF35
 3126 0211 03       		.byte	0x3
 3127 0212 45       		.byte	0x45
 3128 0213 6B000000 		.4byte	0x6b
 3129 0217 02       		.byte	0x2
 3130 0218 06       		.uleb128 0x6
 3131 0219 A0040000 		.4byte	.LASF36
 3132 021d 03       		.byte	0x3
 3133 021e 46       		.byte	0x46
 3134 021f 76000000 		.4byte	0x76
 3135 0223 04       		.byte	0x4
 3136 0224 06       		.uleb128 0x6
 3137 0225 8A070000 		.4byte	.LASF37
 3138 0229 03       		.byte	0x3
 3139 022a 47       		.byte	0x47
 3140 022b 76000000 		.4byte	0x76
 3141 022f 06       		.byte	0x6
 3142 0230 06       		.uleb128 0x6
 3143 0231 88080000 		.4byte	.LASF38
 3144 0235 03       		.byte	0x3
 3145 0236 48       		.byte	0x48
 3146 0237 3D020000 		.4byte	0x23d
 3147 023b 08       		.byte	0x8
 3148 023c 00       		.byte	0
 3149 023d 07       		.uleb128 0x7
 3150 023e 04       		.byte	0x4
 3151 023f 43020000 		.4byte	0x243
 3152 0243 08       		.uleb128 0x8
 3153 0244 E1010000 		.4byte	0x1e1
 3154 0248 04       		.uleb128 0x4
 3155 0249 48000000 		.4byte	.LASF39
 3156 024d 03       		.byte	0x3
 3157 024e 49       		.byte	0x49
 3158 024f EC010000 		.4byte	0x1ec
 3159 0253 0C       		.uleb128 0xc
 3160 0254 D8050000 		.4byte	.LASF40
 3161 0258 01       		.byte	0x1
 3162 0259 8E       		.byte	0x8e
 3163 025a 00000000 		.4byte	.LFB33
 3164 025e 58000000 		.4byte	.LFE33-.LFB33
 3165 0262 01       		.uleb128 0x1
 3166 0263 9C       		.byte	0x9c
 3167 0264 77020000 		.4byte	0x277
 3168 0268 0D       		.uleb128 0xd
 3169 0269 99040000 		.4byte	.LASF42
 3170 026d 01       		.byte	0x1
 3171 026e 8E       		.byte	0x8e
 3172 026f 81000000 		.4byte	0x81
 3173 0273 02       		.uleb128 0x2
 3174 0274 91       		.byte	0x91
 3175 0275 74       		.sleb128 -12
 3176 0276 00       		.byte	0
 3177 0277 0E       		.uleb128 0xe
 3178 0278 8E010000 		.4byte	.LASF41
 3179 027c 01       		.byte	0x1
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\ccK6nYzE.s 			page 107


 3180 027d D9       		.byte	0xd9
 3181 027e 00000000 		.4byte	.LFB34
 3182 0282 2A000000 		.4byte	.LFE34-.LFB34
 3183 0286 01       		.uleb128 0x1
 3184 0287 9C       		.byte	0x9c
 3185 0288 9B020000 		.4byte	0x29b
 3186 028c 0D       		.uleb128 0xd
 3187 028d 99040000 		.4byte	.LASF42
 3188 0291 01       		.byte	0x1
 3189 0292 D9       		.byte	0xd9
 3190 0293 81000000 		.4byte	0x81
 3191 0297 02       		.uleb128 0x2
 3192 0298 91       		.byte	0x91
 3193 0299 74       		.sleb128 -12
 3194 029a 00       		.byte	0
 3195 029b 0E       		.uleb128 0xe
 3196 029c 2D090000 		.4byte	.LASF43
 3197 02a0 01       		.byte	0x1
 3198 02a1 FE       		.byte	0xfe
 3199 02a2 00000000 		.4byte	.LFB35
 3200 02a6 26000000 		.4byte	.LFE35-.LFB35
 3201 02aa 01       		.uleb128 0x1
 3202 02ab 9C       		.byte	0x9c
 3203 02ac BE020000 		.4byte	0x2be
 3204 02b0 0F       		.uleb128 0xf
 3205 02b1 6900     		.ascii	"i\000"
 3206 02b3 01       		.byte	0x1
 3207 02b4 0001     		.2byte	0x100
 3208 02b6 81000000 		.4byte	0x81
 3209 02ba 02       		.uleb128 0x2
 3210 02bb 91       		.byte	0x91
 3211 02bc 74       		.sleb128 -12
 3212 02bd 00       		.byte	0
 3213 02be 10       		.uleb128 0x10
 3214 02bf 40010000 		.4byte	.LASF44
 3215 02c3 01       		.byte	0x1
 3216 02c4 2101     		.2byte	0x121
 3217 02c6 00000000 		.4byte	.LFB36
 3218 02ca 50000000 		.4byte	.LFE36-.LFB36
 3219 02ce 01       		.uleb128 0x1
 3220 02cf 9C       		.byte	0x9c
 3221 02d0 F1020000 		.4byte	0x2f1
 3222 02d4 0F       		.uleb128 0xf
 3223 02d5 6900     		.ascii	"i\000"
 3224 02d7 01       		.byte	0x1
 3225 02d8 2301     		.2byte	0x123
 3226 02da 81000000 		.4byte	0x81
 3227 02de 02       		.uleb128 0x2
 3228 02df 91       		.byte	0x91
 3229 02e0 74       		.sleb128 -12
 3230 02e1 11       		.uleb128 0x11
 3231 02e2 F8000000 		.4byte	.LASF45
 3232 02e6 01       		.byte	0x1
 3233 02e7 2401     		.2byte	0x124
 3234 02e9 81000000 		.4byte	0x81
 3235 02ed 02       		.uleb128 0x2
 3236 02ee 91       		.byte	0x91
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\ccK6nYzE.s 			page 108


 3237 02ef 70       		.sleb128 -16
 3238 02f0 00       		.byte	0
 3239 02f1 10       		.uleb128 0x10
 3240 02f2 66000000 		.4byte	.LASF46
 3241 02f6 01       		.byte	0x1
 3242 02f7 6201     		.2byte	0x162
 3243 02f9 00000000 		.4byte	.LFB37
 3244 02fd 28020000 		.4byte	.LFE37-.LFB37
 3245 0301 01       		.uleb128 0x1
 3246 0302 9C       		.byte	0x9c
 3247 0303 71030000 		.4byte	0x371
 3248 0307 12       		.uleb128 0x12
 3249 0308 99040000 		.4byte	.LASF42
 3250 030c 01       		.byte	0x1
 3251 030d 6201     		.2byte	0x162
 3252 030f 81000000 		.4byte	0x81
 3253 0313 02       		.uleb128 0x2
 3254 0314 91       		.byte	0x91
 3255 0315 5C       		.sleb128 -36
 3256 0316 11       		.uleb128 0x11
 3257 0317 EC030000 		.4byte	.LASF47
 3258 031b 01       		.byte	0x1
 3259 031c 6401     		.2byte	0x164
 3260 031e 81000000 		.4byte	0x81
 3261 0322 02       		.uleb128 0x2
 3262 0323 91       		.byte	0x91
 3263 0324 60       		.sleb128 -32
 3264 0325 11       		.uleb128 0x11
 3265 0326 E0030000 		.4byte	.LASF48
 3266 032a 01       		.byte	0x1
 3267 032b 6501     		.2byte	0x165
 3268 032d 81000000 		.4byte	0x81
 3269 0331 02       		.uleb128 0x2
 3270 0332 91       		.byte	0x91
 3271 0333 6C       		.sleb128 -20
 3272 0334 11       		.uleb128 0x11
 3273 0335 340A0000 		.4byte	.LASF49
 3274 0339 01       		.byte	0x1
 3275 033a 6601     		.2byte	0x166
 3276 033c 76000000 		.4byte	0x76
 3277 0340 02       		.uleb128 0x2
 3278 0341 91       		.byte	0x91
 3279 0342 6A       		.sleb128 -22
 3280 0343 11       		.uleb128 0x11
 3281 0344 0D040000 		.4byte	.LASF50
 3282 0348 01       		.byte	0x1
 3283 0349 6701     		.2byte	0x167
 3284 034b 76000000 		.4byte	0x76
 3285 034f 02       		.uleb128 0x2
 3286 0350 91       		.byte	0x91
 3287 0351 68       		.sleb128 -24
 3288 0352 11       		.uleb128 0x11
 3289 0353 1A030000 		.4byte	.LASF51
 3290 0357 01       		.byte	0x1
 3291 0358 6801     		.2byte	0x168
 3292 035a 6B000000 		.4byte	0x6b
 3293 035e 02       		.uleb128 0x2
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\ccK6nYzE.s 			page 109


 3294 035f 91       		.byte	0x91
 3295 0360 67       		.sleb128 -25
 3296 0361 11       		.uleb128 0x11
 3297 0362 91080000 		.4byte	.LASF52
 3298 0366 01       		.byte	0x1
 3299 0367 6901     		.2byte	0x169
 3300 0369 6B000000 		.4byte	0x6b
 3301 036d 02       		.uleb128 0x2
 3302 036e 91       		.byte	0x91
 3303 036f 66       		.sleb128 -26
 3304 0370 00       		.byte	0
 3305 0371 10       		.uleb128 0x10
 3306 0372 BA050000 		.4byte	.LASF53
 3307 0376 01       		.byte	0x1
 3308 0377 2102     		.2byte	0x221
 3309 0379 00000000 		.4byte	.LFB38
 3310 037d 1E000000 		.4byte	.LFE38-.LFB38
 3311 0381 01       		.uleb128 0x1
 3312 0382 9C       		.byte	0x9c
 3313 0383 97030000 		.4byte	0x397
 3314 0387 12       		.uleb128 0x12
 3315 0388 99040000 		.4byte	.LASF42
 3316 038c 01       		.byte	0x1
 3317 038d 2102     		.2byte	0x221
 3318 038f 81000000 		.4byte	0x81
 3319 0393 02       		.uleb128 0x2
 3320 0394 91       		.byte	0x91
 3321 0395 74       		.sleb128 -12
 3322 0396 00       		.byte	0
 3323 0397 10       		.uleb128 0x10
 3324 0398 BF000000 		.4byte	.LASF54
 3325 039c 01       		.byte	0x1
 3326 039d 5702     		.2byte	0x257
 3327 039f 00000000 		.4byte	.LFB39
 3328 03a3 40000000 		.4byte	.LFE39-.LFB39
 3329 03a7 01       		.uleb128 0x1
 3330 03a8 9C       		.byte	0x9c
 3331 03a9 CA030000 		.4byte	0x3ca
 3332 03ad 0F       		.uleb128 0xf
 3333 03ae 6900     		.ascii	"i\000"
 3334 03b0 01       		.byte	0x1
 3335 03b1 5902     		.2byte	0x259
 3336 03b3 81000000 		.4byte	0x81
 3337 03b7 02       		.uleb128 0x2
 3338 03b8 91       		.byte	0x91
 3339 03b9 74       		.sleb128 -12
 3340 03ba 11       		.uleb128 0x11
 3341 03bb F8000000 		.4byte	.LASF45
 3342 03bf 01       		.byte	0x1
 3343 03c0 5A02     		.2byte	0x25a
 3344 03c2 81000000 		.4byte	0x81
 3345 03c6 02       		.uleb128 0x2
 3346 03c7 91       		.byte	0x91
 3347 03c8 70       		.sleb128 -16
 3348 03c9 00       		.byte	0
 3349 03ca 10       		.uleb128 0x10
 3350 03cb 6C020000 		.4byte	.LASF55
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\ccK6nYzE.s 			page 110


 3351 03cf 01       		.byte	0x1
 3352 03d0 8402     		.2byte	0x284
 3353 03d2 00000000 		.4byte	.LFB40
 3354 03d6 58000000 		.4byte	.LFE40-.LFB40
 3355 03da 01       		.uleb128 0x1
 3356 03db 9C       		.byte	0x9c
 3357 03dc 39040000 		.4byte	0x439
 3358 03e0 12       		.uleb128 0x12
 3359 03e1 1A030000 		.4byte	.LASF51
 3360 03e5 01       		.byte	0x1
 3361 03e6 8402     		.2byte	0x284
 3362 03e8 81000000 		.4byte	0x81
 3363 03ec 02       		.uleb128 0x2
 3364 03ed 91       		.byte	0x91
 3365 03ee 5C       		.sleb128 -36
 3366 03ef 11       		.uleb128 0x11
 3367 03f0 1D040000 		.4byte	.LASF56
 3368 03f4 01       		.byte	0x1
 3369 03f5 8602     		.2byte	0x286
 3370 03f7 81000000 		.4byte	0x81
 3371 03fb 02       		.uleb128 0x2
 3372 03fc 91       		.byte	0x91
 3373 03fd 70       		.sleb128 -16
 3374 03fe 11       		.uleb128 0x11
 3375 03ff D2070000 		.4byte	.LASF57
 3376 0403 01       		.byte	0x1
 3377 0404 8702     		.2byte	0x287
 3378 0406 81000000 		.4byte	0x81
 3379 040a 02       		.uleb128 0x2
 3380 040b 91       		.byte	0x91
 3381 040c 6C       		.sleb128 -20
 3382 040d 11       		.uleb128 0x11
 3383 040e 7F070000 		.4byte	.LASF58
 3384 0412 01       		.byte	0x1
 3385 0413 8802     		.2byte	0x288
 3386 0415 81000000 		.4byte	0x81
 3387 0419 02       		.uleb128 0x2
 3388 041a 91       		.byte	0x91
 3389 041b 68       		.sleb128 -24
 3390 041c 0F       		.uleb128 0xf
 3391 041d 6900     		.ascii	"i\000"
 3392 041f 01       		.byte	0x1
 3393 0420 8902     		.2byte	0x289
 3394 0422 81000000 		.4byte	0x81
 3395 0426 02       		.uleb128 0x2
 3396 0427 91       		.byte	0x91
 3397 0428 74       		.sleb128 -12
 3398 0429 11       		.uleb128 0x11
 3399 042a F8000000 		.4byte	.LASF45
 3400 042e 01       		.byte	0x1
 3401 042f 8A02     		.2byte	0x28a
 3402 0431 81000000 		.4byte	0x81
 3403 0435 02       		.uleb128 0x2
 3404 0436 91       		.byte	0x91
 3405 0437 64       		.sleb128 -28
 3406 0438 00       		.byte	0
 3407 0439 13       		.uleb128 0x13
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\ccK6nYzE.s 			page 111


 3408 043a 4D090000 		.4byte	.LASF61
 3409 043e 01       		.byte	0x1
 3410 043f B502     		.2byte	0x2b5
 3411 0441 76000000 		.4byte	0x76
 3412 0445 00000000 		.4byte	.LFB41
 3413 0449 1C000000 		.4byte	.LFE41-.LFB41
 3414 044d 01       		.uleb128 0x1
 3415 044e 9C       		.byte	0x9c
 3416 044f 63040000 		.4byte	0x463
 3417 0453 12       		.uleb128 0x12
 3418 0454 99040000 		.4byte	.LASF42
 3419 0458 01       		.byte	0x1
 3420 0459 B502     		.2byte	0x2b5
 3421 045b 81000000 		.4byte	0x81
 3422 045f 02       		.uleb128 0x2
 3423 0460 91       		.byte	0x91
 3424 0461 74       		.sleb128 -12
 3425 0462 00       		.byte	0
 3426 0463 14       		.uleb128 0x14
 3427 0464 B8010000 		.4byte	.LASF59
 3428 0468 01       		.byte	0x1
 3429 0469 D002     		.2byte	0x2d0
 3430 046b 00000000 		.4byte	.LFB42
 3431 046f 24000000 		.4byte	.LFE42-.LFB42
 3432 0473 01       		.uleb128 0x1
 3433 0474 9C       		.byte	0x9c
 3434 0475 98040000 		.4byte	0x498
 3435 0479 12       		.uleb128 0x12
 3436 047a 99040000 		.4byte	.LASF42
 3437 047e 01       		.byte	0x1
 3438 047f D002     		.2byte	0x2d0
 3439 0481 81000000 		.4byte	0x81
 3440 0485 02       		.uleb128 0x2
 3441 0486 91       		.byte	0x91
 3442 0487 74       		.sleb128 -12
 3443 0488 12       		.uleb128 0x12
 3444 0489 F5040000 		.4byte	.LASF60
 3445 048d 01       		.byte	0x1
 3446 048e D002     		.2byte	0x2d0
 3447 0490 76000000 		.4byte	0x76
 3448 0494 02       		.uleb128 0x2
 3449 0495 91       		.byte	0x91
 3450 0496 72       		.sleb128 -14
 3451 0497 00       		.byte	0
 3452 0498 13       		.uleb128 0x13
 3453 0499 C6030000 		.4byte	.LASF62
 3454 049d 01       		.byte	0x1
 3455 049e EB02     		.2byte	0x2eb
 3456 04a0 6B000000 		.4byte	0x6b
 3457 04a4 00000000 		.4byte	.LFB43
 3458 04a8 1C000000 		.4byte	.LFE43-.LFB43
 3459 04ac 01       		.uleb128 0x1
 3460 04ad 9C       		.byte	0x9c
 3461 04ae C2040000 		.4byte	0x4c2
 3462 04b2 12       		.uleb128 0x12
 3463 04b3 99040000 		.4byte	.LASF42
 3464 04b7 01       		.byte	0x1
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\ccK6nYzE.s 			page 112


 3465 04b8 EB02     		.2byte	0x2eb
 3466 04ba 81000000 		.4byte	0x81
 3467 04be 02       		.uleb128 0x2
 3468 04bf 91       		.byte	0x91
 3469 04c0 74       		.sleb128 -12
 3470 04c1 00       		.byte	0
 3471 04c2 14       		.uleb128 0x14
 3472 04c3 EE010000 		.4byte	.LASF63
 3473 04c7 01       		.byte	0x1
 3474 04c8 0603     		.2byte	0x306
 3475 04ca 00000000 		.4byte	.LFB44
 3476 04ce 24000000 		.4byte	.LFE44-.LFB44
 3477 04d2 01       		.uleb128 0x1
 3478 04d3 9C       		.byte	0x9c
 3479 04d4 F7040000 		.4byte	0x4f7
 3480 04d8 12       		.uleb128 0x12
 3481 04d9 99040000 		.4byte	.LASF42
 3482 04dd 01       		.byte	0x1
 3483 04de 0603     		.2byte	0x306
 3484 04e0 81000000 		.4byte	0x81
 3485 04e4 02       		.uleb128 0x2
 3486 04e5 91       		.byte	0x91
 3487 04e6 74       		.sleb128 -12
 3488 04e7 12       		.uleb128 0x12
 3489 04e8 A3030000 		.4byte	.LASF64
 3490 04ec 01       		.byte	0x1
 3491 04ed 0603     		.2byte	0x306
 3492 04ef 6B000000 		.4byte	0x6b
 3493 04f3 02       		.uleb128 0x2
 3494 04f4 91       		.byte	0x91
 3495 04f5 73       		.sleb128 -13
 3496 04f6 00       		.byte	0
 3497 04f7 13       		.uleb128 0x13
 3498 04f8 DD060000 		.4byte	.LASF65
 3499 04fc 01       		.byte	0x1
 3500 04fd 2103     		.2byte	0x321
 3501 04ff 6B000000 		.4byte	0x6b
 3502 0503 00000000 		.4byte	.LFB45
 3503 0507 1C000000 		.4byte	.LFE45-.LFB45
 3504 050b 01       		.uleb128 0x1
 3505 050c 9C       		.byte	0x9c
 3506 050d 21050000 		.4byte	0x521
 3507 0511 12       		.uleb128 0x12
 3508 0512 1A030000 		.4byte	.LASF51
 3509 0516 01       		.byte	0x1
 3510 0517 2103     		.2byte	0x321
 3511 0519 81000000 		.4byte	0x81
 3512 051d 02       		.uleb128 0x2
 3513 051e 91       		.byte	0x91
 3514 051f 74       		.sleb128 -12
 3515 0520 00       		.byte	0
 3516 0521 13       		.uleb128 0x13
 3517 0522 CE020000 		.4byte	.LASF66
 3518 0526 01       		.byte	0x1
 3519 0527 3C03     		.2byte	0x33c
 3520 0529 6B000000 		.4byte	0x6b
 3521 052d 00000000 		.4byte	.LFB46
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\ccK6nYzE.s 			page 113


 3522 0531 1C000000 		.4byte	.LFE46-.LFB46
 3523 0535 01       		.uleb128 0x1
 3524 0536 9C       		.byte	0x9c
 3525 0537 4B050000 		.4byte	0x54b
 3526 053b 12       		.uleb128 0x12
 3527 053c 1A030000 		.4byte	.LASF51
 3528 0540 01       		.byte	0x1
 3529 0541 3C03     		.2byte	0x33c
 3530 0543 81000000 		.4byte	0x81
 3531 0547 02       		.uleb128 0x2
 3532 0548 91       		.byte	0x91
 3533 0549 74       		.sleb128 -12
 3534 054a 00       		.byte	0
 3535 054b 13       		.uleb128 0x13
 3536 054c A9030000 		.4byte	.LASF67
 3537 0550 01       		.byte	0x1
 3538 0551 5803     		.2byte	0x358
 3539 0553 6B000000 		.4byte	0x6b
 3540 0557 00000000 		.4byte	.LFB47
 3541 055b 1C000000 		.4byte	.LFE47-.LFB47
 3542 055f 01       		.uleb128 0x1
 3543 0560 9C       		.byte	0x9c
 3544 0561 75050000 		.4byte	0x575
 3545 0565 12       		.uleb128 0x12
 3546 0566 1A030000 		.4byte	.LASF51
 3547 056a 01       		.byte	0x1
 3548 056b 5803     		.2byte	0x358
 3549 056d 81000000 		.4byte	0x81
 3550 0571 02       		.uleb128 0x2
 3551 0572 91       		.byte	0x91
 3552 0573 74       		.sleb128 -12
 3553 0574 00       		.byte	0
 3554 0575 13       		.uleb128 0x13
 3555 0576 CB040000 		.4byte	.LASF68
 3556 057a 01       		.byte	0x1
 3557 057b 7403     		.2byte	0x374
 3558 057d 6B000000 		.4byte	0x6b
 3559 0581 00000000 		.4byte	.LFB48
 3560 0585 1C000000 		.4byte	.LFE48-.LFB48
 3561 0589 01       		.uleb128 0x1
 3562 058a 9C       		.byte	0x9c
 3563 058b 9F050000 		.4byte	0x59f
 3564 058f 12       		.uleb128 0x12
 3565 0590 1A030000 		.4byte	.LASF51
 3566 0594 01       		.byte	0x1
 3567 0595 7403     		.2byte	0x374
 3568 0597 81000000 		.4byte	0x81
 3569 059b 02       		.uleb128 0x2
 3570 059c 91       		.byte	0x91
 3571 059d 74       		.sleb128 -12
 3572 059e 00       		.byte	0
 3573 059f 14       		.uleb128 0x14
 3574 05a0 68030000 		.4byte	.LASF69
 3575 05a4 01       		.byte	0x1
 3576 05a5 9503     		.2byte	0x395
 3577 05a7 00000000 		.4byte	.LFB49
 3578 05ab 24000000 		.4byte	.LFE49-.LFB49
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\ccK6nYzE.s 			page 114


 3579 05af 01       		.uleb128 0x1
 3580 05b0 9C       		.byte	0x9c
 3581 05b1 D4050000 		.4byte	0x5d4
 3582 05b5 12       		.uleb128 0x12
 3583 05b6 1A030000 		.4byte	.LASF51
 3584 05ba 01       		.byte	0x1
 3585 05bb 9503     		.2byte	0x395
 3586 05bd 81000000 		.4byte	0x81
 3587 05c1 02       		.uleb128 0x2
 3588 05c2 91       		.byte	0x91
 3589 05c3 74       		.sleb128 -12
 3590 05c4 12       		.uleb128 0x12
 3591 05c5 A3030000 		.4byte	.LASF64
 3592 05c9 01       		.byte	0x1
 3593 05ca 9503     		.2byte	0x395
 3594 05cc 6B000000 		.4byte	0x6b
 3595 05d0 02       		.uleb128 0x2
 3596 05d1 91       		.byte	0x91
 3597 05d2 73       		.sleb128 -13
 3598 05d3 00       		.byte	0
 3599 05d4 14       		.uleb128 0x14
 3600 05d5 51020000 		.4byte	.LASF70
 3601 05d9 01       		.byte	0x1
 3602 05da B103     		.2byte	0x3b1
 3603 05dc 00000000 		.4byte	.LFB50
 3604 05e0 24000000 		.4byte	.LFE50-.LFB50
 3605 05e4 01       		.uleb128 0x1
 3606 05e5 9C       		.byte	0x9c
 3607 05e6 09060000 		.4byte	0x609
 3608 05ea 12       		.uleb128 0x12
 3609 05eb 1A030000 		.4byte	.LASF51
 3610 05ef 01       		.byte	0x1
 3611 05f0 B103     		.2byte	0x3b1
 3612 05f2 81000000 		.4byte	0x81
 3613 05f6 02       		.uleb128 0x2
 3614 05f7 91       		.byte	0x91
 3615 05f8 74       		.sleb128 -12
 3616 05f9 12       		.uleb128 0x12
 3617 05fa A3030000 		.4byte	.LASF64
 3618 05fe 01       		.byte	0x1
 3619 05ff B103     		.2byte	0x3b1
 3620 0601 6B000000 		.4byte	0x6b
 3621 0605 02       		.uleb128 0x2
 3622 0606 91       		.byte	0x91
 3623 0607 73       		.sleb128 -13
 3624 0608 00       		.byte	0
 3625 0609 14       		.uleb128 0x14
 3626 060a 77060000 		.4byte	.LASF71
 3627 060e 01       		.byte	0x1
 3628 060f CD03     		.2byte	0x3cd
 3629 0611 00000000 		.4byte	.LFB51
 3630 0615 24000000 		.4byte	.LFE51-.LFB51
 3631 0619 01       		.uleb128 0x1
 3632 061a 9C       		.byte	0x9c
 3633 061b 3E060000 		.4byte	0x63e
 3634 061f 12       		.uleb128 0x12
 3635 0620 1A030000 		.4byte	.LASF51
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\ccK6nYzE.s 			page 115


 3636 0624 01       		.byte	0x1
 3637 0625 CD03     		.2byte	0x3cd
 3638 0627 81000000 		.4byte	0x81
 3639 062b 02       		.uleb128 0x2
 3640 062c 91       		.byte	0x91
 3641 062d 74       		.sleb128 -12
 3642 062e 12       		.uleb128 0x12
 3643 062f A3030000 		.4byte	.LASF64
 3644 0633 01       		.byte	0x1
 3645 0634 CD03     		.2byte	0x3cd
 3646 0636 6B000000 		.4byte	0x6b
 3647 063a 02       		.uleb128 0x2
 3648 063b 91       		.byte	0x91
 3649 063c 73       		.sleb128 -13
 3650 063d 00       		.byte	0
 3651 063e 14       		.uleb128 0x14
 3652 063f 30060000 		.4byte	.LASF72
 3653 0643 01       		.byte	0x1
 3654 0644 EA03     		.2byte	0x3ea
 3655 0646 00000000 		.4byte	.LFB52
 3656 064a 24000000 		.4byte	.LFE52-.LFB52
 3657 064e 01       		.uleb128 0x1
 3658 064f 9C       		.byte	0x9c
 3659 0650 73060000 		.4byte	0x673
 3660 0654 12       		.uleb128 0x12
 3661 0655 1A030000 		.4byte	.LASF51
 3662 0659 01       		.byte	0x1
 3663 065a EA03     		.2byte	0x3ea
 3664 065c 81000000 		.4byte	0x81
 3665 0660 02       		.uleb128 0x2
 3666 0661 91       		.byte	0x91
 3667 0662 74       		.sleb128 -12
 3668 0663 12       		.uleb128 0x12
 3669 0664 A3030000 		.4byte	.LASF64
 3670 0668 01       		.byte	0x1
 3671 0669 EA03     		.2byte	0x3ea
 3672 066b 6B000000 		.4byte	0x6b
 3673 066f 02       		.uleb128 0x2
 3674 0670 91       		.byte	0x91
 3675 0671 73       		.sleb128 -13
 3676 0672 00       		.byte	0
 3677 0673 14       		.uleb128 0x14
 3678 0674 C7080000 		.4byte	.LASF73
 3679 0678 01       		.byte	0x1
 3680 0679 0604     		.2byte	0x406
 3681 067b 00000000 		.4byte	.LFB53
 3682 067f 24000000 		.4byte	.LFE53-.LFB53
 3683 0683 01       		.uleb128 0x1
 3684 0684 9C       		.byte	0x9c
 3685 0685 A8060000 		.4byte	0x6a8
 3686 0689 12       		.uleb128 0x12
 3687 068a 1A030000 		.4byte	.LASF51
 3688 068e 01       		.byte	0x1
 3689 068f 0604     		.2byte	0x406
 3690 0691 81000000 		.4byte	0x81
 3691 0695 02       		.uleb128 0x2
 3692 0696 91       		.byte	0x91
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\ccK6nYzE.s 			page 116


 3693 0697 74       		.sleb128 -12
 3694 0698 12       		.uleb128 0x12
 3695 0699 A3030000 		.4byte	.LASF64
 3696 069d 01       		.byte	0x1
 3697 069e 0604     		.2byte	0x406
 3698 06a0 6B000000 		.4byte	0x6b
 3699 06a4 02       		.uleb128 0x2
 3700 06a5 91       		.byte	0x91
 3701 06a6 73       		.sleb128 -13
 3702 06a7 00       		.byte	0
 3703 06a8 14       		.uleb128 0x14
 3704 06a9 66090000 		.4byte	.LASF74
 3705 06ad 01       		.byte	0x1
 3706 06ae 2204     		.2byte	0x422
 3707 06b0 00000000 		.4byte	.LFB54
 3708 06b4 24000000 		.4byte	.LFE54-.LFB54
 3709 06b8 01       		.uleb128 0x1
 3710 06b9 9C       		.byte	0x9c
 3711 06ba DD060000 		.4byte	0x6dd
 3712 06be 12       		.uleb128 0x12
 3713 06bf 99040000 		.4byte	.LASF42
 3714 06c3 01       		.byte	0x1
 3715 06c4 2204     		.2byte	0x422
 3716 06c6 81000000 		.4byte	0x81
 3717 06ca 02       		.uleb128 0x2
 3718 06cb 91       		.byte	0x91
 3719 06cc 74       		.sleb128 -12
 3720 06cd 12       		.uleb128 0x12
 3721 06ce A3030000 		.4byte	.LASF64
 3722 06d2 01       		.byte	0x1
 3723 06d3 2204     		.2byte	0x422
 3724 06d5 6B000000 		.4byte	0x6b
 3725 06d9 02       		.uleb128 0x2
 3726 06da 91       		.byte	0x91
 3727 06db 73       		.sleb128 -13
 3728 06dc 00       		.byte	0
 3729 06dd 15       		.uleb128 0x15
 3730 06de 93050000 		.4byte	.LASF75
 3731 06e2 01       		.byte	0x1
 3732 06e3 5004     		.2byte	0x450
 3733 06e5 81000000 		.4byte	0x81
 3734 06e9 00000000 		.4byte	.LFB55
 3735 06ed 40010000 		.4byte	.LFE55-.LFB55
 3736 06f1 01       		.uleb128 0x1
 3737 06f2 9C       		.byte	0x9c
 3738 06f3 64070000 		.4byte	0x764
 3739 06f7 12       		.uleb128 0x12
 3740 06f8 99040000 		.4byte	.LASF42
 3741 06fc 01       		.byte	0x1
 3742 06fd 5004     		.2byte	0x450
 3743 06ff 81000000 		.4byte	0x81
 3744 0703 02       		.uleb128 0x2
 3745 0704 91       		.byte	0x91
 3746 0705 6C       		.sleb128 -20
 3747 0706 11       		.uleb128 0x11
 3748 0707 1A030000 		.4byte	.LASF51
 3749 070b 01       		.byte	0x1
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\ccK6nYzE.s 			page 117


 3750 070c 5204     		.2byte	0x452
 3751 070e 6B000000 		.4byte	0x6b
 3752 0712 02       		.uleb128 0x2
 3753 0713 91       		.byte	0x91
 3754 0714 77       		.sleb128 -9
 3755 0715 11       		.uleb128 0x11
 3756 0716 7F050000 		.4byte	.LASF76
 3757 071a 01       		.byte	0x1
 3758 071b 5304     		.2byte	0x453
 3759 071d 6B000000 		.4byte	0x6b
 3760 0721 02       		.uleb128 0x2
 3761 0722 91       		.byte	0x91
 3762 0723 74       		.sleb128 -12
 3763 0724 11       		.uleb128 0x11
 3764 0725 1F090000 		.4byte	.LASF77
 3765 0729 01       		.byte	0x1
 3766 072a 5404     		.2byte	0x454
 3767 072c 6B000000 		.4byte	0x6b
 3768 0730 02       		.uleb128 0x2
 3769 0731 91       		.byte	0x91
 3770 0732 73       		.sleb128 -13
 3771 0733 11       		.uleb128 0x11
 3772 0734 DC080000 		.4byte	.LASF78
 3773 0738 01       		.byte	0x1
 3774 0739 5604     		.2byte	0x456
 3775 073b 6B000000 		.4byte	0x6b
 3776 073f 02       		.uleb128 0x2
 3777 0740 91       		.byte	0x91
 3778 0741 76       		.sleb128 -10
 3779 0742 11       		.uleb128 0x11
 3780 0743 02040000 		.4byte	.LASF79
 3781 0747 01       		.byte	0x1
 3782 0748 5704     		.2byte	0x457
 3783 074a 6B000000 		.4byte	0x6b
 3784 074e 02       		.uleb128 0x2
 3785 074f 91       		.byte	0x91
 3786 0750 75       		.sleb128 -11
 3787 0751 11       		.uleb128 0x11
 3788 0752 2F000000 		.4byte	.LASF80
 3789 0756 01       		.byte	0x1
 3790 0757 5804     		.2byte	0x458
 3791 0759 64070000 		.4byte	0x764
 3792 075d 05       		.uleb128 0x5
 3793 075e 03       		.byte	0x3
 3794 075f 20000000 		.4byte	CapSense_debounceCounter.5350
 3795 0763 00       		.byte	0
 3796 0764 16       		.uleb128 0x16
 3797 0765 6B000000 		.4byte	0x6b
 3798 0769 74070000 		.4byte	0x774
 3799 076d 17       		.uleb128 0x17
 3800 076e B7000000 		.4byte	0xb7
 3801 0772 00       		.byte	0
 3802 0773 00       		.byte	0
 3803 0774 15       		.uleb128 0x15
 3804 0775 510A0000 		.4byte	.LASF81
 3805 0779 01       		.byte	0x1
 3806 077a A704     		.2byte	0x4a7
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\ccK6nYzE.s 			page 118


 3807 077c 81000000 		.4byte	0x81
 3808 0780 00000000 		.4byte	.LFB56
 3809 0784 44000000 		.4byte	.LFE56-.LFB56
 3810 0788 01       		.uleb128 0x1
 3811 0789 9C       		.byte	0x9c
 3812 078a CB070000 		.4byte	0x7cb
 3813 078e 12       		.uleb128 0x12
 3814 078f 1A030000 		.4byte	.LASF51
 3815 0793 01       		.byte	0x1
 3816 0794 A704     		.2byte	0x4a7
 3817 0796 81000000 		.4byte	0x81
 3818 079a 02       		.uleb128 0x2
 3819 079b 91       		.byte	0x91
 3820 079c 64       		.sleb128 -28
 3821 079d 11       		.uleb128 0x11
 3822 079e 14050000 		.4byte	.LASF82
 3823 07a2 01       		.byte	0x1
 3824 07a3 A904     		.2byte	0x4a9
 3825 07a5 81000000 		.4byte	0x81
 3826 07a9 02       		.uleb128 0x2
 3827 07aa 91       		.byte	0x91
 3828 07ab 74       		.sleb128 -12
 3829 07ac 11       		.uleb128 0x11
 3830 07ad 08010000 		.4byte	.LASF83
 3831 07b1 01       		.byte	0x1
 3832 07b2 AA04     		.2byte	0x4aa
 3833 07b4 81000000 		.4byte	0x81
 3834 07b8 02       		.uleb128 0x2
 3835 07b9 91       		.byte	0x91
 3836 07ba 6C       		.sleb128 -20
 3837 07bb 11       		.uleb128 0x11
 3838 07bc A8090000 		.4byte	.LASF84
 3839 07c0 01       		.byte	0x1
 3840 07c1 AB04     		.2byte	0x4ab
 3841 07c3 81000000 		.4byte	0x81
 3842 07c7 02       		.uleb128 0x2
 3843 07c8 91       		.byte	0x91
 3844 07c9 70       		.sleb128 -16
 3845 07ca 00       		.byte	0
 3846 07cb 15       		.uleb128 0x15
 3847 07cc 2E040000 		.4byte	.LASF85
 3848 07d0 01       		.byte	0x1
 3849 07d1 D504     		.2byte	0x4d5
 3850 07d3 81000000 		.4byte	0x81
 3851 07d7 00000000 		.4byte	.LFB57
 3852 07db 38000000 		.4byte	.LFE57-.LFB57
 3853 07df 01       		.uleb128 0x1
 3854 07e0 9C       		.byte	0x9c
 3855 07e1 02080000 		.4byte	0x802
 3856 07e5 0F       		.uleb128 0xf
 3857 07e6 6900     		.ascii	"i\000"
 3858 07e8 01       		.byte	0x1
 3859 07e9 D804     		.2byte	0x4d8
 3860 07eb 81000000 		.4byte	0x81
 3861 07ef 02       		.uleb128 0x2
 3862 07f0 91       		.byte	0x91
 3863 07f1 74       		.sleb128 -12
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\ccK6nYzE.s 			page 119


 3864 07f2 11       		.uleb128 0x11
 3865 07f3 A8090000 		.4byte	.LASF84
 3866 07f7 01       		.byte	0x1
 3867 07f8 D904     		.2byte	0x4d9
 3868 07fa 81000000 		.4byte	0x81
 3869 07fe 02       		.uleb128 0x2
 3870 07ff 91       		.byte	0x91
 3871 0800 70       		.sleb128 -16
 3872 0801 00       		.byte	0
 3873 0802 10       		.uleb128 0x10
 3874 0803 B0040000 		.4byte	.LASF86
 3875 0807 01       		.byte	0x1
 3876 0808 0405     		.2byte	0x504
 3877 080a 00000000 		.4byte	.LFB58
 3878 080e 5C000000 		.4byte	.LFE58-.LFB58
 3879 0812 01       		.uleb128 0x1
 3880 0813 9C       		.byte	0x9c
 3881 0814 46080000 		.4byte	0x846
 3882 0818 12       		.uleb128 0x12
 3883 0819 1A030000 		.4byte	.LASF51
 3884 081d 01       		.byte	0x1
 3885 081e 0405     		.2byte	0x504
 3886 0820 81000000 		.4byte	0x81
 3887 0824 02       		.uleb128 0x2
 3888 0825 91       		.byte	0x91
 3889 0826 6C       		.sleb128 -20
 3890 0827 11       		.uleb128 0x11
 3891 0828 14050000 		.4byte	.LASF82
 3892 082c 01       		.byte	0x1
 3893 082d 0705     		.2byte	0x507
 3894 082f 6B000000 		.4byte	0x6b
 3895 0833 02       		.uleb128 0x2
 3896 0834 91       		.byte	0x91
 3897 0835 77       		.sleb128 -9
 3898 0836 11       		.uleb128 0x11
 3899 0837 08010000 		.4byte	.LASF83
 3900 083b 01       		.byte	0x1
 3901 083c 0805     		.2byte	0x508
 3902 083e 6B000000 		.4byte	0x6b
 3903 0842 02       		.uleb128 0x2
 3904 0843 91       		.byte	0x91
 3905 0844 76       		.sleb128 -10
 3906 0845 00       		.byte	0
 3907 0846 10       		.uleb128 0x10
 3908 0847 A8000000 		.4byte	.LASF87
 3909 084b 01       		.byte	0x1
 3910 084c 2F05     		.2byte	0x52f
 3911 084e 00000000 		.4byte	.LFB59
 3912 0852 5C000000 		.4byte	.LFE59-.LFB59
 3913 0856 01       		.uleb128 0x1
 3914 0857 9C       		.byte	0x9c
 3915 0858 8A080000 		.4byte	0x88a
 3916 085c 12       		.uleb128 0x12
 3917 085d 1A030000 		.4byte	.LASF51
 3918 0861 01       		.byte	0x1
 3919 0862 2F05     		.2byte	0x52f
 3920 0864 81000000 		.4byte	0x81
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\ccK6nYzE.s 			page 120


 3921 0868 02       		.uleb128 0x2
 3922 0869 91       		.byte	0x91
 3923 086a 6C       		.sleb128 -20
 3924 086b 11       		.uleb128 0x11
 3925 086c 14050000 		.4byte	.LASF82
 3926 0870 01       		.byte	0x1
 3927 0871 3105     		.2byte	0x531
 3928 0873 6B000000 		.4byte	0x6b
 3929 0877 02       		.uleb128 0x2
 3930 0878 91       		.byte	0x91
 3931 0879 77       		.sleb128 -9
 3932 087a 11       		.uleb128 0x11
 3933 087b 08010000 		.4byte	.LASF83
 3934 087f 01       		.byte	0x1
 3935 0880 3205     		.2byte	0x532
 3936 0882 6B000000 		.4byte	0x6b
 3937 0886 02       		.uleb128 0x2
 3938 0887 91       		.byte	0x91
 3939 0888 76       		.sleb128 -10
 3940 0889 00       		.byte	0
 3941 088a 13       		.uleb128 0x13
 3942 088b E3070000 		.4byte	.LASF88
 3943 088f 01       		.byte	0x1
 3944 0890 6105     		.2byte	0x561
 3945 0892 6B000000 		.4byte	0x6b
 3946 0896 00000000 		.4byte	.LFB60
 3947 089a AC000000 		.4byte	.LFE60-.LFB60
 3948 089e 01       		.uleb128 0x1
 3949 089f 9C       		.byte	0x9c
 3950 08a0 0C090000 		.4byte	0x90c
 3951 08a4 12       		.uleb128 0x12
 3952 08a5 E5030000 		.4byte	.LASF89
 3953 08a9 01       		.byte	0x1
 3954 08aa 6105     		.2byte	0x561
 3955 08ac 6B000000 		.4byte	0x6b
 3956 08b0 02       		.uleb128 0x2
 3957 08b1 91       		.byte	0x91
 3958 08b2 6F       		.sleb128 -17
 3959 08b3 12       		.uleb128 0x12
 3960 08b4 AA020000 		.4byte	.LASF90
 3961 08b8 01       		.byte	0x1
 3962 08b9 6105     		.2byte	0x561
 3963 08bb 6B000000 		.4byte	0x6b
 3964 08bf 02       		.uleb128 0x2
 3965 08c0 91       		.byte	0x91
 3966 08c1 6E       		.sleb128 -18
 3967 08c2 12       		.uleb128 0x12
 3968 08c3 DC080000 		.4byte	.LASF78
 3969 08c7 01       		.byte	0x1
 3970 08c8 6105     		.2byte	0x561
 3971 08ca 6B000000 		.4byte	0x6b
 3972 08ce 02       		.uleb128 0x2
 3973 08cf 91       		.byte	0x91
 3974 08d0 6D       		.sleb128 -19
 3975 08d1 0F       		.uleb128 0xf
 3976 08d2 6900     		.ascii	"i\000"
 3977 08d4 01       		.byte	0x1
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\ccK6nYzE.s 			page 121


 3978 08d5 6405     		.2byte	0x564
 3979 08d7 6B000000 		.4byte	0x6b
 3980 08db 02       		.uleb128 0x2
 3981 08dc 91       		.byte	0x91
 3982 08dd 77       		.sleb128 -9
 3983 08de 11       		.uleb128 0x11
 3984 08df 65080000 		.4byte	.LASF91
 3985 08e3 01       		.byte	0x1
 3986 08e4 6E05     		.2byte	0x56e
 3987 08e6 6B000000 		.4byte	0x6b
 3988 08ea 02       		.uleb128 0x2
 3989 08eb 91       		.byte	0x91
 3990 08ec 76       		.sleb128 -10
 3991 08ed 11       		.uleb128 0x11
 3992 08ee DE070000 		.4byte	.LASF92
 3993 08f2 01       		.byte	0x1
 3994 08f3 7005     		.2byte	0x570
 3995 08f5 6B000000 		.4byte	0x6b
 3996 08f9 02       		.uleb128 0x2
 3997 08fa 91       		.byte	0x91
 3998 08fb 75       		.sleb128 -11
 3999 08fc 11       		.uleb128 0x11
 4000 08fd 69060000 		.4byte	.LASF93
 4001 0901 01       		.byte	0x1
 4002 0902 7105     		.2byte	0x571
 4003 0904 6F010000 		.4byte	0x16f
 4004 0908 02       		.uleb128 0x2
 4005 0909 91       		.byte	0x91
 4006 090a 70       		.sleb128 -16
 4007 090b 00       		.byte	0
 4008 090c 15       		.uleb128 0x15
 4009 090d EA050000 		.4byte	.LASF94
 4010 0911 01       		.byte	0x1
 4011 0912 0006     		.2byte	0x600
 4012 0914 6B000000 		.4byte	0x6b
 4013 0918 00000000 		.4byte	.LFB61
 4014 091c 94010000 		.4byte	.LFE61-.LFB61
 4015 0920 01       		.uleb128 0x1
 4016 0921 9C       		.byte	0x9c
 4017 0922 DE090000 		.4byte	0x9de
 4018 0926 12       		.uleb128 0x12
 4019 0927 65080000 		.4byte	.LASF91
 4020 092b 01       		.byte	0x1
 4021 092c 0006     		.2byte	0x600
 4022 092e 6B000000 		.4byte	0x6b
 4023 0932 02       		.uleb128 0x2
 4024 0933 91       		.byte	0x91
 4025 0934 57       		.sleb128 -41
 4026 0935 12       		.uleb128 0x12
 4027 0936 E5030000 		.4byte	.LASF89
 4028 093a 01       		.byte	0x1
 4029 093b 0006     		.2byte	0x600
 4030 093d 6B000000 		.4byte	0x6b
 4031 0941 02       		.uleb128 0x2
 4032 0942 91       		.byte	0x91
 4033 0943 56       		.sleb128 -42
 4034 0944 12       		.uleb128 0x12
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\ccK6nYzE.s 			page 122


 4035 0945 AA020000 		.4byte	.LASF90
 4036 0949 01       		.byte	0x1
 4037 094a 0106     		.2byte	0x601
 4038 094c 6B000000 		.4byte	0x6b
 4039 0950 02       		.uleb128 0x2
 4040 0951 91       		.byte	0x91
 4041 0952 55       		.sleb128 -43
 4042 0953 12       		.uleb128 0x12
 4043 0954 09050000 		.4byte	.LASF95
 4044 0958 01       		.byte	0x1
 4045 0959 0106     		.2byte	0x601
 4046 095b 76000000 		.4byte	0x76
 4047 095f 02       		.uleb128 0x2
 4048 0960 91       		.byte	0x91
 4049 0961 52       		.sleb128 -46
 4050 0962 12       		.uleb128 0x12
 4051 0963 91080000 		.4byte	.LASF52
 4052 0967 01       		.byte	0x1
 4053 0968 0106     		.2byte	0x601
 4054 096a 6B000000 		.4byte	0x6b
 4055 096e 02       		.uleb128 0x2
 4056 096f 91       		.byte	0x91
 4057 0970 00       		.sleb128 0
 4058 0971 11       		.uleb128 0x11
 4059 0972 B0010000 		.4byte	.LASF96
 4060 0976 01       		.byte	0x1
 4061 0977 0506     		.2byte	0x605
 4062 0979 6B000000 		.4byte	0x6b
 4063 097d 02       		.uleb128 0x2
 4064 097e 91       		.byte	0x91
 4065 097f 6F       		.sleb128 -17
 4066 0980 11       		.uleb128 0x11
 4067 0981 32010000 		.4byte	.LASF97
 4068 0985 01       		.byte	0x1
 4069 0986 0606     		.2byte	0x606
 4070 0988 6B000000 		.4byte	0x6b
 4071 098c 02       		.uleb128 0x2
 4072 098d 91       		.byte	0x91
 4073 098e 67       		.sleb128 -25
 4074 098f 11       		.uleb128 0x11
 4075 0990 1D050000 		.4byte	.LASF98
 4076 0994 01       		.byte	0x1
 4077 0995 0B06     		.2byte	0x60b
 4078 0997 DE090000 		.4byte	0x9de
 4079 099b 05       		.uleb128 0x5
 4080 099c 03       		.byte	0x3
 4081 099d 24000000 		.4byte	CapSense_centroid.5402
 4082 09a1 11       		.uleb128 0x11
 4083 09a2 930A0000 		.4byte	.LASF99
 4084 09a6 01       		.byte	0x1
 4085 09a7 1206     		.2byte	0x612
 4086 09a9 6B000000 		.4byte	0x6b
 4087 09ad 02       		.uleb128 0x2
 4088 09ae 91       		.byte	0x91
 4089 09af 5B       		.sleb128 -37
 4090 09b0 11       		.uleb128 0x11
 4091 09b1 75070000 		.4byte	.LASF100
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\ccK6nYzE.s 			page 123


 4092 09b5 01       		.byte	0x1
 4093 09b6 1306     		.2byte	0x613
 4094 09b8 81000000 		.4byte	0x81
 4095 09bc 02       		.uleb128 0x2
 4096 09bd 91       		.byte	0x91
 4097 09be 60       		.sleb128 -32
 4098 09bf 11       		.uleb128 0x11
 4099 09c0 41080000 		.4byte	.LASF101
 4100 09c4 01       		.byte	0x1
 4101 09c5 1406     		.2byte	0x614
 4102 09c7 97000000 		.4byte	0x97
 4103 09cb 02       		.uleb128 0x2
 4104 09cc 91       		.byte	0x91
 4105 09cd 5C       		.sleb128 -36
 4106 09ce 11       		.uleb128 0x11
 4107 09cf 69060000 		.4byte	.LASF93
 4108 09d3 01       		.byte	0x1
 4109 09d4 1606     		.2byte	0x616
 4110 09d6 6F010000 		.4byte	0x16f
 4111 09da 02       		.uleb128 0x2
 4112 09db 91       		.byte	0x91
 4113 09dc 68       		.sleb128 -24
 4114 09dd 00       		.byte	0
 4115 09de 16       		.uleb128 0x16
 4116 09df 6B000000 		.4byte	0x6b
 4117 09e3 EE090000 		.4byte	0x9ee
 4118 09e7 17       		.uleb128 0x17
 4119 09e8 B7000000 		.4byte	0xb7
 4120 09ec 02       		.byte	0x2
 4121 09ed 00       		.byte	0
 4122 09ee 15       		.uleb128 0x15
 4123 09ef 98070000 		.4byte	.LASF102
 4124 09f3 01       		.byte	0x1
 4125 09f4 D306     		.2byte	0x6d3
 4126 09f6 76000000 		.4byte	0x76
 4127 09fa 00000000 		.4byte	.LFB62
 4128 09fe 5C010000 		.4byte	.LFE62-.LFB62
 4129 0a02 01       		.uleb128 0x1
 4130 0a03 9C       		.byte	0x9c
 4131 0a04 810A0000 		.4byte	0xa81
 4132 0a08 12       		.uleb128 0x12
 4133 0a09 1A030000 		.4byte	.LASF51
 4134 0a0d 01       		.byte	0x1
 4135 0a0e D306     		.2byte	0x6d3
 4136 0a10 81000000 		.4byte	0x81
 4137 0a14 02       		.uleb128 0x2
 4138 0a15 91       		.byte	0x91
 4139 0a16 64       		.sleb128 -28
 4140 0a17 11       		.uleb128 0x11
 4141 0a18 DF000000 		.4byte	.LASF103
 4142 0a1c 01       		.byte	0x1
 4143 0a1d DA06     		.2byte	0x6da
 4144 0a1f 6B000000 		.4byte	0x6b
 4145 0a23 02       		.uleb128 0x2
 4146 0a24 91       		.byte	0x91
 4147 0a25 68       		.sleb128 -24
 4148 0a26 11       		.uleb128 0x11
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\ccK6nYzE.s 			page 124


 4149 0a27 5A060000 		.4byte	.LASF104
 4150 0a2b 01       		.byte	0x1
 4151 0a2c DB06     		.2byte	0x6db
 4152 0a2e 6B000000 		.4byte	0x6b
 4153 0a32 02       		.uleb128 0x2
 4154 0a33 91       		.byte	0x91
 4155 0a34 6D       		.sleb128 -19
 4156 0a35 11       		.uleb128 0x11
 4157 0a36 BF020000 		.4byte	.LASF105
 4158 0a3a 01       		.byte	0x1
 4159 0a3b DC06     		.2byte	0x6dc
 4160 0a3d 6B000000 		.4byte	0x6b
 4161 0a41 02       		.uleb128 0x2
 4162 0a42 91       		.byte	0x91
 4163 0a43 6C       		.sleb128 -20
 4164 0a44 11       		.uleb128 0x11
 4165 0a45 65080000 		.4byte	.LASF91
 4166 0a49 01       		.byte	0x1
 4167 0a4a E606     		.2byte	0x6e6
 4168 0a4c 6B000000 		.4byte	0x6b
 4169 0a50 02       		.uleb128 0x2
 4170 0a51 91       		.byte	0x91
 4171 0a52 69       		.sleb128 -23
 4172 0a53 11       		.uleb128 0x11
 4173 0a54 930A0000 		.4byte	.LASF99
 4174 0a58 01       		.byte	0x1
 4175 0a59 E706     		.2byte	0x6e7
 4176 0a5b 76000000 		.4byte	0x76
 4177 0a5f 02       		.uleb128 0x2
 4178 0a60 91       		.byte	0x91
 4179 0a61 6E       		.sleb128 -18
 4180 0a62 11       		.uleb128 0x11
 4181 0a63 E5030000 		.4byte	.LASF89
 4182 0a67 01       		.byte	0x1
 4183 0a68 E806     		.2byte	0x6e8
 4184 0a6a 6B000000 		.4byte	0x6b
 4185 0a6e 02       		.uleb128 0x2
 4186 0a6f 91       		.byte	0x91
 4187 0a70 6B       		.sleb128 -21
 4188 0a71 11       		.uleb128 0x11
 4189 0a72 AA020000 		.4byte	.LASF90
 4190 0a76 01       		.byte	0x1
 4191 0a77 E906     		.2byte	0x6e9
 4192 0a79 6B000000 		.4byte	0x6b
 4193 0a7d 02       		.uleb128 0x2
 4194 0a7e 91       		.byte	0x91
 4195 0a7f 6A       		.sleb128 -22
 4196 0a80 00       		.byte	0
 4197 0a81 15       		.uleb128 0x15
 4198 0a82 F1090000 		.4byte	.LASF106
 4199 0a86 01       		.byte	0x1
 4200 0a87 9E07     		.2byte	0x79e
 4201 0a89 76000000 		.4byte	0x76
 4202 0a8d 00000000 		.4byte	.LFB63
 4203 0a91 98000000 		.4byte	.LFE63-.LFB63
 4204 0a95 01       		.uleb128 0x1
 4205 0a96 9C       		.byte	0x9c
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\ccK6nYzE.s 			page 125


 4206 0a97 E70A0000 		.4byte	0xae7
 4207 0a9b 12       		.uleb128 0x12
 4208 0a9c 1A030000 		.4byte	.LASF51
 4209 0aa0 01       		.byte	0x1
 4210 0aa1 9E07     		.2byte	0x79e
 4211 0aa3 81000000 		.4byte	0x81
 4212 0aa7 02       		.uleb128 0x2
 4213 0aa8 91       		.byte	0x91
 4214 0aa9 64       		.sleb128 -28
 4215 0aaa 11       		.uleb128 0x11
 4216 0aab 65080000 		.4byte	.LASF91
 4217 0aaf 01       		.byte	0x1
 4218 0ab0 AD07     		.2byte	0x7ad
 4219 0ab2 6B000000 		.4byte	0x6b
 4220 0ab6 02       		.uleb128 0x2
 4221 0ab7 91       		.byte	0x91
 4222 0ab8 6B       		.sleb128 -21
 4223 0ab9 11       		.uleb128 0x11
 4224 0aba 930A0000 		.4byte	.LASF99
 4225 0abe 01       		.byte	0x1
 4226 0abf AE07     		.2byte	0x7ae
 4227 0ac1 76000000 		.4byte	0x76
 4228 0ac5 02       		.uleb128 0x2
 4229 0ac6 91       		.byte	0x91
 4230 0ac7 6E       		.sleb128 -18
 4231 0ac8 11       		.uleb128 0x11
 4232 0ac9 E5030000 		.4byte	.LASF89
 4233 0acd 01       		.byte	0x1
 4234 0ace AF07     		.2byte	0x7af
 4235 0ad0 6B000000 		.4byte	0x6b
 4236 0ad4 02       		.uleb128 0x2
 4237 0ad5 91       		.byte	0x91
 4238 0ad6 6D       		.sleb128 -19
 4239 0ad7 11       		.uleb128 0x11
 4240 0ad8 AA020000 		.4byte	.LASF90
 4241 0adc 01       		.byte	0x1
 4242 0add B007     		.2byte	0x7b0
 4243 0adf 6B000000 		.4byte	0x6b
 4244 0ae3 02       		.uleb128 0x2
 4245 0ae4 91       		.byte	0x91
 4246 0ae5 6C       		.sleb128 -20
 4247 0ae6 00       		.byte	0
 4248 0ae7 13       		.uleb128 0x13
 4249 0ae8 1E0A0000 		.4byte	.LASF107
 4250 0aec 01       		.byte	0x1
 4251 0aed 4B09     		.2byte	0x94b
 4252 0aef 76000000 		.4byte	0x76
 4253 0af3 00000000 		.4byte	.LFB64
 4254 0af7 6A000000 		.4byte	.LFE64-.LFB64
 4255 0afb 01       		.uleb128 0x1
 4256 0afc 9C       		.byte	0x9c
 4257 0afd 3B0B0000 		.4byte	0xb3b
 4258 0b01 18       		.uleb128 0x18
 4259 0b02 783100   		.ascii	"x1\000"
 4260 0b05 01       		.byte	0x1
 4261 0b06 4B09     		.2byte	0x94b
 4262 0b08 76000000 		.4byte	0x76
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\ccK6nYzE.s 			page 126


 4263 0b0c 02       		.uleb128 0x2
 4264 0b0d 91       		.byte	0x91
 4265 0b0e 6E       		.sleb128 -18
 4266 0b0f 18       		.uleb128 0x18
 4267 0b10 783200   		.ascii	"x2\000"
 4268 0b13 01       		.byte	0x1
 4269 0b14 4B09     		.2byte	0x94b
 4270 0b16 76000000 		.4byte	0x76
 4271 0b1a 02       		.uleb128 0x2
 4272 0b1b 91       		.byte	0x91
 4273 0b1c 6C       		.sleb128 -20
 4274 0b1d 18       		.uleb128 0x18
 4275 0b1e 783300   		.ascii	"x3\000"
 4276 0b21 01       		.byte	0x1
 4277 0b22 4B09     		.2byte	0x94b
 4278 0b24 76000000 		.4byte	0x76
 4279 0b28 02       		.uleb128 0x2
 4280 0b29 91       		.byte	0x91
 4281 0b2a 6A       		.sleb128 -22
 4282 0b2b 0F       		.uleb128 0xf
 4283 0b2c 746D7000 		.ascii	"tmp\000"
 4284 0b30 01       		.byte	0x1
 4285 0b31 4D09     		.2byte	0x94d
 4286 0b33 76000000 		.4byte	0x76
 4287 0b37 02       		.uleb128 0x2
 4288 0b38 91       		.byte	0x91
 4289 0b39 76       		.sleb128 -10
 4290 0b3a 00       		.byte	0
 4291 0b3b 13       		.uleb128 0x13
 4292 0b3c 1B000000 		.4byte	.LASF108
 4293 0b40 01       		.byte	0x1
 4294 0b41 C309     		.2byte	0x9c3
 4295 0b43 76000000 		.4byte	0x76
 4296 0b47 00000000 		.4byte	.LFB65
 4297 0b4b 3C000000 		.4byte	.LFE65-.LFB65
 4298 0b4f 01       		.uleb128 0x1
 4299 0b50 9C       		.byte	0x9c
 4300 0b51 810B0000 		.4byte	0xb81
 4301 0b55 18       		.uleb128 0x18
 4302 0b56 783100   		.ascii	"x1\000"
 4303 0b59 01       		.byte	0x1
 4304 0b5a C309     		.2byte	0x9c3
 4305 0b5c 76000000 		.4byte	0x76
 4306 0b60 02       		.uleb128 0x2
 4307 0b61 91       		.byte	0x91
 4308 0b62 6E       		.sleb128 -18
 4309 0b63 18       		.uleb128 0x18
 4310 0b64 783200   		.ascii	"x2\000"
 4311 0b67 01       		.byte	0x1
 4312 0b68 C309     		.2byte	0x9c3
 4313 0b6a 76000000 		.4byte	0x76
 4314 0b6e 02       		.uleb128 0x2
 4315 0b6f 91       		.byte	0x91
 4316 0b70 6C       		.sleb128 -20
 4317 0b71 0F       		.uleb128 0xf
 4318 0b72 746D7000 		.ascii	"tmp\000"
 4319 0b76 01       		.byte	0x1
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\ccK6nYzE.s 			page 127


 4320 0b77 C509     		.2byte	0x9c5
 4321 0b79 81000000 		.4byte	0x81
 4322 0b7d 02       		.uleb128 0x2
 4323 0b7e 91       		.byte	0x91
 4324 0b7f 74       		.sleb128 -12
 4325 0b80 00       		.byte	0
 4326 0b81 13       		.uleb128 0x13
 4327 0b82 66050000 		.4byte	.LASF109
 4328 0b86 01       		.byte	0x1
 4329 0b87 AC0A     		.2byte	0xaac
 4330 0b89 81000000 		.4byte	0x81
 4331 0b8d 00000000 		.4byte	.LFB66
 4332 0b91 1C000000 		.4byte	.LFE66-.LFB66
 4333 0b95 01       		.uleb128 0x1
 4334 0b96 9C       		.byte	0x9c
 4335 0b97 AB0B0000 		.4byte	0xbab
 4336 0b9b 12       		.uleb128 0x12
 4337 0b9c 99040000 		.4byte	.LASF42
 4338 0ba0 01       		.byte	0x1
 4339 0ba1 AC0A     		.2byte	0xaac
 4340 0ba3 81000000 		.4byte	0x81
 4341 0ba7 02       		.uleb128 0x2
 4342 0ba8 91       		.byte	0x91
 4343 0ba9 74       		.sleb128 -12
 4344 0baa 00       		.byte	0
 4345 0bab 13       		.uleb128 0x13
 4346 0bac 13060000 		.4byte	.LASF110
 4347 0bb0 01       		.byte	0x1
 4348 0bb1 C60A     		.2byte	0xac6
 4349 0bb3 6B000000 		.4byte	0x6b
 4350 0bb7 00000000 		.4byte	.LFB67
 4351 0bbb 1C000000 		.4byte	.LFE67-.LFB67
 4352 0bbf 01       		.uleb128 0x1
 4353 0bc0 9C       		.byte	0x9c
 4354 0bc1 D50B0000 		.4byte	0xbd5
 4355 0bc5 12       		.uleb128 0x12
 4356 0bc6 99040000 		.4byte	.LASF42
 4357 0bca 01       		.byte	0x1
 4358 0bcb C60A     		.2byte	0xac6
 4359 0bcd 81000000 		.4byte	0x81
 4360 0bd1 02       		.uleb128 0x2
 4361 0bd2 91       		.byte	0x91
 4362 0bd3 74       		.sleb128 -12
 4363 0bd4 00       		.byte	0
 4364 0bd5 13       		.uleb128 0x13
 4365 0bd6 3C0A0000 		.4byte	.LASF111
 4366 0bda 01       		.byte	0x1
 4367 0bdb E00A     		.2byte	0xae0
 4368 0bdd 6B000000 		.4byte	0x6b
 4369 0be1 00000000 		.4byte	.LFB68
 4370 0be5 1C000000 		.4byte	.LFE68-.LFB68
 4371 0be9 01       		.uleb128 0x1
 4372 0bea 9C       		.byte	0x9c
 4373 0beb FF0B0000 		.4byte	0xbff
 4374 0bef 12       		.uleb128 0x12
 4375 0bf0 1A030000 		.4byte	.LASF51
 4376 0bf4 01       		.byte	0x1
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\ccK6nYzE.s 			page 128


 4377 0bf5 E00A     		.2byte	0xae0
 4378 0bf7 81000000 		.4byte	0x81
 4379 0bfb 02       		.uleb128 0x2
 4380 0bfc 91       		.byte	0x91
 4381 0bfd 74       		.sleb128 -12
 4382 0bfe 00       		.byte	0
 4383 0bff 19       		.uleb128 0x19
 4384 0c00 09080000 		.4byte	.LASF112
 4385 0c04 01       		.byte	0x1
 4386 0c05 FA0A     		.2byte	0xafa
 4387 0c07 00000000 		.4byte	.LFB69
 4388 0c0b 14000000 		.4byte	.LFE69-.LFB69
 4389 0c0f 01       		.uleb128 0x1
 4390 0c10 9C       		.byte	0x9c
 4391 0c11 19       		.uleb128 0x19
 4392 0c12 84030000 		.4byte	.LASF113
 4393 0c16 01       		.byte	0x1
 4394 0c17 130B     		.2byte	0xb13
 4395 0c19 00000000 		.4byte	.LFB70
 4396 0c1d 14000000 		.4byte	.LFE70-.LFB70
 4397 0c21 01       		.uleb128 0x1
 4398 0c22 9C       		.byte	0x9c
 4399 0c23 16       		.uleb128 0x16
 4400 0c24 76000000 		.4byte	0x76
 4401 0c28 330C0000 		.4byte	0xc33
 4402 0c2c 17       		.uleb128 0x17
 4403 0c2d B7000000 		.4byte	0xb7
 4404 0c31 00       		.byte	0
 4405 0c32 00       		.byte	0
 4406 0c33 1A       		.uleb128 0x1a
 4407 0c34 92090000 		.4byte	.LASF114
 4408 0c38 01       		.byte	0x1
 4409 0c39 5D       		.byte	0x5d
 4410 0c3a 440C0000 		.4byte	0xc44
 4411 0c3e 05       		.uleb128 0x5
 4412 0c3f 03       		.byte	0x3
 4413 0c40 08000000 		.4byte	CapSense_centroidMult
 4414 0c44 08       		.uleb128 0x8
 4415 0c45 230C0000 		.4byte	0xc23
 4416 0c49 1A       		.uleb128 0x1a
 4417 0c4a 21030000 		.4byte	.LASF115
 4418 0c4e 01       		.byte	0x1
 4419 0c4f 61       		.byte	0x61
 4420 0c50 64070000 		.4byte	0x764
 4421 0c54 05       		.uleb128 0x5
 4422 0c55 03       		.byte	0x3
 4423 0c56 0C000000 		.4byte	CapSense_posFiltersMask
 4424 0c5a 1A       		.uleb128 0x1a
 4425 0c5b 64010000 		.4byte	.LASF116
 4426 0c5f 01       		.byte	0x1
 4427 0c60 65       		.byte	0x65
 4428 0c61 DE090000 		.4byte	0x9de
 4429 0c65 05       		.uleb128 0x5
 4430 0c66 03       		.byte	0x3
 4431 0c67 10000000 		.4byte	CapSense_posFiltersData
 4432 0c6b 16       		.uleb128 0x16
 4433 0c6c 76000000 		.4byte	0x76
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\ccK6nYzE.s 			page 129


 4434 0c70 7B0C0000 		.4byte	0xc7b
 4435 0c74 17       		.uleb128 0x17
 4436 0c75 B7000000 		.4byte	0xb7
 4437 0c79 04       		.byte	0x4
 4438 0c7a 00       		.byte	0
 4439 0c7b 1B       		.uleb128 0x1b
 4440 0c7c 00060000 		.4byte	.LASF117
 4441 0c80 01       		.byte	0x1
 4442 0c81 2C       		.byte	0x2c
 4443 0c82 6B0C0000 		.4byte	0xc6b
 4444 0c86 1B       		.uleb128 0x1b
 4445 0c87 00030000 		.4byte	.LASF118
 4446 0c8b 01       		.byte	0x1
 4447 0c8c 2D       		.byte	0x2d
 4448 0c8d 64070000 		.4byte	0x764
 4449 0c91 16       		.uleb128 0x16
 4450 0c92 6B000000 		.4byte	0x6b
 4451 0c96 A10C0000 		.4byte	0xca1
 4452 0c9a 17       		.uleb128 0x17
 4453 0c9b B7000000 		.4byte	0xb7
 4454 0c9f 04       		.byte	0x4
 4455 0ca0 00       		.byte	0
 4456 0ca1 1B       		.uleb128 0x1b
 4457 0ca2 52030000 		.4byte	.LASF119
 4458 0ca6 01       		.byte	0x1
 4459 0ca7 2E       		.byte	0x2e
 4460 0ca8 AC0C0000 		.4byte	0xcac
 4461 0cac 08       		.uleb128 0x8
 4462 0cad 910C0000 		.4byte	0xc91
 4463 0cb1 1C       		.uleb128 0x1c
 4464 0cb2 4D080000 		.4byte	.LASF120
 4465 0cb6 01       		.byte	0x1
 4466 0cb7 34       		.byte	0x34
 4467 0cb8 6B0C0000 		.4byte	0xc6b
 4468 0cbc 05       		.uleb128 0x5
 4469 0cbd 03       		.byte	0x3
 4470 0cbe 00000000 		.4byte	CapSense_sensorBaseline
 4471 0cc2 1C       		.uleb128 0x1c
 4472 0cc3 00000000 		.4byte	.LASF121
 4473 0cc7 01       		.byte	0x1
 4474 0cc8 35       		.byte	0x35
 4475 0cc9 910C0000 		.4byte	0xc91
 4476 0ccd 05       		.uleb128 0x5
 4477 0cce 03       		.byte	0x3
 4478 0ccf 00000000 		.4byte	CapSense_sensorBaselineLow
 4479 0cd3 1C       		.uleb128 0x1c
 4480 0cd4 08020000 		.4byte	.LASF122
 4481 0cd8 01       		.byte	0x1
 4482 0cd9 36       		.byte	0x36
 4483 0cda 910C0000 		.4byte	0xc91
 4484 0cde 05       		.uleb128 0x5
 4485 0cdf 03       		.byte	0x3
 4486 0ce0 00000000 		.4byte	CapSense_sensorSignal
 4487 0ce4 1C       		.uleb128 0x1c
 4488 0ce5 9C0A0000 		.4byte	.LASF123
 4489 0ce9 01       		.byte	0x1
 4490 0cea 37       		.byte	0x37
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\ccK6nYzE.s 			page 130


 4491 0ceb 64070000 		.4byte	0x764
 4492 0cef 05       		.uleb128 0x5
 4493 0cf0 03       		.byte	0x3
 4494 0cf1 00000000 		.4byte	CapSense_sensorOnMask
 4495 0cf5 1C       		.uleb128 0x1c
 4496 0cf6 1E020000 		.4byte	.LASF124
 4497 0cfa 01       		.byte	0x1
 4498 0cfb 39       		.byte	0x39
 4499 0cfc 910C0000 		.4byte	0xc91
 4500 0d00 05       		.uleb128 0x5
 4501 0d01 03       		.byte	0x3
 4502 0d02 00000000 		.4byte	CapSense_lowBaselineResetCnt
 4503 0d06 1C       		.uleb128 0x1c
 4504 0d07 27080000 		.4byte	.LASF125
 4505 0d0b 01       		.byte	0x1
 4506 0d0c 3A       		.byte	0x3a
 4507 0d0d 910C0000 		.4byte	0xc91
 4508 0d11 05       		.uleb128 0x5
 4509 0d12 03       		.byte	0x3
 4510 0d13 00000000 		.4byte	CapSense_lowBaselineReset
 4511 0d17 1C       		.uleb128 0x1c
 4512 0d18 39030000 		.4byte	.LASF126
 4513 0d1c 01       		.byte	0x1
 4514 0d1d 49       		.byte	0x49
 4515 0d1e 64070000 		.4byte	0x764
 4516 0d22 05       		.uleb128 0x5
 4517 0d23 03       		.byte	0x3
 4518 0d24 00000000 		.4byte	CapSense_fingerThreshold
 4519 0d28 1C       		.uleb128 0x1c
 4520 0d29 07090000 		.4byte	.LASF127
 4521 0d2d 01       		.byte	0x1
 4522 0d2e 4B       		.byte	0x4b
 4523 0d2f 64070000 		.4byte	0x764
 4524 0d33 05       		.uleb128 0x5
 4525 0d34 03       		.byte	0x3
 4526 0d35 00000000 		.4byte	CapSense_noiseThreshold
 4527 0d39 1C       		.uleb128 0x1c
 4528 0d3a 67040000 		.4byte	.LASF128
 4529 0d3e 01       		.byte	0x1
 4530 0d3f 4D       		.byte	0x4d
 4531 0d40 64070000 		.4byte	0x764
 4532 0d44 05       		.uleb128 0x5
 4533 0d45 03       		.byte	0x3
 4534 0d46 00000000 		.4byte	CapSense_negativeNoiseThreshold
 4535 0d4a 1C       		.uleb128 0x1c
 4536 0d4b 8A020000 		.4byte	.LASF129
 4537 0d4f 01       		.byte	0x1
 4538 0d50 4F       		.byte	0x4f
 4539 0d51 64070000 		.4byte	0x764
 4540 0d55 05       		.uleb128 0x5
 4541 0d56 03       		.byte	0x3
 4542 0d57 00000000 		.4byte	CapSense_hysteresis
 4543 0d5b 1C       		.uleb128 0x1c
 4544 0d5c 7C010000 		.4byte	.LASF130
 4545 0d60 01       		.byte	0x1
 4546 0d61 51       		.byte	0x51
 4547 0d62 64070000 		.4byte	0x764
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\ccK6nYzE.s 			page 131


 4548 0d66 05       		.uleb128 0x5
 4549 0d67 03       		.byte	0x3
 4550 0d68 00000000 		.4byte	CapSense_debounce
 4551 0d6c 1C       		.uleb128 0x1c
 4552 0d6d 3B020000 		.4byte	.LASF131
 4553 0d71 01       		.byte	0x1
 4554 0d72 55       		.byte	0x55
 4555 0d73 7D0D0000 		.4byte	0xd7d
 4556 0d77 05       		.uleb128 0x5
 4557 0d78 03       		.byte	0x3
 4558 0d79 00000000 		.4byte	CapSense_rawDataIndex
 4559 0d7d 08       		.uleb128 0x8
 4560 0d7e 64070000 		.4byte	0x764
 4561 0d82 1C       		.uleb128 0x1c
 4562 0d83 4E040000 		.4byte	.LASF132
 4563 0d87 01       		.byte	0x1
 4564 0d88 59       		.byte	0x59
 4565 0d89 930D0000 		.4byte	0xd93
 4566 0d8d 05       		.uleb128 0x5
 4567 0d8e 03       		.byte	0x3
 4568 0d8f 00000000 		.4byte	CapSense_numberOfSensors
 4569 0d93 08       		.uleb128 0x8
 4570 0d94 64070000 		.4byte	0x764
 4571 0d98 1C       		.uleb128 0x1c
 4572 0d99 7B0A0000 		.4byte	.LASF133
 4573 0d9d 01       		.byte	0x1
 4574 0d9e 27       		.byte	0x27
 4575 0d9f 6B0C0000 		.4byte	0xc6b
 4576 0da3 05       		.uleb128 0x5
 4577 0da4 03       		.byte	0x3
 4578 0da5 00000000 		.4byte	CapSense_rawFilterData1
 4579 0da9 1B       		.uleb128 0x1b
 4580 0daa E8000000 		.4byte	.LASF134
 4581 0dae 01       		.byte	0x1
 4582 0daf 41       		.byte	0x41
 4583 0db0 48020000 		.4byte	0x248
 4584 0db4 1C       		.uleb128 0x1c
 4585 0db5 AE090000 		.4byte	.LASF135
 4586 0db9 01       		.byte	0x1
 4587 0dba 45       		.byte	0x45
 4588 0dbb 6B000000 		.4byte	0x6b
 4589 0dbf 05       		.uleb128 0x5
 4590 0dc0 03       		.byte	0x3
 4591 0dc1 00000000 		.4byte	CapSense_enableRawFilters
 4592 0dc5 00       		.byte	0
 4593              		.section	.debug_abbrev,"",%progbits
 4594              	.Ldebug_abbrev0:
 4595 0000 01       		.uleb128 0x1
 4596 0001 11       		.uleb128 0x11
 4597 0002 01       		.byte	0x1
 4598 0003 25       		.uleb128 0x25
 4599 0004 0E       		.uleb128 0xe
 4600 0005 13       		.uleb128 0x13
 4601 0006 0B       		.uleb128 0xb
 4602 0007 03       		.uleb128 0x3
 4603 0008 0E       		.uleb128 0xe
 4604 0009 1B       		.uleb128 0x1b
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\ccK6nYzE.s 			page 132


 4605 000a 0E       		.uleb128 0xe
 4606 000b 55       		.uleb128 0x55
 4607 000c 17       		.uleb128 0x17
 4608 000d 11       		.uleb128 0x11
 4609 000e 01       		.uleb128 0x1
 4610 000f 10       		.uleb128 0x10
 4611 0010 17       		.uleb128 0x17
 4612 0011 00       		.byte	0
 4613 0012 00       		.byte	0
 4614 0013 02       		.uleb128 0x2
 4615 0014 24       		.uleb128 0x24
 4616 0015 00       		.byte	0
 4617 0016 0B       		.uleb128 0xb
 4618 0017 0B       		.uleb128 0xb
 4619 0018 3E       		.uleb128 0x3e
 4620 0019 0B       		.uleb128 0xb
 4621 001a 03       		.uleb128 0x3
 4622 001b 0E       		.uleb128 0xe
 4623 001c 00       		.byte	0
 4624 001d 00       		.byte	0
 4625 001e 03       		.uleb128 0x3
 4626 001f 24       		.uleb128 0x24
 4627 0020 00       		.byte	0
 4628 0021 0B       		.uleb128 0xb
 4629 0022 0B       		.uleb128 0xb
 4630 0023 3E       		.uleb128 0x3e
 4631 0024 0B       		.uleb128 0xb
 4632 0025 03       		.uleb128 0x3
 4633 0026 08       		.uleb128 0x8
 4634 0027 00       		.byte	0
 4635 0028 00       		.byte	0
 4636 0029 04       		.uleb128 0x4
 4637 002a 16       		.uleb128 0x16
 4638 002b 00       		.byte	0
 4639 002c 03       		.uleb128 0x3
 4640 002d 0E       		.uleb128 0xe
 4641 002e 3A       		.uleb128 0x3a
 4642 002f 0B       		.uleb128 0xb
 4643 0030 3B       		.uleb128 0x3b
 4644 0031 0B       		.uleb128 0xb
 4645 0032 49       		.uleb128 0x49
 4646 0033 13       		.uleb128 0x13
 4647 0034 00       		.byte	0
 4648 0035 00       		.byte	0
 4649 0036 05       		.uleb128 0x5
 4650 0037 13       		.uleb128 0x13
 4651 0038 01       		.byte	0x1
 4652 0039 0B       		.uleb128 0xb
 4653 003a 0B       		.uleb128 0xb
 4654 003b 3A       		.uleb128 0x3a
 4655 003c 0B       		.uleb128 0xb
 4656 003d 3B       		.uleb128 0x3b
 4657 003e 0B       		.uleb128 0xb
 4658 003f 01       		.uleb128 0x1
 4659 0040 13       		.uleb128 0x13
 4660 0041 00       		.byte	0
 4661 0042 00       		.byte	0
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\ccK6nYzE.s 			page 133


 4662 0043 06       		.uleb128 0x6
 4663 0044 0D       		.uleb128 0xd
 4664 0045 00       		.byte	0
 4665 0046 03       		.uleb128 0x3
 4666 0047 0E       		.uleb128 0xe
 4667 0048 3A       		.uleb128 0x3a
 4668 0049 0B       		.uleb128 0xb
 4669 004a 3B       		.uleb128 0x3b
 4670 004b 0B       		.uleb128 0xb
 4671 004c 49       		.uleb128 0x49
 4672 004d 13       		.uleb128 0x13
 4673 004e 38       		.uleb128 0x38
 4674 004f 0B       		.uleb128 0xb
 4675 0050 00       		.byte	0
 4676 0051 00       		.byte	0
 4677 0052 07       		.uleb128 0x7
 4678 0053 0F       		.uleb128 0xf
 4679 0054 00       		.byte	0
 4680 0055 0B       		.uleb128 0xb
 4681 0056 0B       		.uleb128 0xb
 4682 0057 49       		.uleb128 0x49
 4683 0058 13       		.uleb128 0x13
 4684 0059 00       		.byte	0
 4685 005a 00       		.byte	0
 4686 005b 08       		.uleb128 0x8
 4687 005c 26       		.uleb128 0x26
 4688 005d 00       		.byte	0
 4689 005e 49       		.uleb128 0x49
 4690 005f 13       		.uleb128 0x13
 4691 0060 00       		.byte	0
 4692 0061 00       		.byte	0
 4693 0062 09       		.uleb128 0x9
 4694 0063 15       		.uleb128 0x15
 4695 0064 01       		.byte	0x1
 4696 0065 27       		.uleb128 0x27
 4697 0066 19       		.uleb128 0x19
 4698 0067 49       		.uleb128 0x49
 4699 0068 13       		.uleb128 0x13
 4700 0069 01       		.uleb128 0x1
 4701 006a 13       		.uleb128 0x13
 4702 006b 00       		.byte	0
 4703 006c 00       		.byte	0
 4704 006d 0A       		.uleb128 0xa
 4705 006e 05       		.uleb128 0x5
 4706 006f 00       		.byte	0
 4707 0070 49       		.uleb128 0x49
 4708 0071 13       		.uleb128 0x13
 4709 0072 00       		.byte	0
 4710 0073 00       		.byte	0
 4711 0074 0B       		.uleb128 0xb
 4712 0075 15       		.uleb128 0x15
 4713 0076 01       		.byte	0x1
 4714 0077 27       		.uleb128 0x27
 4715 0078 19       		.uleb128 0x19
 4716 0079 01       		.uleb128 0x1
 4717 007a 13       		.uleb128 0x13
 4718 007b 00       		.byte	0
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\ccK6nYzE.s 			page 134


 4719 007c 00       		.byte	0
 4720 007d 0C       		.uleb128 0xc
 4721 007e 2E       		.uleb128 0x2e
 4722 007f 01       		.byte	0x1
 4723 0080 3F       		.uleb128 0x3f
 4724 0081 19       		.uleb128 0x19
 4725 0082 03       		.uleb128 0x3
 4726 0083 0E       		.uleb128 0xe
 4727 0084 3A       		.uleb128 0x3a
 4728 0085 0B       		.uleb128 0xb
 4729 0086 3B       		.uleb128 0x3b
 4730 0087 0B       		.uleb128 0xb
 4731 0088 27       		.uleb128 0x27
 4732 0089 19       		.uleb128 0x19
 4733 008a 11       		.uleb128 0x11
 4734 008b 01       		.uleb128 0x1
 4735 008c 12       		.uleb128 0x12
 4736 008d 06       		.uleb128 0x6
 4737 008e 40       		.uleb128 0x40
 4738 008f 18       		.uleb128 0x18
 4739 0090 9742     		.uleb128 0x2117
 4740 0092 19       		.uleb128 0x19
 4741 0093 01       		.uleb128 0x1
 4742 0094 13       		.uleb128 0x13
 4743 0095 00       		.byte	0
 4744 0096 00       		.byte	0
 4745 0097 0D       		.uleb128 0xd
 4746 0098 05       		.uleb128 0x5
 4747 0099 00       		.byte	0
 4748 009a 03       		.uleb128 0x3
 4749 009b 0E       		.uleb128 0xe
 4750 009c 3A       		.uleb128 0x3a
 4751 009d 0B       		.uleb128 0xb
 4752 009e 3B       		.uleb128 0x3b
 4753 009f 0B       		.uleb128 0xb
 4754 00a0 49       		.uleb128 0x49
 4755 00a1 13       		.uleb128 0x13
 4756 00a2 02       		.uleb128 0x2
 4757 00a3 18       		.uleb128 0x18
 4758 00a4 00       		.byte	0
 4759 00a5 00       		.byte	0
 4760 00a6 0E       		.uleb128 0xe
 4761 00a7 2E       		.uleb128 0x2e
 4762 00a8 01       		.byte	0x1
 4763 00a9 3F       		.uleb128 0x3f
 4764 00aa 19       		.uleb128 0x19
 4765 00ab 03       		.uleb128 0x3
 4766 00ac 0E       		.uleb128 0xe
 4767 00ad 3A       		.uleb128 0x3a
 4768 00ae 0B       		.uleb128 0xb
 4769 00af 3B       		.uleb128 0x3b
 4770 00b0 0B       		.uleb128 0xb
 4771 00b1 27       		.uleb128 0x27
 4772 00b2 19       		.uleb128 0x19
 4773 00b3 11       		.uleb128 0x11
 4774 00b4 01       		.uleb128 0x1
 4775 00b5 12       		.uleb128 0x12
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\ccK6nYzE.s 			page 135


 4776 00b6 06       		.uleb128 0x6
 4777 00b7 40       		.uleb128 0x40
 4778 00b8 18       		.uleb128 0x18
 4779 00b9 9642     		.uleb128 0x2116
 4780 00bb 19       		.uleb128 0x19
 4781 00bc 01       		.uleb128 0x1
 4782 00bd 13       		.uleb128 0x13
 4783 00be 00       		.byte	0
 4784 00bf 00       		.byte	0
 4785 00c0 0F       		.uleb128 0xf
 4786 00c1 34       		.uleb128 0x34
 4787 00c2 00       		.byte	0
 4788 00c3 03       		.uleb128 0x3
 4789 00c4 08       		.uleb128 0x8
 4790 00c5 3A       		.uleb128 0x3a
 4791 00c6 0B       		.uleb128 0xb
 4792 00c7 3B       		.uleb128 0x3b
 4793 00c8 05       		.uleb128 0x5
 4794 00c9 49       		.uleb128 0x49
 4795 00ca 13       		.uleb128 0x13
 4796 00cb 02       		.uleb128 0x2
 4797 00cc 18       		.uleb128 0x18
 4798 00cd 00       		.byte	0
 4799 00ce 00       		.byte	0
 4800 00cf 10       		.uleb128 0x10
 4801 00d0 2E       		.uleb128 0x2e
 4802 00d1 01       		.byte	0x1
 4803 00d2 3F       		.uleb128 0x3f
 4804 00d3 19       		.uleb128 0x19
 4805 00d4 03       		.uleb128 0x3
 4806 00d5 0E       		.uleb128 0xe
 4807 00d6 3A       		.uleb128 0x3a
 4808 00d7 0B       		.uleb128 0xb
 4809 00d8 3B       		.uleb128 0x3b
 4810 00d9 05       		.uleb128 0x5
 4811 00da 27       		.uleb128 0x27
 4812 00db 19       		.uleb128 0x19
 4813 00dc 11       		.uleb128 0x11
 4814 00dd 01       		.uleb128 0x1
 4815 00de 12       		.uleb128 0x12
 4816 00df 06       		.uleb128 0x6
 4817 00e0 40       		.uleb128 0x40
 4818 00e1 18       		.uleb128 0x18
 4819 00e2 9642     		.uleb128 0x2116
 4820 00e4 19       		.uleb128 0x19
 4821 00e5 01       		.uleb128 0x1
 4822 00e6 13       		.uleb128 0x13
 4823 00e7 00       		.byte	0
 4824 00e8 00       		.byte	0
 4825 00e9 11       		.uleb128 0x11
 4826 00ea 34       		.uleb128 0x34
 4827 00eb 00       		.byte	0
 4828 00ec 03       		.uleb128 0x3
 4829 00ed 0E       		.uleb128 0xe
 4830 00ee 3A       		.uleb128 0x3a
 4831 00ef 0B       		.uleb128 0xb
 4832 00f0 3B       		.uleb128 0x3b
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\ccK6nYzE.s 			page 136


 4833 00f1 05       		.uleb128 0x5
 4834 00f2 49       		.uleb128 0x49
 4835 00f3 13       		.uleb128 0x13
 4836 00f4 02       		.uleb128 0x2
 4837 00f5 18       		.uleb128 0x18
 4838 00f6 00       		.byte	0
 4839 00f7 00       		.byte	0
 4840 00f8 12       		.uleb128 0x12
 4841 00f9 05       		.uleb128 0x5
 4842 00fa 00       		.byte	0
 4843 00fb 03       		.uleb128 0x3
 4844 00fc 0E       		.uleb128 0xe
 4845 00fd 3A       		.uleb128 0x3a
 4846 00fe 0B       		.uleb128 0xb
 4847 00ff 3B       		.uleb128 0x3b
 4848 0100 05       		.uleb128 0x5
 4849 0101 49       		.uleb128 0x49
 4850 0102 13       		.uleb128 0x13
 4851 0103 02       		.uleb128 0x2
 4852 0104 18       		.uleb128 0x18
 4853 0105 00       		.byte	0
 4854 0106 00       		.byte	0
 4855 0107 13       		.uleb128 0x13
 4856 0108 2E       		.uleb128 0x2e
 4857 0109 01       		.byte	0x1
 4858 010a 3F       		.uleb128 0x3f
 4859 010b 19       		.uleb128 0x19
 4860 010c 03       		.uleb128 0x3
 4861 010d 0E       		.uleb128 0xe
 4862 010e 3A       		.uleb128 0x3a
 4863 010f 0B       		.uleb128 0xb
 4864 0110 3B       		.uleb128 0x3b
 4865 0111 05       		.uleb128 0x5
 4866 0112 27       		.uleb128 0x27
 4867 0113 19       		.uleb128 0x19
 4868 0114 49       		.uleb128 0x49
 4869 0115 13       		.uleb128 0x13
 4870 0116 11       		.uleb128 0x11
 4871 0117 01       		.uleb128 0x1
 4872 0118 12       		.uleb128 0x12
 4873 0119 06       		.uleb128 0x6
 4874 011a 40       		.uleb128 0x40
 4875 011b 18       		.uleb128 0x18
 4876 011c 9742     		.uleb128 0x2117
 4877 011e 19       		.uleb128 0x19
 4878 011f 01       		.uleb128 0x1
 4879 0120 13       		.uleb128 0x13
 4880 0121 00       		.byte	0
 4881 0122 00       		.byte	0
 4882 0123 14       		.uleb128 0x14
 4883 0124 2E       		.uleb128 0x2e
 4884 0125 01       		.byte	0x1
 4885 0126 3F       		.uleb128 0x3f
 4886 0127 19       		.uleb128 0x19
 4887 0128 03       		.uleb128 0x3
 4888 0129 0E       		.uleb128 0xe
 4889 012a 3A       		.uleb128 0x3a
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\ccK6nYzE.s 			page 137


 4890 012b 0B       		.uleb128 0xb
 4891 012c 3B       		.uleb128 0x3b
 4892 012d 05       		.uleb128 0x5
 4893 012e 27       		.uleb128 0x27
 4894 012f 19       		.uleb128 0x19
 4895 0130 11       		.uleb128 0x11
 4896 0131 01       		.uleb128 0x1
 4897 0132 12       		.uleb128 0x12
 4898 0133 06       		.uleb128 0x6
 4899 0134 40       		.uleb128 0x40
 4900 0135 18       		.uleb128 0x18
 4901 0136 9742     		.uleb128 0x2117
 4902 0138 19       		.uleb128 0x19
 4903 0139 01       		.uleb128 0x1
 4904 013a 13       		.uleb128 0x13
 4905 013b 00       		.byte	0
 4906 013c 00       		.byte	0
 4907 013d 15       		.uleb128 0x15
 4908 013e 2E       		.uleb128 0x2e
 4909 013f 01       		.byte	0x1
 4910 0140 3F       		.uleb128 0x3f
 4911 0141 19       		.uleb128 0x19
 4912 0142 03       		.uleb128 0x3
 4913 0143 0E       		.uleb128 0xe
 4914 0144 3A       		.uleb128 0x3a
 4915 0145 0B       		.uleb128 0xb
 4916 0146 3B       		.uleb128 0x3b
 4917 0147 05       		.uleb128 0x5
 4918 0148 27       		.uleb128 0x27
 4919 0149 19       		.uleb128 0x19
 4920 014a 49       		.uleb128 0x49
 4921 014b 13       		.uleb128 0x13
 4922 014c 11       		.uleb128 0x11
 4923 014d 01       		.uleb128 0x1
 4924 014e 12       		.uleb128 0x12
 4925 014f 06       		.uleb128 0x6
 4926 0150 40       		.uleb128 0x40
 4927 0151 18       		.uleb128 0x18
 4928 0152 9642     		.uleb128 0x2116
 4929 0154 19       		.uleb128 0x19
 4930 0155 01       		.uleb128 0x1
 4931 0156 13       		.uleb128 0x13
 4932 0157 00       		.byte	0
 4933 0158 00       		.byte	0
 4934 0159 16       		.uleb128 0x16
 4935 015a 01       		.uleb128 0x1
 4936 015b 01       		.byte	0x1
 4937 015c 49       		.uleb128 0x49
 4938 015d 13       		.uleb128 0x13
 4939 015e 01       		.uleb128 0x1
 4940 015f 13       		.uleb128 0x13
 4941 0160 00       		.byte	0
 4942 0161 00       		.byte	0
 4943 0162 17       		.uleb128 0x17
 4944 0163 21       		.uleb128 0x21
 4945 0164 00       		.byte	0
 4946 0165 49       		.uleb128 0x49
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\ccK6nYzE.s 			page 138


 4947 0166 13       		.uleb128 0x13
 4948 0167 2F       		.uleb128 0x2f
 4949 0168 0B       		.uleb128 0xb
 4950 0169 00       		.byte	0
 4951 016a 00       		.byte	0
 4952 016b 18       		.uleb128 0x18
 4953 016c 05       		.uleb128 0x5
 4954 016d 00       		.byte	0
 4955 016e 03       		.uleb128 0x3
 4956 016f 08       		.uleb128 0x8
 4957 0170 3A       		.uleb128 0x3a
 4958 0171 0B       		.uleb128 0xb
 4959 0172 3B       		.uleb128 0x3b
 4960 0173 05       		.uleb128 0x5
 4961 0174 49       		.uleb128 0x49
 4962 0175 13       		.uleb128 0x13
 4963 0176 02       		.uleb128 0x2
 4964 0177 18       		.uleb128 0x18
 4965 0178 00       		.byte	0
 4966 0179 00       		.byte	0
 4967 017a 19       		.uleb128 0x19
 4968 017b 2E       		.uleb128 0x2e
 4969 017c 00       		.byte	0
 4970 017d 3F       		.uleb128 0x3f
 4971 017e 19       		.uleb128 0x19
 4972 017f 03       		.uleb128 0x3
 4973 0180 0E       		.uleb128 0xe
 4974 0181 3A       		.uleb128 0x3a
 4975 0182 0B       		.uleb128 0xb
 4976 0183 3B       		.uleb128 0x3b
 4977 0184 05       		.uleb128 0x5
 4978 0185 27       		.uleb128 0x27
 4979 0186 19       		.uleb128 0x19
 4980 0187 11       		.uleb128 0x11
 4981 0188 01       		.uleb128 0x1
 4982 0189 12       		.uleb128 0x12
 4983 018a 06       		.uleb128 0x6
 4984 018b 40       		.uleb128 0x40
 4985 018c 18       		.uleb128 0x18
 4986 018d 9742     		.uleb128 0x2117
 4987 018f 19       		.uleb128 0x19
 4988 0190 00       		.byte	0
 4989 0191 00       		.byte	0
 4990 0192 1A       		.uleb128 0x1a
 4991 0193 34       		.uleb128 0x34
 4992 0194 00       		.byte	0
 4993 0195 03       		.uleb128 0x3
 4994 0196 0E       		.uleb128 0xe
 4995 0197 3A       		.uleb128 0x3a
 4996 0198 0B       		.uleb128 0xb
 4997 0199 3B       		.uleb128 0x3b
 4998 019a 0B       		.uleb128 0xb
 4999 019b 49       		.uleb128 0x49
 5000 019c 13       		.uleb128 0x13
 5001 019d 02       		.uleb128 0x2
 5002 019e 18       		.uleb128 0x18
 5003 019f 00       		.byte	0
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\ccK6nYzE.s 			page 139


 5004 01a0 00       		.byte	0
 5005 01a1 1B       		.uleb128 0x1b
 5006 01a2 34       		.uleb128 0x34
 5007 01a3 00       		.byte	0
 5008 01a4 03       		.uleb128 0x3
 5009 01a5 0E       		.uleb128 0xe
 5010 01a6 3A       		.uleb128 0x3a
 5011 01a7 0B       		.uleb128 0xb
 5012 01a8 3B       		.uleb128 0x3b
 5013 01a9 0B       		.uleb128 0xb
 5014 01aa 49       		.uleb128 0x49
 5015 01ab 13       		.uleb128 0x13
 5016 01ac 3F       		.uleb128 0x3f
 5017 01ad 19       		.uleb128 0x19
 5018 01ae 3C       		.uleb128 0x3c
 5019 01af 19       		.uleb128 0x19
 5020 01b0 00       		.byte	0
 5021 01b1 00       		.byte	0
 5022 01b2 1C       		.uleb128 0x1c
 5023 01b3 34       		.uleb128 0x34
 5024 01b4 00       		.byte	0
 5025 01b5 03       		.uleb128 0x3
 5026 01b6 0E       		.uleb128 0xe
 5027 01b7 3A       		.uleb128 0x3a
 5028 01b8 0B       		.uleb128 0xb
 5029 01b9 3B       		.uleb128 0x3b
 5030 01ba 0B       		.uleb128 0xb
 5031 01bb 49       		.uleb128 0x49
 5032 01bc 13       		.uleb128 0x13
 5033 01bd 3F       		.uleb128 0x3f
 5034 01be 19       		.uleb128 0x19
 5035 01bf 02       		.uleb128 0x2
 5036 01c0 18       		.uleb128 0x18
 5037 01c1 00       		.byte	0
 5038 01c2 00       		.byte	0
 5039 01c3 00       		.byte	0
 5040              		.section	.debug_aranges,"",%progbits
 5041 0000 44010000 		.4byte	0x144
 5042 0004 0200     		.2byte	0x2
 5043 0006 00000000 		.4byte	.Ldebug_info0
 5044 000a 04       		.byte	0x4
 5045 000b 00       		.byte	0
 5046 000c 0000     		.2byte	0
 5047 000e 0000     		.2byte	0
 5048 0010 00000000 		.4byte	.LFB33
 5049 0014 58000000 		.4byte	.LFE33-.LFB33
 5050 0018 00000000 		.4byte	.LFB34
 5051 001c 2A000000 		.4byte	.LFE34-.LFB34
 5052 0020 00000000 		.4byte	.LFB35
 5053 0024 26000000 		.4byte	.LFE35-.LFB35
 5054 0028 00000000 		.4byte	.LFB36
 5055 002c 50000000 		.4byte	.LFE36-.LFB36
 5056 0030 00000000 		.4byte	.LFB37
 5057 0034 28020000 		.4byte	.LFE37-.LFB37
 5058 0038 00000000 		.4byte	.LFB38
 5059 003c 1E000000 		.4byte	.LFE38-.LFB38
 5060 0040 00000000 		.4byte	.LFB39
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\ccK6nYzE.s 			page 140


 5061 0044 40000000 		.4byte	.LFE39-.LFB39
 5062 0048 00000000 		.4byte	.LFB40
 5063 004c 58000000 		.4byte	.LFE40-.LFB40
 5064 0050 00000000 		.4byte	.LFB41
 5065 0054 1C000000 		.4byte	.LFE41-.LFB41
 5066 0058 00000000 		.4byte	.LFB42
 5067 005c 24000000 		.4byte	.LFE42-.LFB42
 5068 0060 00000000 		.4byte	.LFB43
 5069 0064 1C000000 		.4byte	.LFE43-.LFB43
 5070 0068 00000000 		.4byte	.LFB44
 5071 006c 24000000 		.4byte	.LFE44-.LFB44
 5072 0070 00000000 		.4byte	.LFB45
 5073 0074 1C000000 		.4byte	.LFE45-.LFB45
 5074 0078 00000000 		.4byte	.LFB46
 5075 007c 1C000000 		.4byte	.LFE46-.LFB46
 5076 0080 00000000 		.4byte	.LFB47
 5077 0084 1C000000 		.4byte	.LFE47-.LFB47
 5078 0088 00000000 		.4byte	.LFB48
 5079 008c 1C000000 		.4byte	.LFE48-.LFB48
 5080 0090 00000000 		.4byte	.LFB49
 5081 0094 24000000 		.4byte	.LFE49-.LFB49
 5082 0098 00000000 		.4byte	.LFB50
 5083 009c 24000000 		.4byte	.LFE50-.LFB50
 5084 00a0 00000000 		.4byte	.LFB51
 5085 00a4 24000000 		.4byte	.LFE51-.LFB51
 5086 00a8 00000000 		.4byte	.LFB52
 5087 00ac 24000000 		.4byte	.LFE52-.LFB52
 5088 00b0 00000000 		.4byte	.LFB53
 5089 00b4 24000000 		.4byte	.LFE53-.LFB53
 5090 00b8 00000000 		.4byte	.LFB54
 5091 00bc 24000000 		.4byte	.LFE54-.LFB54
 5092 00c0 00000000 		.4byte	.LFB55
 5093 00c4 40010000 		.4byte	.LFE55-.LFB55
 5094 00c8 00000000 		.4byte	.LFB56
 5095 00cc 44000000 		.4byte	.LFE56-.LFB56
 5096 00d0 00000000 		.4byte	.LFB57
 5097 00d4 38000000 		.4byte	.LFE57-.LFB57
 5098 00d8 00000000 		.4byte	.LFB58
 5099 00dc 5C000000 		.4byte	.LFE58-.LFB58
 5100 00e0 00000000 		.4byte	.LFB59
 5101 00e4 5C000000 		.4byte	.LFE59-.LFB59
 5102 00e8 00000000 		.4byte	.LFB60
 5103 00ec AC000000 		.4byte	.LFE60-.LFB60
 5104 00f0 00000000 		.4byte	.LFB61
 5105 00f4 94010000 		.4byte	.LFE61-.LFB61
 5106 00f8 00000000 		.4byte	.LFB62
 5107 00fc 5C010000 		.4byte	.LFE62-.LFB62
 5108 0100 00000000 		.4byte	.LFB63
 5109 0104 98000000 		.4byte	.LFE63-.LFB63
 5110 0108 00000000 		.4byte	.LFB64
 5111 010c 6A000000 		.4byte	.LFE64-.LFB64
 5112 0110 00000000 		.4byte	.LFB65
 5113 0114 3C000000 		.4byte	.LFE65-.LFB65
 5114 0118 00000000 		.4byte	.LFB66
 5115 011c 1C000000 		.4byte	.LFE66-.LFB66
 5116 0120 00000000 		.4byte	.LFB67
 5117 0124 1C000000 		.4byte	.LFE67-.LFB67
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\ccK6nYzE.s 			page 141


 5118 0128 00000000 		.4byte	.LFB68
 5119 012c 1C000000 		.4byte	.LFE68-.LFB68
 5120 0130 00000000 		.4byte	.LFB69
 5121 0134 14000000 		.4byte	.LFE69-.LFB69
 5122 0138 00000000 		.4byte	.LFB70
 5123 013c 14000000 		.4byte	.LFE70-.LFB70
 5124 0140 00000000 		.4byte	0
 5125 0144 00000000 		.4byte	0
 5126              		.section	.debug_ranges,"",%progbits
 5127              	.Ldebug_ranges0:
 5128 0000 00000000 		.4byte	.LFB33
 5129 0004 58000000 		.4byte	.LFE33
 5130 0008 00000000 		.4byte	.LFB34
 5131 000c 2A000000 		.4byte	.LFE34
 5132 0010 00000000 		.4byte	.LFB35
 5133 0014 26000000 		.4byte	.LFE35
 5134 0018 00000000 		.4byte	.LFB36
 5135 001c 50000000 		.4byte	.LFE36
 5136 0020 00000000 		.4byte	.LFB37
 5137 0024 28020000 		.4byte	.LFE37
 5138 0028 00000000 		.4byte	.LFB38
 5139 002c 1E000000 		.4byte	.LFE38
 5140 0030 00000000 		.4byte	.LFB39
 5141 0034 40000000 		.4byte	.LFE39
 5142 0038 00000000 		.4byte	.LFB40
 5143 003c 58000000 		.4byte	.LFE40
 5144 0040 00000000 		.4byte	.LFB41
 5145 0044 1C000000 		.4byte	.LFE41
 5146 0048 00000000 		.4byte	.LFB42
 5147 004c 24000000 		.4byte	.LFE42
 5148 0050 00000000 		.4byte	.LFB43
 5149 0054 1C000000 		.4byte	.LFE43
 5150 0058 00000000 		.4byte	.LFB44
 5151 005c 24000000 		.4byte	.LFE44
 5152 0060 00000000 		.4byte	.LFB45
 5153 0064 1C000000 		.4byte	.LFE45
 5154 0068 00000000 		.4byte	.LFB46
 5155 006c 1C000000 		.4byte	.LFE46
 5156 0070 00000000 		.4byte	.LFB47
 5157 0074 1C000000 		.4byte	.LFE47
 5158 0078 00000000 		.4byte	.LFB48
 5159 007c 1C000000 		.4byte	.LFE48
 5160 0080 00000000 		.4byte	.LFB49
 5161 0084 24000000 		.4byte	.LFE49
 5162 0088 00000000 		.4byte	.LFB50
 5163 008c 24000000 		.4byte	.LFE50
 5164 0090 00000000 		.4byte	.LFB51
 5165 0094 24000000 		.4byte	.LFE51
 5166 0098 00000000 		.4byte	.LFB52
 5167 009c 24000000 		.4byte	.LFE52
 5168 00a0 00000000 		.4byte	.LFB53
 5169 00a4 24000000 		.4byte	.LFE53
 5170 00a8 00000000 		.4byte	.LFB54
 5171 00ac 24000000 		.4byte	.LFE54
 5172 00b0 00000000 		.4byte	.LFB55
 5173 00b4 40010000 		.4byte	.LFE55
 5174 00b8 00000000 		.4byte	.LFB56
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\ccK6nYzE.s 			page 142


 5175 00bc 44000000 		.4byte	.LFE56
 5176 00c0 00000000 		.4byte	.LFB57
 5177 00c4 38000000 		.4byte	.LFE57
 5178 00c8 00000000 		.4byte	.LFB58
 5179 00cc 5C000000 		.4byte	.LFE58
 5180 00d0 00000000 		.4byte	.LFB59
 5181 00d4 5C000000 		.4byte	.LFE59
 5182 00d8 00000000 		.4byte	.LFB60
 5183 00dc AC000000 		.4byte	.LFE60
 5184 00e0 00000000 		.4byte	.LFB61
 5185 00e4 94010000 		.4byte	.LFE61
 5186 00e8 00000000 		.4byte	.LFB62
 5187 00ec 5C010000 		.4byte	.LFE62
 5188 00f0 00000000 		.4byte	.LFB63
 5189 00f4 98000000 		.4byte	.LFE63
 5190 00f8 00000000 		.4byte	.LFB64
 5191 00fc 6A000000 		.4byte	.LFE64
 5192 0100 00000000 		.4byte	.LFB65
 5193 0104 3C000000 		.4byte	.LFE65
 5194 0108 00000000 		.4byte	.LFB66
 5195 010c 1C000000 		.4byte	.LFE66
 5196 0110 00000000 		.4byte	.LFB67
 5197 0114 1C000000 		.4byte	.LFE67
 5198 0118 00000000 		.4byte	.LFB68
 5199 011c 1C000000 		.4byte	.LFE68
 5200 0120 00000000 		.4byte	.LFB69
 5201 0124 14000000 		.4byte	.LFE69
 5202 0128 00000000 		.4byte	.LFB70
 5203 012c 14000000 		.4byte	.LFE70
 5204 0130 00000000 		.4byte	0
 5205 0134 00000000 		.4byte	0
 5206              		.section	.debug_line,"",%progbits
 5207              	.Ldebug_line0:
 5208 0000 86040000 		.section	.debug_str,"MS",%progbits,1
 5208      02005E00 
 5208      00000201 
 5208      FB0E0D00 
 5208      01010101 
 5209              	.LASF121:
 5210 0000 43617053 		.ascii	"CapSense_sensorBaselineLow\000"
 5210      656E7365 
 5210      5F73656E 
 5210      736F7242 
 5210      6173656C 
 5211              	.LASF108:
 5212 001b 43617053 		.ascii	"CapSense_IIR4Filter\000"
 5212      656E7365 
 5212      5F494952 
 5212      3446696C 
 5212      74657200 
 5213              	.LASF80:
 5214 002f 43617053 		.ascii	"CapSense_debounceCounter\000"
 5214      656E7365 
 5214      5F646562 
 5214      6F756E63 
 5214      65436F75 
 5215              	.LASF39:
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\ccK6nYzE.s 			page 143


 5216 0048 43617053 		.ascii	"CapSense_CONFIG_TYPE_P4_v2_20\000"
 5216      656E7365 
 5216      5F434F4E 
 5216      4649475F 
 5216      54595045 
 5217              	.LASF46:
 5218 0066 43617053 		.ascii	"CapSense_UpdateBaselineNoThreshold\000"
 5218      656E7365 
 5218      5F557064 
 5218      61746542 
 5218      6173656C 
 5219              	.LASF26:
 5220 0089 6E756D62 		.ascii	"numberOfSensors\000"
 5220      65724F66 
 5220      53656E73 
 5220      6F727300 
 5221              	.LASF30:
 5222 0099 70747247 		.ascii	"ptrGetBitValue\000"
 5222      65744269 
 5222      7456616C 
 5222      756500
 5223              	.LASF87:
 5224 00a8 43617053 		.ascii	"CapSense_DisableWidget\000"
 5224      656E7365 
 5224      5F446973 
 5224      61626C65 
 5224      57696467 
 5225              	.LASF54:
 5226 00bf 43617053 		.ascii	"CapSense_UpdateEnabledBaselines\000"
 5226      656E7365 
 5226      5F557064 
 5226      61746545 
 5226      6E61626C 
 5227              	.LASF103:
 5228 00df 706F7349 		.ascii	"posIndex\000"
 5228      6E646578 
 5228      00
 5229              	.LASF134:
 5230 00e8 43617053 		.ascii	"CapSense_config\000"
 5230      656E7365 
 5230      5F636F6E 
 5230      66696700 
 5231              	.LASF45:
 5232 00f8 69735365 		.ascii	"isSensorEnabled\000"
 5232      6E736F72 
 5232      456E6162 
 5232      6C656400 
 5233              	.LASF83:
 5234 0108 6E756D4F 		.ascii	"numOfSensors\000"
 5234      6653656E 
 5234      736F7273 
 5234      00
 5235              	.LASF8:
 5236 0115 756E7369 		.ascii	"unsigned int\000"
 5236      676E6564 
 5236      20696E74 
 5236      00
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\ccK6nYzE.s 			page 144


 5237              	.LASF35:
 5238 0122 746F7461 		.ascii	"totalSensorsNum\000"
 5238      6C53656E 
 5238      736F7273 
 5238      4E756D00 
 5239              	.LASF97:
 5240 0132 706F734E 		.ascii	"posNext\000"
 5240      65787400 
 5241              	.LASF12:
 5242 013a 696E7431 		.ascii	"int16\000"
 5242      3600
 5243              	.LASF44:
 5244 0140 43617053 		.ascii	"CapSense_InitializeEnabledBaselines\000"
 5244      656E7365 
 5244      5F496E69 
 5244      7469616C 
 5244      697A6545 
 5245              	.LASF116:
 5246 0164 43617053 		.ascii	"CapSense_posFiltersData\000"
 5246      656E7365 
 5246      5F706F73 
 5246      46696C74 
 5246      65727344 
 5247              	.LASF130:
 5248 017c 43617053 		.ascii	"CapSense_debounce\000"
 5248      656E7365 
 5248      5F646562 
 5248      6F756E63 
 5248      6500
 5249              	.LASF41:
 5250 018e 43617053 		.ascii	"CapSense_InitializeSensorBaseline\000"
 5250      656E7365 
 5250      5F496E69 
 5250      7469616C 
 5250      697A6553 
 5251              	.LASF96:
 5252 01b0 706F7350 		.ascii	"posPrev\000"
 5252      72657600 
 5253              	.LASF59:
 5254 01b8 43617053 		.ascii	"CapSense_SetBaselineData\000"
 5254      656E7365 
 5254      5F536574 
 5254      42617365 
 5254      6C696E65 
 5255              	.LASF25:
 5256 01d1 72617744 		.ascii	"rawDataIndex\000"
 5256      61746149 
 5256      6E646578 
 5256      00
 5257              	.LASF34:
 5258 01de 746F7461 		.ascii	"totalWidgetsNum\000"
 5258      6C576964 
 5258      67657473 
 5258      4E756D00 
 5259              	.LASF63:
 5260 01ee 43617053 		.ascii	"CapSense_SetDiffCountData\000"
 5260      656E7365 
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\ccK6nYzE.s 			page 145


 5260      5F536574 
 5260      44696666 
 5260      436F756E 
 5261              	.LASF122:
 5262 0208 43617053 		.ascii	"CapSense_sensorSignal\000"
 5262      656E7365 
 5262      5F73656E 
 5262      736F7253 
 5262      69676E61 
 5263              	.LASF124:
 5264 021e 43617053 		.ascii	"CapSense_lowBaselineResetCnt\000"
 5264      656E7365 
 5264      5F6C6F77 
 5264      42617365 
 5264      6C696E65 
 5265              	.LASF131:
 5266 023b 43617053 		.ascii	"CapSense_rawDataIndex\000"
 5266      656E7365 
 5266      5F726177 
 5266      44617461 
 5266      496E6465 
 5267              	.LASF70:
 5268 0251 43617053 		.ascii	"CapSense_SetNoiseThreshold\000"
 5268      656E7365 
 5268      5F536574 
 5268      4E6F6973 
 5268      65546872 
 5269              	.LASF55:
 5270 026c 43617053 		.ascii	"CapSense_UpdateWidgetBaseline\000"
 5270      656E7365 
 5270      5F557064 
 5270      61746557 
 5270      69646765 
 5271              	.LASF129:
 5272 028a 43617053 		.ascii	"CapSense_hysteresis\000"
 5272      656E7365 
 5272      5F687973 
 5272      74657265 
 5272      73697300 
 5273              	.LASF14:
 5274 029e 666C6F61 		.ascii	"float\000"
 5274      7400
 5275              	.LASF13:
 5276 02a4 696E7433 		.ascii	"int32\000"
 5276      3200
 5277              	.LASF90:
 5278 02aa 636F756E 		.ascii	"count\000"
 5278      7400
 5279              	.LASF24:
 5280 02b0 7265736F 		.ascii	"resolutionsTbl\000"
 5280      6C757469 
 5280      6F6E7354 
 5280      626C00
 5281              	.LASF105:
 5282 02bf 706F7346 		.ascii	"posFiltersMask\000"
 5282      696C7465 
 5282      72734D61 
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\ccK6nYzE.s 			page 146


 5282      736B00
 5283              	.LASF66:
 5284 02ce 43617053 		.ascii	"CapSense_GetNoiseThreshold\000"
 5284      656E7365 
 5284      5F476574 
 5284      4E6F6973 
 5284      65546872 
 5285              	.LASF7:
 5286 02e9 6C6F6E67 		.ascii	"long long unsigned int\000"
 5286      206C6F6E 
 5286      6720756E 
 5286      7369676E 
 5286      65642069 
 5287              	.LASF118:
 5288 0300 43617053 		.ascii	"CapSense_sensorEnableMask\000"
 5288      656E7365 
 5288      5F73656E 
 5288      736F7245 
 5288      6E61626C 
 5289              	.LASF51:
 5290 031a 77696467 		.ascii	"widget\000"
 5290      657400
 5291              	.LASF115:
 5292 0321 43617053 		.ascii	"CapSense_posFiltersMask\000"
 5292      656E7365 
 5292      5F706F73 
 5292      46696C74 
 5292      6572734D 
 5293              	.LASF126:
 5294 0339 43617053 		.ascii	"CapSense_fingerThreshold\000"
 5294      656E7365 
 5294      5F66696E 
 5294      67657254 
 5294      68726573 
 5295              	.LASF119:
 5296 0352 43617053 		.ascii	"CapSense_widgetNumber\000"
 5296      656E7365 
 5296      5F776964 
 5296      6765744E 
 5296      756D6265 
 5297              	.LASF69:
 5298 0368 43617053 		.ascii	"CapSense_SetFingerThreshold\000"
 5298      656E7365 
 5298      5F536574 
 5298      46696E67 
 5298      65725468 
 5299              	.LASF113:
 5300 0384 43617053 		.ascii	"CapSense_DisableRawDataFilters\000"
 5300      656E7365 
 5300      5F446973 
 5300      61626C65 
 5300      52617744 
 5301              	.LASF64:
 5302 03a3 76616C75 		.ascii	"value\000"
 5302      6500
 5303              	.LASF67:
 5304 03a9 43617053 		.ascii	"CapSense_GetFingerHysteresis\000"
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\ccK6nYzE.s 			page 147


 5304      656E7365 
 5304      5F476574 
 5304      46696E67 
 5304      65724879 
 5305              	.LASF62:
 5306 03c6 43617053 		.ascii	"CapSense_GetDiffCountData\000"
 5306      656E7365 
 5306      5F476574 
 5306      44696666 
 5306      436F756E 
 5307              	.LASF48:
 5308 03e0 7369676E 		.ascii	"sign\000"
 5308      00
 5309              	.LASF89:
 5310 03e5 6F666673 		.ascii	"offset\000"
 5310      657400
 5311              	.LASF47:
 5312 03ec 63616C63 		.ascii	"calc\000"
 5312      00
 5313              	.LASF29:
 5314 03f1 70747252 		.ascii	"ptrReadSensorRaw\000"
 5314      65616453 
 5314      656E736F 
 5314      72526177 
 5314      00
 5315              	.LASF79:
 5316 0402 68797374 		.ascii	"hysteresis\000"
 5316      65726573 
 5316      697300
 5317              	.LASF50:
 5318 040d 66696C74 		.ascii	"filteredRawData\000"
 5318      65726564 
 5318      52617744 
 5318      61746100 
 5319              	.LASF56:
 5320 041d 73656E73 		.ascii	"sensorsPerWidget\000"
 5320      6F727350 
 5320      65725769 
 5320      64676574 
 5320      00
 5321              	.LASF85:
 5322 042e 43617053 		.ascii	"CapSense_CheckIsAnyWidgetActive\000"
 5322      656E7365 
 5322      5F436865 
 5322      636B4973 
 5322      416E7957 
 5323              	.LASF132:
 5324 044e 43617053 		.ascii	"CapSense_numberOfSensors\000"
 5324      656E7365 
 5324      5F6E756D 
 5324      6265724F 
 5324      6653656E 
 5325              	.LASF128:
 5326 0467 43617053 		.ascii	"CapSense_negativeNoiseThreshold\000"
 5326      656E7365 
 5326      5F6E6567 
 5326      61746976 
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\ccK6nYzE.s 			page 148


 5326      654E6F69 
 5327              	.LASF33:
 5328 0487 746F7461 		.ascii	"totalScanslotsNum\000"
 5328      6C536361 
 5328      6E736C6F 
 5328      74734E75 
 5328      6D00
 5329              	.LASF42:
 5330 0499 73656E73 		.ascii	"sensor\000"
 5330      6F7200
 5331              	.LASF36:
 5332 04a0 73656E73 		.ascii	"sensetivitySeed\000"
 5332      65746976 
 5332      69747953 
 5332      65656400 
 5333              	.LASF86:
 5334 04b0 43617053 		.ascii	"CapSense_EnableWidget\000"
 5334      656E7365 
 5334      5F456E61 
 5334      626C6557 
 5334      69646765 
 5335              	.LASF16:
 5336 04c6 63686172 		.ascii	"char\000"
 5336      00
 5337              	.LASF68:
 5338 04cb 43617053 		.ascii	"CapSense_GetNegativeNoiseThreshold\000"
 5338      656E7365 
 5338      5F476574 
 5338      4E656761 
 5338      74697665 
 5339              	.LASF10:
 5340 04ee 75696E74 		.ascii	"uint16\000"
 5340      313600
 5341              	.LASF60:
 5342 04f5 64617461 		.ascii	"data\000"
 5342      00
 5343              	.LASF18:
 5344 04fa 69646163 		.ascii	"idac1LevelsTbl\000"
 5344      314C6576 
 5344      656C7354 
 5344      626C00
 5345              	.LASF95:
 5346 0509 7265736F 		.ascii	"resolution\000"
 5346      6C757469 
 5346      6F6E00
 5347              	.LASF82:
 5348 0514 72617749 		.ascii	"rawIndex\000"
 5348      6E646578 
 5348      00
 5349              	.LASF98:
 5350 051d 43617053 		.ascii	"CapSense_centroid\000"
 5350      656E7365 
 5350      5F63656E 
 5350      74726F69 
 5350      6400
 5351              	.LASF137:
 5352 052f 2E5C4765 		.ascii	".\\Generated_Source\\PSoC4\\CapSense_CSHL.c\000"
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\ccK6nYzE.s 			page 149


 5352      6E657261 
 5352      7465645F 
 5352      536F7572 
 5352      63655C50 
 5353              	.LASF6:
 5354 0558 6C6F6E67 		.ascii	"long long int\000"
 5354      206C6F6E 
 5354      6720696E 
 5354      7400
 5355              	.LASF109:
 5356 0566 43617053 		.ascii	"CapSense_GetWidgetNumber\000"
 5356      656E7365 
 5356      5F476574 
 5356      57696467 
 5356      65744E75 
 5357              	.LASF76:
 5358 057f 6465626F 		.ascii	"debounce\000"
 5358      756E6365 
 5358      00
 5359              	.LASF28:
 5360 0588 70747250 		.ascii	"ptrPreScan\000"
 5360      72655363 
 5360      616E00
 5361              	.LASF75:
 5362 0593 43617053 		.ascii	"CapSense_CheckIsSensorActive\000"
 5362      656E7365 
 5362      5F436865 
 5362      636B4973 
 5362      53656E73 
 5363              	.LASF27:
 5364 05b0 70747247 		.ascii	"ptrGetRaw\000"
 5364      65745261 
 5364      7700
 5365              	.LASF53:
 5366 05ba 43617053 		.ascii	"CapSense_UpdateSensorBaseline\000"
 5366      656E7365 
 5366      5F557064 
 5366      61746553 
 5366      656E736F 
 5367              	.LASF40:
 5368 05d8 43617053 		.ascii	"CapSense_BaseInit\000"
 5368      656E7365 
 5368      5F426173 
 5368      65496E69 
 5368      7400
 5369              	.LASF94:
 5370 05ea 43617053 		.ascii	"CapSense_CalcCentroid\000"
 5370      656E7365 
 5370      5F43616C 
 5370      6343656E 
 5370      74726F69 
 5371              	.LASF117:
 5372 0600 43617053 		.ascii	"CapSense_sensorRaw\000"
 5372      656E7365 
 5372      5F73656E 
 5372      736F7252 
 5372      617700
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\ccK6nYzE.s 			page 150


 5373              	.LASF110:
 5374 0613 43617053 		.ascii	"CapSense_GetLowBaselineReset\000"
 5374      656E7365 
 5374      5F476574 
 5374      4C6F7742 
 5374      6173656C 
 5375              	.LASF72:
 5376 0630 43617053 		.ascii	"CapSense_SetNegativeNoiseThreshold\000"
 5376      656E7365 
 5376      5F536574 
 5376      4E656761 
 5376      74697665 
 5377              	.LASF11:
 5378 0653 75696E74 		.ascii	"uint32\000"
 5378      333200
 5379              	.LASF104:
 5380 065a 66697273 		.ascii	"firstTimeIndex\000"
 5380      7454696D 
 5380      65496E64 
 5380      657800
 5381              	.LASF93:
 5382 0669 73746172 		.ascii	"startOfSlider\000"
 5382      744F6653 
 5382      6C696465 
 5382      7200
 5383              	.LASF71:
 5384 0677 43617053 		.ascii	"CapSense_SetFingerHysteresis\000"
 5384      656E7365 
 5384      5F536574 
 5384      46696E67 
 5384      65724879 
 5385              	.LASF138:
 5386 0694 443A5C55 		.ascii	"D:\\Users\\Ryan\\Documents\\PSoC Creator\\piezo-sen"
 5386      73657273 
 5386      5C527961 
 5386      6E5C446F 
 5386      63756D65 
 5387 06c2 736F725C 		.ascii	"sor\\My First Project.cydsn\000"
 5387      4D792046 
 5387      69727374 
 5387      2050726F 
 5387      6A656374 
 5388              	.LASF65:
 5389 06dd 43617053 		.ascii	"CapSense_GetFingerThreshold\000"
 5389      656E7365 
 5389      5F476574 
 5389      46696E67 
 5389      65725468 
 5390              	.LASF136:
 5391 06f9 474E5520 		.ascii	"GNU C 4.8.4 20140526 (release) [ARM/embedded-4_8-br"
 5391      4320342E 
 5391      382E3420 
 5391      32303134 
 5391      30353236 
 5392 072c 616E6368 		.ascii	"anch revision 211358] -mcpu=cortex-m0 -mthumb -g -O"
 5392      20726576 
 5392      6973696F 
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\ccK6nYzE.s 			page 151


 5392      6E203231 
 5392      31333538 
 5393 075f 30202D66 		.ascii	"0 -ffunction-sections\000"
 5393      66756E63 
 5393      74696F6E 
 5393      2D736563 
 5393      74696F6E 
 5394              	.LASF100:
 5395 0775 6E756D65 		.ascii	"numerator\000"
 5395      7261746F 
 5395      7200
 5396              	.LASF58:
 5397 077f 6C617374 		.ascii	"lastSensor\000"
 5397      53656E73 
 5397      6F7200
 5398              	.LASF37:
 5399 078a 6866636C 		.ascii	"hfclkFreq_MHz\000"
 5399      6B467265 
 5399      715F4D48 
 5399      7A00
 5400              	.LASF102:
 5401 0798 43617053 		.ascii	"CapSense_GetCentroidPos\000"
 5401      656E7365 
 5401      5F476574 
 5401      43656E74 
 5401      726F6964 
 5402              	.LASF19:
 5403 07b0 69646163 		.ascii	"idac2LevelsTbl\000"
 5403      324C6576 
 5403      656C7354 
 5403      626C00
 5404              	.LASF2:
 5405 07bf 73686F72 		.ascii	"short int\000"
 5405      7420696E 
 5405      7400
 5406              	.LASF4:
 5407 07c9 6C6F6E67 		.ascii	"long int\000"
 5407      20696E74 
 5407      00
 5408              	.LASF57:
 5409 07d2 66697273 		.ascii	"firstSensor\000"
 5409      7453656E 
 5409      736F7200 
 5410              	.LASF92:
 5411 07de 74656D70 		.ascii	"temp\000"
 5411      00
 5412              	.LASF88:
 5413 07e3 43617053 		.ascii	"CapSense_FindMaximum\000"
 5413      656E7365 
 5413      5F46696E 
 5413      644D6178 
 5413      696D756D 
 5414              	.LASF23:
 5415 07f8 77696467 		.ascii	"widgetNubmersTbl\000"
 5415      65744E75 
 5415      626D6572 
 5415      7354626C 
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\ccK6nYzE.s 			page 152


 5415      00
 5416              	.LASF112:
 5417 0809 43617053 		.ascii	"CapSense_EnableRawDataFilters\000"
 5417      656E7365 
 5417      5F456E61 
 5417      626C6552 
 5417      61774461 
 5418              	.LASF125:
 5419 0827 43617053 		.ascii	"CapSense_lowBaselineReset\000"
 5419      656E7365 
 5419      5F6C6F77 
 5419      42617365 
 5419      6C696E65 
 5420              	.LASF101:
 5421 0841 64656E6F 		.ascii	"denominator\000"
 5421      6D696E61 
 5421      746F7200 
 5422              	.LASF120:
 5423 084d 43617053 		.ascii	"CapSense_sensorBaseline\000"
 5423      656E7365 
 5423      5F73656E 
 5423      736F7242 
 5423      6173656C 
 5424              	.LASF91:
 5425 0865 6D617869 		.ascii	"maximum\000"
 5425      6D756D00 
 5426              	.LASF17:
 5427 086d 73697A65 		.ascii	"sizetype\000"
 5427      74797065 
 5427      00
 5428              	.LASF5:
 5429 0876 6C6F6E67 		.ascii	"long unsigned int\000"
 5429      20756E73 
 5429      69676E65 
 5429      6420696E 
 5429      7400
 5430              	.LASF38:
 5431 0888 706F696E 		.ascii	"pointers\000"
 5431      74657273 
 5431      00
 5432              	.LASF52:
 5433 0891 6E6F6973 		.ascii	"noiseThreshold\000"
 5433      65546872 
 5433      6573686F 
 5433      6C6400
 5434              	.LASF32:
 5435 08a0 43617053 		.ascii	"CapSense_CONFIG_TYPE_POINTERS_P4_v2_20\000"
 5435      656E7365 
 5435      5F434F4E 
 5435      4649475F 
 5435      54595045 
 5436              	.LASF73:
 5437 08c7 43617053 		.ascii	"CapSense_SetDebounce\000"
 5437      656E7365 
 5437      5F536574 
 5437      4465626F 
 5437      756E6365 
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\ccK6nYzE.s 			page 153


 5438              	.LASF78:
 5439 08dc 66696E67 		.ascii	"fingerThreshold\000"
 5439      65725468 
 5439      72657368 
 5439      6F6C6400 
 5440              	.LASF21:
 5441 08ec 63686172 		.ascii	"chargeDivTbl\000"
 5441      67654469 
 5441      7654626C 
 5441      00
 5442              	.LASF1:
 5443 08f9 756E7369 		.ascii	"unsigned char\000"
 5443      676E6564 
 5443      20636861 
 5443      7200
 5444              	.LASF127:
 5445 0907 43617053 		.ascii	"CapSense_noiseThreshold\000"
 5445      656E7365 
 5445      5F6E6F69 
 5445      73655468 
 5445      72657368 
 5446              	.LASF77:
 5447 091f 6465626F 		.ascii	"debounceIndex\000"
 5447      756E6365 
 5447      496E6465 
 5447      7800
 5448              	.LASF43:
 5449 092d 43617053 		.ascii	"CapSense_InitializeAllBaselines\000"
 5449      656E7365 
 5449      5F496E69 
 5449      7469616C 
 5449      697A6541 
 5450              	.LASF61:
 5451 094d 43617053 		.ascii	"CapSense_GetBaselineData\000"
 5451      656E7365 
 5451      5F476574 
 5451      42617365 
 5451      6C696E65 
 5452              	.LASF74:
 5453 0966 43617053 		.ascii	"CapSense_SetLowBaselineReset\000"
 5453      656E7365 
 5453      5F536574 
 5453      4C6F7742 
 5453      6173656C 
 5454              	.LASF20:
 5455 0983 73656E73 		.ascii	"sensetivityTbl\000"
 5455      65746976 
 5455      69747954 
 5455      626C00
 5456              	.LASF114:
 5457 0992 43617053 		.ascii	"CapSense_centroidMult\000"
 5457      656E7365 
 5457      5F63656E 
 5457      74726F69 
 5457      644D756C 
 5458              	.LASF84:
 5459 09a8 73746174 		.ascii	"state\000"
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\ccK6nYzE.s 			page 154


 5459      6500
 5460              	.LASF135:
 5461 09ae 43617053 		.ascii	"CapSense_enableRawFilters\000"
 5461      656E7365 
 5461      5F656E61 
 5461      626C6552 
 5461      61774669 
 5462              	.LASF22:
 5463 09c8 6D6F6444 		.ascii	"modDivTbl\000"
 5463      69765462 
 5463      6C00
 5464              	.LASF0:
 5465 09d2 7369676E 		.ascii	"signed char\000"
 5465      65642063 
 5465      68617200 
 5466              	.LASF3:
 5467 09de 73686F72 		.ascii	"short unsigned int\000"
 5467      7420756E 
 5467      7369676E 
 5467      65642069 
 5467      6E7400
 5468              	.LASF106:
 5469 09f1 43617053 		.ascii	"CapSense_GetRadialCentroidPos\000"
 5469      656E7365 
 5469      5F476574 
 5469      52616469 
 5469      616C4365 
 5470              	.LASF31:
 5471 0a0f 70747253 		.ascii	"ptrSetBitValue\000"
 5471      65744269 
 5471      7456616C 
 5471      756500
 5472              	.LASF107:
 5473 0a1e 43617053 		.ascii	"CapSense_MedianFilter\000"
 5473      656E7365 
 5473      5F4D6564 
 5473      69616E46 
 5473      696C7465 
 5474              	.LASF49:
 5475 0a34 74656D70 		.ascii	"tempRaw\000"
 5475      52617700 
 5476              	.LASF111:
 5477 0a3c 43617053 		.ascii	"CapSense_GetDebounce\000"
 5477      656E7365 
 5477      5F476574 
 5477      4465626F 
 5477      756E6365 
 5478              	.LASF81:
 5479 0a51 43617053 		.ascii	"CapSense_CheckIsWidgetActive\000"
 5479      656E7365 
 5479      5F436865 
 5479      636B4973 
 5479      57696467 
 5480              	.LASF9:
 5481 0a6e 75696E74 		.ascii	"uint8\000"
 5481      3800
 5482              	.LASF15:
ARM GAS  C:\Users\Ryan\AppData\Local\Temp\ccK6nYzE.s 			page 155


 5483 0a74 646F7562 		.ascii	"double\000"
 5483      6C6500
 5484              	.LASF133:
 5485 0a7b 43617053 		.ascii	"CapSense_rawFilterData1\000"
 5485      656E7365 
 5485      5F726177 
 5485      46696C74 
 5485      65724461 
 5486              	.LASF99:
 5487 0a93 706F7369 		.ascii	"position\000"
 5487      74696F6E 
 5487      00
 5488              	.LASF123:
 5489 0a9c 43617053 		.ascii	"CapSense_sensorOnMask\000"
 5489      656E7365 
 5489      5F73656E 
 5489      736F724F 
 5489      6E4D6173 
 5490              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.8.4 20140526 (release) [ARM/embedded-4_8-br
