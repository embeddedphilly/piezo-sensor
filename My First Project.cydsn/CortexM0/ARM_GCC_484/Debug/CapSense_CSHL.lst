ARM GAS  C:\Users\IEUser\AppData\Local\Temp\cctak5Pf.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"CapSense_CSHL.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.comm	CapSense_rawFilterData1,10,4
  18              		.global	CapSense_sensorBaseline
  19              		.bss
  20              		.align	2
  21              		.type	CapSense_sensorBaseline, %object
  22              		.size	CapSense_sensorBaseline, 10
  23              	CapSense_sensorBaseline:
  24 0000 00000000 		.space	10
  24      00000000 
  24      0000
  25              		.global	CapSense_sensorBaselineLow
  26 000a 0000     		.align	2
  27              		.type	CapSense_sensorBaselineLow, %object
  28              		.size	CapSense_sensorBaselineLow, 5
  29              	CapSense_sensorBaselineLow:
  30 000c 00000000 		.space	5
  30      00
  31              		.global	CapSense_sensorSignal
  32 0011 000000   		.align	2
  33              		.type	CapSense_sensorSignal, %object
  34              		.size	CapSense_sensorSignal, 5
  35              	CapSense_sensorSignal:
  36 0014 00000000 		.space	5
  36      00
  37              		.global	CapSense_sensorOnMask
  38 0019 000000   		.align	2
  39              		.type	CapSense_sensorOnMask, %object
  40              		.size	CapSense_sensorOnMask, 1
  41              	CapSense_sensorOnMask:
  42 001c 00       		.space	1
  43              		.comm	CapSense_lowBaselineResetCnt,5,4
  44              		.global	CapSense_lowBaselineReset
  45              		.data
  46              		.align	2
  47              		.type	CapSense_lowBaselineReset, %object
  48              		.size	CapSense_lowBaselineReset, 5
  49              	CapSense_lowBaselineReset:
  50 0000 1E       		.byte	30
  51 0001 1E       		.byte	30
  52 0002 1E       		.byte	30
  53 0003 1E       		.byte	30
ARM GAS  C:\Users\IEUser\AppData\Local\Temp\cctak5Pf.s 			page 2


  54 0004 1E       		.byte	30
  55              		.global	CapSense_enableRawFilters
  56              		.type	CapSense_enableRawFilters, %object
  57              		.size	CapSense_enableRawFilters, 1
  58              	CapSense_enableRawFilters:
  59 0005 01       		.byte	1
  60              		.comm	CapSense_fingerThreshold,1,4
  61              		.comm	CapSense_noiseThreshold,1,4
  62              		.comm	CapSense_negativeNoiseThreshold,1,4
  63              		.comm	CapSense_hysteresis,1,4
  64              		.global	CapSense_debounce
  65 0006 0000     		.align	2
  66              		.type	CapSense_debounce, %object
  67              		.size	CapSense_debounce, 1
  68              	CapSense_debounce:
  69 0008 01       		.byte	1
  70              		.global	CapSense_rawDataIndex
  71              		.section	.rodata
  72              		.align	2
  73              		.type	CapSense_rawDataIndex, %object
  74              		.size	CapSense_rawDataIndex, 1
  75              	CapSense_rawDataIndex:
  76 0000 00       		.space	1
  77              		.global	CapSense_numberOfSensors
  78 0001 000000   		.align	2
  79              		.type	CapSense_numberOfSensors, %object
  80              		.size	CapSense_numberOfSensors, 1
  81              	CapSense_numberOfSensors:
  82 0004 05       		.byte	5
  83 0005 000000   		.align	2
  84              		.type	CapSense_centroidMult, %object
  85              		.size	CapSense_centroidMult, 2
  86              	CapSense_centroidMult:
  87 0008 C01F     		.short	8128
  88 000a 0000     		.data
  89 0009 000000   		.align	2
  90              		.type	CapSense_posFiltersMask, %object
  91              		.size	CapSense_posFiltersMask, 1
  92              	CapSense_posFiltersMask:
  93 000c 10       		.byte	16
  94 000d 000000   		.align	2
  95              		.type	CapSense_posFiltersData, %object
  96              		.size	CapSense_posFiltersData, 3
  97              	CapSense_posFiltersData:
  98 0010 01       		.byte	1
  99 0011 00       		.byte	0
 100 0012 00       		.byte	0
 101 0013 00       		.section	.text.CapSense_BaseInit,"ax",%progbits
 102              		.align	2
 103              		.global	CapSense_BaseInit
 104              		.code	16
 105              		.thumb_func
 106              		.type	CapSense_BaseInit, %function
 107              	CapSense_BaseInit:
 108              	.LFB33:
 109              		.file 1 ".\\Generated_Source\\PSoC4\\CapSense_CSHL.c"
   1:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
ARM GAS  C:\Users\IEUser\AppData\Local\Temp\cctak5Pf.s 			page 3


   2:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * File Name: CapSense_CSHL.c
   3:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Version 2.20
   4:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
   5:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Description:
   6:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This file provides the source code to the High Level APIs for the CapSesne
   7:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CSD component.
   8:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
   9:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Note:
  10:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
  11:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
  12:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Copyright 2014, Cypress Semiconductor Corporation.  All rights reserved.
  13:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * You may use this file only in accordance with the license, terms, conditions,
  14:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * disclaimers, and limitations in the end user license agreement accompanying
  15:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * the software package with which this file was provided.
  16:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
  17:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  18:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #include "CapSense_CSHL.h"
  19:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #include "CapSense_PVT.h"
  20:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  21:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /* SmartSense functions */
  22:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if (CapSense_TUNING_METHOD == CapSense__TUNING_AUTO)
  23:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     extern void CapSense_UpdateThresholds(uint32 sensor);
  24:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (CapSense_TUNING_METHOD == CapSense__TUNING_AUTO) */
  25:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  26:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /* Storage of filters data */
  27:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER)) || \
  28:.\Generated_Source\PSoC4/CapSense_CSHL.c ****       (0u != (CapSense_RAW_FILTER_MASK & CapSense_AVERAGING_FILTER)) )
  29:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  30:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_rawFilterData1[CapSense_TOTAL_SENSOR_COUNT];
  31:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_rawFilterData2[CapSense_TOTAL_SENSOR_COUNT];
  32:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  33:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #elif ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR2_FILTER))   || \
  34:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR4_FILTER))   || \
  35:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         (0u != (CapSense_RAW_FILTER_MASK & CapSense_JITTER_FILTER)) || \
  36:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR8_FILTER))   || \
  37:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR16_FILTER)) )
  38:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
  39:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_rawFilterData1[CapSense_TOTAL_SENSOR_COUNT];
  40:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif  /* ( (CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER) || \
  41:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         *    (CapSense_RAW_FILTER_MASK & CapSense_AVERAGING_FILTER) )
  42:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         */
  43:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  44:.\Generated_Source\PSoC4/CapSense_CSHL.c **** extern uint16 CapSense_sensorRaw[CapSense_TOTAL_SENSOR_COUNT];
  45:.\Generated_Source\PSoC4/CapSense_CSHL.c **** extern uint8 CapSense_sensorEnableMask[CapSense_TOTAL_SENSOR_MASK];
  46:.\Generated_Source\PSoC4/CapSense_CSHL.c **** extern const uint8 CapSense_widgetNumber[CapSense_TOTAL_SENSOR_COUNT];
  47:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  48:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if (CapSense_TUNING_METHOD != CapSense__TUNING_NONE)
  49:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	extern uint32 CapSense_widgetResolution[CapSense_RESOLUTIONS_TBL_SIZE];	
  50:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (CapSense_TUNING_METHOD != CapSense__TUNING_NONE) */
  51:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  52:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint16 CapSense_sensorBaseline[CapSense_TOTAL_SENSOR_COUNT] = {0u};
  53:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_sensorBaselineLow[CapSense_TOTAL_SENSOR_COUNT] = {0u};
  54:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_sensorSignal[CapSense_TOTAL_SENSOR_COUNT] = {0u};
  55:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_sensorOnMask[CapSense_TOTAL_SENSOR_MASK] = {0u};
  56:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  57:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_lowBaselineResetCnt[CapSense_TOTAL_SENSOR_COUNT];
  58:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_lowBaselineReset[CapSense_TOTAL_SENSOR_COUNT] = {
ARM GAS  C:\Users\IEUser\AppData\Local\Temp\cctak5Pf.s 			page 4


  59:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     30u, 30u, 30u, 30u, 30u, 
  60:.\Generated_Source\PSoC4/CapSense_CSHL.c **** };
  61:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  62:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  63:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  64:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if (CapSense_TUNING_METHOD == CapSense__TUNING_AUTO)
  65:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	extern CapSense_CONFIG_TYPE_P4_v2_20 CapSense_config;
  66:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif  /* (CapSense_TUNING_METHOD == CapSense__TUNING_AUTO) */
  67:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  68:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if (CapSense_RAW_FILTER_MASK != 0u)
  69:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_enableRawFilters = CapSense_RAW_FILTERS_ENABLED;
  70:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif  /* (CapSense_RAW_FILTER_MASK != 0u) */
  71:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  72:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /* Generated by Customizer */
  73:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_fingerThreshold[CapSense_THRESHOLD_TBL_SIZE];
  74:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  75:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_noiseThreshold[CapSense_THRESHOLD_TBL_SIZE];
  76:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  77:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_negativeNoiseThreshold[CapSense_THRESHOLD_TBL_SIZE];
  78:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  79:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_hysteresis[CapSense_WIDGET_PARAM_TBL_SIZE];
  80:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  81:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_debounce[] = {
  82:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     1u, 
  83:.\Generated_Source\PSoC4/CapSense_CSHL.c **** };
  84:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  85:.\Generated_Source\PSoC4/CapSense_CSHL.c **** const uint8 CapSense_rawDataIndex[] = {
  86:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     0u, /* LinearSlider0__LS */
  87:.\Generated_Source\PSoC4/CapSense_CSHL.c **** };
  88:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  89:.\Generated_Source\PSoC4/CapSense_CSHL.c **** const uint8 CapSense_numberOfSensors[] = {
  90:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     5u, /* LinearSlider0__LS */
  91:.\Generated_Source\PSoC4/CapSense_CSHL.c **** };
  92:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  93:.\Generated_Source\PSoC4/CapSense_CSHL.c **** static const uint16 CapSense_centroidMult[] = {
  94:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     8128u, 
  95:.\Generated_Source\PSoC4/CapSense_CSHL.c **** };
  96:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  97:.\Generated_Source\PSoC4/CapSense_CSHL.c **** static uint8 CapSense_posFiltersMask[] = {
  98:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     0x10u, 
  99:.\Generated_Source\PSoC4/CapSense_CSHL.c **** };
 100:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 101:.\Generated_Source\PSoC4/CapSense_CSHL.c **** static uint8 CapSense_posFiltersData[] = {
 102:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     1u, 0u, 0u, 
 103:.\Generated_Source\PSoC4/CapSense_CSHL.c **** };
 104:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 105:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 106:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 107:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 108:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 109:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_BaseInit
 110:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 111:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 112:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 113:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Loads the CapSense_sensorBaseline[sensor] array element with an 
 114:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  initial value which is equal to the raw count value. 
 115:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Resets to zero CapSense_sensorBaselineLow[sensor] and 
ARM GAS  C:\Users\IEUser\AppData\Local\Temp\cctak5Pf.s 			page 5


 116:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorSignal[sensor] array element.
 117:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Loads the CapSense_rawFilterData2[sensor] and 
 118:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_rawFilterData2[sensor] array element with an 
 119:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  initial value which is equal to the raw count value if the raw data filter is enabled.
 120:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 121:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 122:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor:  Sensor number.
 123:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 124:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 125:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 126:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 127:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 128:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorBaseline[]    - used to store the baseline value.
 129:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorBaselineLow[] - used to store the fraction byte of 
 130:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  the baseline value.
 131:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorSignal[]      - used to store a difference between 
 132:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  the current value of raw data and the previous value of the baseline.
 133:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_rawFilterData1[]    - used to store a previous sample of 
 134:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  any enabled raw data filter.
 135:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_rawFilterData2[]    - used to store before a previous sample
 136:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  of the enabled raw data filter. Required only for median or average filters.
 137:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 138:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 139:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 140:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * 
 141:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 142:.\Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_BaseInit(uint32 sensor)
 143:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 110              		.loc 1 143 0
 111              		.cfi_startproc
 112 0000 80B5     		push	{r7, lr}
 113              		.cfi_def_cfa_offset 8
 114              		.cfi_offset 7, -8
 115              		.cfi_offset 14, -4
 116 0002 82B0     		sub	sp, sp, #8
 117              		.cfi_def_cfa_offset 16
 118 0004 00AF     		add	r7, sp, #0
 119              		.cfi_def_cfa_register 7
 120 0006 7860     		str	r0, [r7, #4]
 144:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #if ((CapSense_TOTAL_BUTTONS_COUNT) || (CapSense_TOTAL_MATRIX_BUTTONS_COUNT) || \
 145:.\Generated_Source\PSoC4/CapSense_CSHL.c ****          (CapSense_TOTAL_GENERICS_COUNT))
 146:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 widget = CapSense_widgetNumber[sensor];
 147:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif /* ((CapSense_TOTAL_MATRIX_BUTTONS_COUNT) || (CapSense_TOTAL_MATRIX_BUTTONS_COUNT)) */
 148:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
 149:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TOTAL_MATRIX_BUTTONS_COUNT)
 150:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 debounceIndex;
 151:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif  /* (CapSense_TOTAL_MATRIX_BUTTONS_COUNT) */
 152:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
 153:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TOTAL_GENERICS_COUNT)
 154:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Exclude generic widget */
 155:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if(widget < CapSense_END_OF_WIDGETS_INDEX)
 156:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 157:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif  /* CapSense_TOTAL_GENERICS_COUNT */
 158:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
 159:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Initialize Baseline */
 160:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_sensorBaseline[sensor] = CapSense_sensorRaw[sensor];
 121              		.loc 1 160 0
ARM GAS  C:\Users\IEUser\AppData\Local\Temp\cctak5Pf.s 			page 6


 122 0008 0E4B     		ldr	r3, .L2
 123 000a 7A68     		ldr	r2, [r7, #4]
 124 000c 5200     		lsl	r2, r2, #1
 125 000e D15A     		ldrh	r1, [r2, r3]
 126 0010 0D4B     		ldr	r3, .L2+4
 127 0012 7A68     		ldr	r2, [r7, #4]
 128 0014 5200     		lsl	r2, r2, #1
 129 0016 D152     		strh	r1, [r2, r3]
 161:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_sensorBaselineLow[sensor] = 0u;
 130              		.loc 1 161 0
 131 0018 0C4A     		ldr	r2, .L2+8
 132 001a 7B68     		ldr	r3, [r7, #4]
 133 001c D318     		add	r3, r2, r3
 134 001e 0022     		mov	r2, #0
 135 0020 1A70     		strb	r2, [r3]
 162:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_sensorSignal[sensor] = 0u;
 136              		.loc 1 162 0
 137 0022 0B4A     		ldr	r2, .L2+12
 138 0024 7B68     		ldr	r3, [r7, #4]
 139 0026 D318     		add	r3, r2, r3
 140 0028 0022     		mov	r2, #0
 141 002a 1A70     		strb	r2, [r3]
 163:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
 164:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 165:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
 166:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #if ((0u != (CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER)) ||\
 167:.\Generated_Source\PSoC4/CapSense_CSHL.c ****          (0u != (CapSense_RAW_FILTER_MASK & CapSense_AVERAGING_FILTER)))
 168:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 169:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_rawFilterData1[sensor] = CapSense_sensorRaw[sensor];
 170:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_rawFilterData2[sensor] = CapSense_sensorRaw[sensor];
 171:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
 172:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #elif ((CapSense_RAW_FILTER_MASK & CapSense_IIR2_FILTER) ||\
 173:.\Generated_Source\PSoC4/CapSense_CSHL.c ****            (CapSense_RAW_FILTER_MASK & CapSense_IIR4_FILTER) ||\
 174:.\Generated_Source\PSoC4/CapSense_CSHL.c ****            (CapSense_RAW_FILTER_MASK & CapSense_JITTER_FILTER) ||\
 175:.\Generated_Source\PSoC4/CapSense_CSHL.c ****            (CapSense_RAW_FILTER_MASK & CapSense_IIR8_FILTER) ||\
 176:.\Generated_Source\PSoC4/CapSense_CSHL.c ****            (CapSense_RAW_FILTER_MASK & CapSense_IIR16_FILTER))
 177:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             
 178:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_rawFilterData1[sensor] = CapSense_sensorRaw[sensor];
 142              		.loc 1 178 0
 143 002c 054B     		ldr	r3, .L2
 144 002e 7A68     		ldr	r2, [r7, #4]
 145 0030 5200     		lsl	r2, r2, #1
 146 0032 D15A     		ldrh	r1, [r2, r3]
 147 0034 074B     		ldr	r3, .L2+16
 148 0036 7A68     		ldr	r2, [r7, #4]
 149 0038 5200     		lsl	r2, r2, #1
 150 003a D152     		strh	r1, [r2, r3]
 179:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
 180:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #else
 181:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* No Raw filters */
 182:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif  /* ((CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER) || \
 183:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             *   (CapSense_RAW_FILTER_MASK & CapSense_AVERAGING_FILTER))
 184:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             */
 185:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
 186:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TOTAL_GENERICS_COUNT)
 187:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Exclude generic widget */
 188:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
ARM GAS  C:\Users\IEUser\AppData\Local\Temp\cctak5Pf.s 			page 7


 189:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif  /* CapSense_TOTAL_GENERICS_COUNT */
 190:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 151              		.loc 1 190 0
 152 003c BD46     		mov	sp, r7
 153 003e 02B0     		add	sp, sp, #8
 154              		@ sp needed
 155 0040 80BD     		pop	{r7, pc}
 156              	.L3:
 157 0042 C046     		.align	2
 158              	.L2:
 159 0044 00000000 		.word	CapSense_sensorRaw
 160 0048 00000000 		.word	CapSense_sensorBaseline
 161 004c 00000000 		.word	CapSense_sensorBaselineLow
 162 0050 00000000 		.word	CapSense_sensorSignal
 163 0054 00000000 		.word	CapSense_rawFilterData1
 164              		.cfi_endproc
 165              	.LFE33:
 166              		.size	CapSense_BaseInit, .-CapSense_BaseInit
 167              		.section	.text.CapSense_InitializeSensorBaseline,"ax",%progbits
 168              		.align	2
 169              		.global	CapSense_InitializeSensorBaseline
 170              		.code	16
 171              		.thumb_func
 172              		.type	CapSense_InitializeSensorBaseline, %function
 173              	CapSense_InitializeSensorBaseline:
 174              	.LFB34:
 191:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 192:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 193:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 194:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_InitializeSensorBaseline
 195:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 196:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 197:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 198:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Loads the CapSense_sensorBaseline[sensor] array element with an 
 199:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  initial value by scanning the selected sensor (one channel design) or a pair 
 200:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  of sensors (two channels designs). The raw count value is copied into the 
 201:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  baseline array for each sensor. The raw data filters are initialized if 
 202:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  enabled.
 203:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 204:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 205:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor:  Sensor number.
 206:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 207:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 208:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 209:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 210:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 211:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 212:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 213:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 214:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 215:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * 
 216:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 217:.\Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_InitializeSensorBaseline(uint32 sensor)
 218:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 175              		.loc 1 218 0
 176              		.cfi_startproc
 177 0000 80B5     		push	{r7, lr}
ARM GAS  C:\Users\IEUser\AppData\Local\Temp\cctak5Pf.s 			page 8


 178              		.cfi_def_cfa_offset 8
 179              		.cfi_offset 7, -8
 180              		.cfi_offset 14, -4
 181 0002 82B0     		sub	sp, sp, #8
 182              		.cfi_def_cfa_offset 16
 183 0004 00AF     		add	r7, sp, #0
 184              		.cfi_def_cfa_register 7
 185 0006 7860     		str	r0, [r7, #4]
 219:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Scan sensor */
 220:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_ScanSensor(sensor);
 186              		.loc 1 220 0
 187 0008 7B68     		ldr	r3, [r7, #4]
 188 000a 181C     		mov	r0, r3
 189 000c FFF7FEFF 		bl	CapSense_ScanSensor
 221:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     while(CapSense_IsBusy() != 0u)
 190              		.loc 1 221 0
 191 0010 C046     		mov	r8, r8
 192              	.L5:
 193              		.loc 1 221 0 is_stmt 0 discriminator 1
 194 0012 FFF7FEFF 		bl	CapSense_IsBusy
 195 0016 031C     		mov	r3, r0
 196 0018 002B     		cmp	r3, #0
 197 001a FAD1     		bne	.L5
 222:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 223:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Wait while sensor is busy */
 224:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 225:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
 226:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Initialize Baseline, Signal and debounce counters */       
 227:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_BaseInit(sensor);
 198              		.loc 1 227 0 is_stmt 1
 199 001c 7B68     		ldr	r3, [r7, #4]
 200 001e 181C     		mov	r0, r3
 201 0020 FFF7FEFF 		bl	CapSense_BaseInit
 228:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 202              		.loc 1 228 0
 203 0024 BD46     		mov	sp, r7
 204 0026 02B0     		add	sp, sp, #8
 205              		@ sp needed
 206 0028 80BD     		pop	{r7, pc}
 207              		.cfi_endproc
 208              	.LFE34:
 209              		.size	CapSense_InitializeSensorBaseline, .-CapSense_InitializeSensorBaseline
 210 002a C046     		.section	.text.CapSense_InitializeAllBaselines,"ax",%progbits
 211              		.align	2
 212              		.global	CapSense_InitializeAllBaselines
 213              		.code	16
 214              		.thumb_func
 215              		.type	CapSense_InitializeAllBaselines, %function
 216              	CapSense_InitializeAllBaselines:
 217              	.LFB35:
 229:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 230:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 231:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 232:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_InitializeAllBaselines
 233:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 234:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 235:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
ARM GAS  C:\Users\IEUser\AppData\Local\Temp\cctak5Pf.s 			page 9


 236:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Uses the CapSense_InitializeSensorBaseline function to load the 
 237:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorBaseline[] array with an initial values by scanning 
 238:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  all the sensors. The raw count values are copied into the baseline array for 
 239:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  all the sensors. The raw data filters are initialized if enabled.
 240:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 241:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 242:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 243:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 244:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 245:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 246:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 247:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 248:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 249:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 250:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 251:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 252:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * 
 253:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 254:.\Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_InitializeAllBaselines(void)
 255:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 218              		.loc 1 255 0
 219              		.cfi_startproc
 220 0000 80B5     		push	{r7, lr}
 221              		.cfi_def_cfa_offset 8
 222              		.cfi_offset 7, -8
 223              		.cfi_offset 14, -4
 224 0002 82B0     		sub	sp, sp, #8
 225              		.cfi_def_cfa_offset 16
 226 0004 00AF     		add	r7, sp, #0
 227              		.cfi_def_cfa_register 7
 256:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 i;
 257:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
 258:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	for(i = 0u; i < CapSense_TOTAL_SCANSLOT_COUNT; i++)
 228              		.loc 1 258 0
 229 0006 0023     		mov	r3, #0
 230 0008 7B60     		str	r3, [r7, #4]
 231 000a 06E0     		b	.L7
 232              	.L8:
 259:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	{
 260:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     	CapSense_InitializeSensorBaseline(i);
 233              		.loc 1 260 0 discriminator 2
 234 000c 7B68     		ldr	r3, [r7, #4]
 235 000e 181C     		mov	r0, r3
 236 0010 FFF7FEFF 		bl	CapSense_InitializeSensorBaseline
 258:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	for(i = 0u; i < CapSense_TOTAL_SCANSLOT_COUNT; i++)
 237              		.loc 1 258 0 discriminator 2
 238 0014 7B68     		ldr	r3, [r7, #4]
 239 0016 0133     		add	r3, r3, #1
 240 0018 7B60     		str	r3, [r7, #4]
 241              	.L7:
 258:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	for(i = 0u; i < CapSense_TOTAL_SCANSLOT_COUNT; i++)
 242              		.loc 1 258 0 is_stmt 0 discriminator 1
 243 001a 7B68     		ldr	r3, [r7, #4]
 244 001c 042B     		cmp	r3, #4
 245 001e F5D9     		bls	.L8
 261:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	}
 262:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
ARM GAS  C:\Users\IEUser\AppData\Local\Temp\cctak5Pf.s 			page 10


 246              		.loc 1 262 0 is_stmt 1
 247 0020 BD46     		mov	sp, r7
 248 0022 02B0     		add	sp, sp, #8
 249              		@ sp needed
 250 0024 80BD     		pop	{r7, pc}
 251              		.cfi_endproc
 252              	.LFE35:
 253              		.size	CapSense_InitializeAllBaselines, .-CapSense_InitializeAllBaselines
 254 0026 C046     		.section	.text.CapSense_InitializeEnabledBaselines,"ax",%progbits
 255              		.align	2
 256              		.global	CapSense_InitializeEnabledBaselines
 257              		.code	16
 258              		.thumb_func
 259              		.type	CapSense_InitializeEnabledBaselines, %function
 260              	CapSense_InitializeEnabledBaselines:
 261              	.LFB36:
 263:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 264:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 265:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 266:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_InitializeEnabledBaselines
 267:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 268:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 269:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 270:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Scans all the enabled widgets and the raw count values are copied into the 
 271:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  baseline array for all the sensors enabled in the scanning process. The baselines 
 272:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  are initialized with zero values for sensors disabled from the scanning process. 
 273:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  The raw data filters are initialized if enabled.
 274:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 275:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 276:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 277:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 278:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 279:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 280:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 281:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 282:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorRaw[] - used to store the sensors raw data.
 283:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[ ] - used to store bit masks of the enabled sensors.
 284:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 285:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 286:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 287:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * 
 288:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 289:.\Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_InitializeEnabledBaselines(void)
 290:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 262              		.loc 1 290 0
 263              		.cfi_startproc
 264 0000 80B5     		push	{r7, lr}
 265              		.cfi_def_cfa_offset 8
 266              		.cfi_offset 7, -8
 267              		.cfi_offset 14, -4
 268 0002 82B0     		sub	sp, sp, #8
 269              		.cfi_def_cfa_offset 16
 270 0004 00AF     		add	r7, sp, #0
 271              		.cfi_def_cfa_register 7
 291:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 i;
 292:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 isSensorEnabled;
 293:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
ARM GAS  C:\Users\IEUser\AppData\Local\Temp\cctak5Pf.s 			page 11


 294:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_ScanEnabledWidgets();
 272              		.loc 1 294 0
 273 0006 FFF7FEFF 		bl	CapSense_ScanEnabledWidgets
 295:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     while(CapSense_IsBusy() != 0u)
 274              		.loc 1 295 0
 275 000a C046     		mov	r8, r8
 276              	.L10:
 277              		.loc 1 295 0 is_stmt 0 discriminator 1
 278 000c FFF7FEFF 		bl	CapSense_IsBusy
 279 0010 031C     		mov	r3, r0
 280 0012 002B     		cmp	r3, #0
 281 0014 FAD1     		bne	.L10
 296:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 297:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Wait while sensor is busy */
 298:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 299:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
 300:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     for(i = 0u; i < CapSense_TOTAL_SENSOR_COUNT; i++)
 282              		.loc 1 300 0 is_stmt 1
 283 0016 0023     		mov	r3, #0
 284 0018 7B60     		str	r3, [r7, #4]
 285 001a 11E0     		b	.L11
 286              	.L13:
 301:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 302:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         isSensorEnabled = CapSense_GetBitValue(CapSense_sensorEnableMask, i);
 287              		.loc 1 302 0
 288 001c 0B4A     		ldr	r2, .L14
 289 001e 7B68     		ldr	r3, [r7, #4]
 290 0020 101C     		mov	r0, r2
 291 0022 191C     		mov	r1, r3
 292 0024 FFF7FEFF 		bl	CapSense_GetBitValue
 293 0028 031C     		mov	r3, r0
 294 002a 3B60     		str	r3, [r7]
 303:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
 304:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Clear raw data if sensor is disabled from scanning process */
 305:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if(isSensorEnabled != 0u)
 295              		.loc 1 305 0
 296 002c 3B68     		ldr	r3, [r7]
 297 002e 002B     		cmp	r3, #0
 298 0030 03D0     		beq	.L12
 306:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 307:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Initialize baselines */
 308:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_BaseInit(i);
 299              		.loc 1 308 0
 300 0032 7B68     		ldr	r3, [r7, #4]
 301 0034 181C     		mov	r0, r3
 302 0036 FFF7FEFF 		bl	CapSense_BaseInit
 303              	.L12:
 300:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     for(i = 0u; i < CapSense_TOTAL_SENSOR_COUNT; i++)
 304              		.loc 1 300 0
 305 003a 7B68     		ldr	r3, [r7, #4]
 306 003c 0133     		add	r3, r3, #1
 307 003e 7B60     		str	r3, [r7, #4]
 308              	.L11:
 300:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     for(i = 0u; i < CapSense_TOTAL_SENSOR_COUNT; i++)
 309              		.loc 1 300 0 is_stmt 0 discriminator 1
 310 0040 7B68     		ldr	r3, [r7, #4]
 311 0042 042B     		cmp	r3, #4
ARM GAS  C:\Users\IEUser\AppData\Local\Temp\cctak5Pf.s 			page 12


 312 0044 EAD9     		bls	.L13
 309:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
 310:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 311:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }  
 313              		.loc 1 311 0 is_stmt 1
 314 0046 BD46     		mov	sp, r7
 315 0048 02B0     		add	sp, sp, #8
 316              		@ sp needed
 317 004a 80BD     		pop	{r7, pc}
 318              	.L15:
 319              		.align	2
 320              	.L14:
 321 004c 00000000 		.word	CapSense_sensorEnableMask
 322              		.cfi_endproc
 323              	.LFE36:
 324              		.size	CapSense_InitializeEnabledBaselines, .-CapSense_InitializeEnabledBaselines
 325              		.section	.text.CapSense_UpdateBaselineNoThreshold,"ax",%progbits
 326              		.align	2
 327              		.global	CapSense_UpdateBaselineNoThreshold
 328              		.code	16
 329              		.thumb_func
 330              		.type	CapSense_UpdateBaselineNoThreshold, %function
 331              	CapSense_UpdateBaselineNoThreshold:
 332              	.LFB37:
 312:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 313:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 314:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 315:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_UpdateBaselineNoThreshold
 316:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 317:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 318:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 319:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Updates the CapSense_sensorBaseline[sensor] array element using the 
 320:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  LP filter with k = 256. The signal calculates the difference of count by 
 321:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  subtracting the previous baseline from the current raw count value and stores
 322:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  it in CapSense_sensorSignal[sensor]. 
 323:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  If the auto reset option is enabled, the baseline updated regards the noise threshold. 
 324:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  If the auto reset option is disabled, the baseline stops updating; baseline is loaded 
 325:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  with a raw count value if a signal is greater than zero and if signal is less 
 326:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  than noise threshold.
 327:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Raw data filters are applied to the values if enabled before baseline 
 328:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  calculation.
 329:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 330:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API does not update the thresholds in the Smartsense Mode.
 331:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 332:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 333:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor:  Sensor number.
 334:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 335:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 336:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 337:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 338:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 339:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_widgetNumber[]  - stores widget numbers.
 340:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorBaseline[]    - used to store baseline value.
 341:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorBaselineLow[] - used to store fraction byte of 
 342:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  baseline value.
 343:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorSignal[]      - used to store difference between 
 344:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  current value of raw data and previous value of baseline.
ARM GAS  C:\Users\IEUser\AppData\Local\Temp\cctak5Pf.s 			page 13


 345:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_rawFilterData1[]    - used to store previous sample of 
 346:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  any enabled raw data filter.
 347:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_rawFilterData2[]    - used to store before previous sample
 348:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  of enabled raw data filter. Only required for median or average filters.
 349:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * 
 350:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 351:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 352:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * 
 353:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 354:.\Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_UpdateBaselineNoThreshold(uint32 sensor)
 355:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 333              		.loc 1 355 0
 334              		.cfi_startproc
 335 0000 90B5     		push	{r4, r7, lr}
 336              		.cfi_def_cfa_offset 12
 337              		.cfi_offset 4, -12
 338              		.cfi_offset 7, -8
 339              		.cfi_offset 14, -4
 340 0002 87B0     		sub	sp, sp, #28
 341              		.cfi_def_cfa_offset 40
 342 0004 00AF     		add	r7, sp, #0
 343              		.cfi_def_cfa_register 7
 344 0006 7860     		str	r0, [r7, #4]
 356:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 calc;
 357:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	uint32 sign;
 358:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 tempRaw;
 359:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 filteredRawData;
 360:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 widget = CapSense_widgetNumber[sensor];
 345              		.loc 1 360 0
 346 0008 3B1C     		mov	r3, r7
 347 000a 0F33     		add	r3, r3, #15
 348 000c 7A49     		ldr	r1, .L29
 349 000e 7A68     		ldr	r2, [r7, #4]
 350 0010 8A18     		add	r2, r1, r2
 351 0012 1278     		ldrb	r2, [r2]
 352 0014 1A70     		strb	r2, [r3]
 361:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 noiseThreshold = CapSense_noiseThreshold[widget];
 353              		.loc 1 361 0
 354 0016 3B1C     		mov	r3, r7
 355 0018 0F33     		add	r3, r3, #15
 356 001a 1A78     		ldrb	r2, [r3]
 357 001c 3B1C     		mov	r3, r7
 358 001e 0E33     		add	r3, r3, #14
 359 0020 7649     		ldr	r1, .L29+4
 360 0022 8A5C     		ldrb	r2, [r1, r2]
 361 0024 1A70     		strb	r2, [r3]
 362:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
 363:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TOTAL_GENERICS_COUNT)
 364:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Exclude generic widget */
 365:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if(widget < CapSense_END_OF_WIDGETS_INDEX)
 366:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 367:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif  /* CapSense_TOTAL_GENERICS_COUNT */
 368:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
 369:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     filteredRawData = CapSense_sensorRaw[sensor];
 362              		.loc 1 369 0
 363 0026 3B1C     		mov	r3, r7
 364 0028 1033     		add	r3, r3, #16
ARM GAS  C:\Users\IEUser\AppData\Local\Temp\cctak5Pf.s 			page 14


 365 002a 754A     		ldr	r2, .L29+8
 366 002c 7968     		ldr	r1, [r7, #4]
 367 002e 4900     		lsl	r1, r1, #1
 368 0030 8A5A     		ldrh	r2, [r1, r2]
 369 0032 1A80     		strh	r2, [r3]
 370:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 371:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	#if (CapSense_RAW_FILTER_MASK != 0u)
 372:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	if(CapSense_enableRawFilters != 0u)
 370              		.loc 1 372 0
 371 0034 734B     		ldr	r3, .L29+12
 372 0036 1B78     		ldrb	r3, [r3]
 373 0038 002B     		cmp	r3, #0
 374 003a 15D0     		beq	.L17
 373:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	{
 374:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		#if (CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER)
 375:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			tempRaw = filteredRawData;
 376:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			filteredRawData = CapSense_MedianFilter(filteredRawData, CapSense_rawFilterData1[sensor], 
 377:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 															CapSense_rawFilterData2[sensor]);
 378:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			CapSense_rawFilterData2[sensor] = CapSense_rawFilterData1[sensor];
 379:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			CapSense_rawFilterData1[sensor] = tempRaw;
 380:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			
 381:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		#elif (CapSense_RAW_FILTER_MASK & CapSense_AVERAGING_FILTER)
 382:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			tempRaw = filteredRawData;
 383:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			filteredRawData = CapSense_AveragingFilter(filteredRawData, CapSense_rawFilterData1[sensor],
 384:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 															   CapSense_rawFilterData2[sensor]);
 385:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			CapSense_rawFilterData2[sensor] = CapSense_rawFilterData1[sensor];
 386:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			CapSense_rawFilterData1[sensor] = tempRaw;
 387:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			
 388:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		#elif (CapSense_RAW_FILTER_MASK & CapSense_IIR2_FILTER)
 389:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			filteredRawData = CapSense_IIR2Filter(filteredRawData, CapSense_rawFilterData1[sensor]);
 390:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			CapSense_rawFilterData1[sensor] = filteredRawData;
 391:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			
 392:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		#elif (CapSense_RAW_FILTER_MASK & CapSense_IIR4_FILTER)
 393:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			filteredRawData = CapSense_IIR4Filter(filteredRawData, CapSense_rawFilterData1[sensor]);
 375              		.loc 1 393 0
 376 003c 724B     		ldr	r3, .L29+16
 377 003e 7A68     		ldr	r2, [r7, #4]
 378 0040 5200     		lsl	r2, r2, #1
 379 0042 D35A     		ldrh	r3, [r2, r3]
 380 0044 3C1C     		mov	r4, r7
 381 0046 1034     		add	r4, r4, #16
 382 0048 3A1C     		mov	r2, r7
 383 004a 1032     		add	r2, r2, #16
 384 004c 1288     		ldrh	r2, [r2]
 385 004e 101C     		mov	r0, r2
 386 0050 191C     		mov	r1, r3
 387 0052 FFF7FEFF 		bl	CapSense_IIR4Filter
 388 0056 031C     		mov	r3, r0
 389 0058 2380     		strh	r3, [r4]
 394:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			CapSense_rawFilterData1[sensor] = filteredRawData;
 390              		.loc 1 394 0
 391 005a 6B4B     		ldr	r3, .L29+16
 392 005c 7A68     		ldr	r2, [r7, #4]
 393 005e 5200     		lsl	r2, r2, #1
 394 0060 391C     		mov	r1, r7
 395 0062 1031     		add	r1, r1, #16
 396 0064 0988     		ldrh	r1, [r1]
ARM GAS  C:\Users\IEUser\AppData\Local\Temp\cctak5Pf.s 			page 15


 397 0066 D152     		strh	r1, [r2, r3]
 398              	.L17:
 395:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 				
 396:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		#elif (CapSense_RAW_FILTER_MASK & CapSense_JITTER_FILTER)
 397:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			filteredRawData = CapSense_JitterFilter(filteredRawData, CapSense_rawFilterData1[sensor]);
 398:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			CapSense_rawFilterData1[sensor] = filteredRawData;
 399:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			
 400:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		#elif (CapSense_RAW_FILTER_MASK & CapSense_IIR8_FILTER)
 401:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			filteredRawData = CapSense_IIR8Filter(filteredRawData, CapSense_rawFilterData1[sensor]);
 402:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			CapSense_rawFilterData1[sensor] = filteredRawData;
 403:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			
 404:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		#elif (CapSense_RAW_FILTER_MASK & CapSense_IIR16_FILTER)
 405:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			filteredRawData = CapSense_IIR16Filter(filteredRawData, CapSense_rawFilterData1[sensor]);
 406:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			CapSense_rawFilterData1[sensor] = filteredRawData;
 407:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			
 408:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		#else
 409:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			/* No Raw filters */
 410:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		#endif  /* (CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER) */
 411:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	}
 412:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	#endif  /* (CapSense_RAW_FILTER_MASK != 0u) */
 413:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	
 414:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	#if (CapSense_TUNING_METHOD == CapSense__TUNING_AUTO)
 415:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	    MeasureNoiseEnvelope_P4_v2_20(&CapSense_config, (uint8)sensor, CapSense_sensorRaw);
 399              		.loc 1 415 0
 400 0068 7B68     		ldr	r3, [r7, #4]
 401 006a DAB2     		uxtb	r2, r3
 402 006c 6749     		ldr	r1, .L29+20
 403 006e 644B     		ldr	r3, .L29+8
 404 0070 081C     		mov	r0, r1
 405 0072 111C     		mov	r1, r2
 406 0074 1A1C     		mov	r2, r3
 407 0076 FFF7FEFF 		bl	MeasureNoiseEnvelope_P4_v2_20
 416:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	#endif /* (CapSense_TUNING_METHOD == CapSense__TUNING_AUTO) */
 417:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 418:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Baseline calculation */
 419:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Calculate difference RawData[cur] - Baseline[prev] */
 420:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     if(filteredRawData >= CapSense_sensorBaseline[sensor])
 408              		.loc 1 420 0
 409 007a 654B     		ldr	r3, .L29+24
 410 007c 7A68     		ldr	r2, [r7, #4]
 411 007e 5200     		lsl	r2, r2, #1
 412 0080 D35A     		ldrh	r3, [r2, r3]
 413 0082 3A1C     		mov	r2, r7
 414 0084 1032     		add	r2, r2, #16
 415 0086 1288     		ldrh	r2, [r2]
 416 0088 9A42     		cmp	r2, r3
 417 008a 12D3     		bcc	.L18
 421:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 422:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		CapSense_lowBaselineResetCnt[sensor] = 0u;	
 418              		.loc 1 422 0
 419 008c 614A     		ldr	r2, .L29+28
 420 008e 7B68     		ldr	r3, [r7, #4]
 421 0090 D318     		add	r3, r2, r3
 422 0092 0022     		mov	r2, #0
 423 0094 1A70     		strb	r2, [r3]
 423:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         tempRaw = filteredRawData - CapSense_sensorBaseline[sensor];
 424              		.loc 1 423 0
ARM GAS  C:\Users\IEUser\AppData\Local\Temp\cctak5Pf.s 			page 16


 425 0096 5E4B     		ldr	r3, .L29+24
 426 0098 7A68     		ldr	r2, [r7, #4]
 427 009a 5200     		lsl	r2, r2, #1
 428 009c D25A     		ldrh	r2, [r2, r3]
 429 009e 3B1C     		mov	r3, r7
 430 00a0 1233     		add	r3, r3, #18
 431 00a2 391C     		mov	r1, r7
 432 00a4 1031     		add	r1, r1, #16
 433 00a6 0988     		ldrh	r1, [r1]
 434 00a8 8A1A     		sub	r2, r1, r2
 435 00aa 1A80     		strh	r2, [r3]
 424:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         sign = 1u;    /* Positive difference - Calculate the Signal */
 436              		.loc 1 424 0
 437 00ac 0123     		mov	r3, #1
 438 00ae 7B61     		str	r3, [r7, #20]
 439 00b0 0CE0     		b	.L19
 440              	.L18:
 425:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 426:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     else
 427:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 428:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         tempRaw = CapSense_sensorBaseline[sensor] - filteredRawData;
 441              		.loc 1 428 0
 442 00b2 574B     		ldr	r3, .L29+24
 443 00b4 7A68     		ldr	r2, [r7, #4]
 444 00b6 5200     		lsl	r2, r2, #1
 445 00b8 D15A     		ldrh	r1, [r2, r3]
 446 00ba 3B1C     		mov	r3, r7
 447 00bc 1233     		add	r3, r3, #18
 448 00be 3A1C     		mov	r2, r7
 449 00c0 1032     		add	r2, r2, #16
 450 00c2 1288     		ldrh	r2, [r2]
 451 00c4 8A1A     		sub	r2, r1, r2
 452 00c6 1A80     		strh	r2, [r3]
 429:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         sign = 0u;    /* Negative difference - Do NOT calculate the Signal */
 453              		.loc 1 429 0
 454 00c8 0023     		mov	r3, #0
 455 00ca 7B61     		str	r3, [r7, #20]
 456              	.L19:
 430:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 431:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 432:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	#if (CapSense_TUNING_METHOD != CapSense__TUNING_NONE)
 433:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	if((sign == 0u) && (tempRaw > (uint16) CapSense_negativeNoiseThreshold[widget]))
 457              		.loc 1 433 0
 458 00cc 7B69     		ldr	r3, [r7, #20]
 459 00ce 002B     		cmp	r3, #0
 460 00d0 28D1     		bne	.L20
 461              		.loc 1 433 0 is_stmt 0 discriminator 1
 462 00d2 3B1C     		mov	r3, r7
 463 00d4 0F33     		add	r3, r3, #15
 464 00d6 1B78     		ldrb	r3, [r3]
 465 00d8 4F4A     		ldr	r2, .L29+32
 466 00da D35C     		ldrb	r3, [r2, r3]
 467 00dc 3A1C     		mov	r2, r7
 468 00de 1232     		add	r2, r2, #18
 469 00e0 1288     		ldrh	r2, [r2]
 470 00e2 9A42     		cmp	r2, r3
 471 00e4 1ED9     		bls	.L20
ARM GAS  C:\Users\IEUser\AppData\Local\Temp\cctak5Pf.s 			page 17


 434:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	#else
 435:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	if((sign == 0u) && (tempRaw > (uint16) CapSense_NEGATIVE_NOISE_THRESHOLD))
 436:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	#endif /* (CapSense_TUNING_METHOD != CapSense__TUNING_NONE) */ 
 437:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 438:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if(CapSense_lowBaselineResetCnt[sensor] >= CapSense_lowBaselineReset[sensor])
 472              		.loc 1 438 0 is_stmt 1
 473 00e6 4B4A     		ldr	r2, .L29+28
 474 00e8 7B68     		ldr	r3, [r7, #4]
 475 00ea D318     		add	r3, r2, r3
 476 00ec 1A78     		ldrb	r2, [r3]
 477 00ee 4B49     		ldr	r1, .L29+36
 478 00f0 7B68     		ldr	r3, [r7, #4]
 479 00f2 CB18     		add	r3, r1, r3
 480 00f4 1B78     		ldrb	r3, [r3]
 481 00f6 9A42     		cmp	r2, r3
 482 00f8 09D3     		bcc	.L21
 439:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 440:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_BaseInit(sensor);
 483              		.loc 1 440 0
 484 00fa 7B68     		ldr	r3, [r7, #4]
 485 00fc 181C     		mov	r0, r3
 486 00fe FFF7FEFF 		bl	CapSense_BaseInit
 441:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_lowBaselineResetCnt[sensor] = 0u;
 487              		.loc 1 441 0
 488 0102 444A     		ldr	r2, .L29+28
 489 0104 7B68     		ldr	r3, [r7, #4]
 490 0106 D318     		add	r3, r2, r3
 491 0108 0022     		mov	r2, #0
 492 010a 1A70     		strb	r2, [r3]
 438:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if(CapSense_lowBaselineResetCnt[sensor] >= CapSense_lowBaselineReset[sensor])
 493              		.loc 1 438 0
 494 010c 4CE0     		b	.L23
 495              	.L21:
 442:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
 443:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         else
 444:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 445:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_lowBaselineResetCnt[sensor]++;
 496              		.loc 1 445 0
 497 010e 414A     		ldr	r2, .L29+28
 498 0110 7B68     		ldr	r3, [r7, #4]
 499 0112 D318     		add	r3, r2, r3
 500 0114 1B78     		ldrb	r3, [r3]
 501 0116 0133     		add	r3, r3, #1
 502 0118 DAB2     		uxtb	r2, r3
 503 011a 3E49     		ldr	r1, .L29+28
 504 011c 7B68     		ldr	r3, [r7, #4]
 505 011e CB18     		add	r3, r1, r3
 506 0120 1A70     		strb	r2, [r3]
 438:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if(CapSense_lowBaselineResetCnt[sensor] >= CapSense_lowBaselineReset[sensor])
 507              		.loc 1 438 0
 508 0122 41E0     		b	.L23
 509              	.L20:
 446:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
 447:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 448:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     else
 449:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 450:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_AUTO_RESET == CapSense_AUTO_RESET_DISABLE)
ARM GAS  C:\Users\IEUser\AppData\Local\Temp\cctak5Pf.s 			page 18


 451:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		#if (CapSense_TUNING_METHOD != CapSense__TUNING_NONE)			
 452:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			/* Update Baseline if lower than noiseThreshold */
 453:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			if ( (tempRaw <= noiseThreshold) || 
 510              		.loc 1 453 0
 511 0124 3B1C     		mov	r3, r7
 512 0126 0E33     		add	r3, r3, #14
 513 0128 1B78     		ldrb	r3, [r3]
 514 012a 9BB2     		uxth	r3, r3
 515 012c 3A1C     		mov	r2, r7
 516 012e 1232     		add	r2, r2, #18
 517 0130 1288     		ldrh	r2, [r2]
 518 0132 9A42     		cmp	r2, r3
 519 0134 0CD9     		bls	.L24
 454:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			 ((tempRaw < (uint16) CapSense_negativeNoiseThreshold[widget])
 520              		.loc 1 454 0 discriminator 1
 521 0136 3B1C     		mov	r3, r7
 522 0138 0F33     		add	r3, r3, #15
 523 013a 1B78     		ldrb	r3, [r3]
 524 013c 364A     		ldr	r2, .L29+32
 525 013e D35C     		ldrb	r3, [r2, r3]
 453:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			if ( (tempRaw <= noiseThreshold) || 
 526              		.loc 1 453 0 discriminator 1
 527 0140 3A1C     		mov	r2, r7
 528 0142 1232     		add	r2, r2, #18
 529 0144 1288     		ldrh	r2, [r2]
 530 0146 9A42     		cmp	r2, r3
 531 0148 2ED2     		bcs	.L23
 455:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			   && (sign == 0u)))
 532              		.loc 1 455 0
 533 014a 7B69     		ldr	r3, [r7, #20]
 534 014c 002B     		cmp	r3, #0
 535 014e 2BD1     		bne	.L23
 536              	.L24:
 456:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			{
 457:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		#else
 458:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			/* Update Baseline if lower than noiseThreshold */
 459:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			if ( (tempRaw <= noiseThreshold) || 
 460:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 				 ((tempRaw < (uint16) CapSense_NEGATIVE_NOISE_THRESHOLD)
 461:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 				   && (sign == 0u)))
 462:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			{
 463:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		#endif /* (CapSense_TUNING_METHOD != CapSense__TUNING_NONE) */ 
 464:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_AUTO_RESET == CapSense_AUTO_RESET_DISABLE) */
 465:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Make full Baseline 23 bits */
 466:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 calc = (uint32) CapSense_sensorBaseline[sensor] << 8u;
 537              		.loc 1 466 0
 538 0150 2F4B     		ldr	r3, .L29+24
 539 0152 7A68     		ldr	r2, [r7, #4]
 540 0154 5200     		lsl	r2, r2, #1
 541 0156 D35A     		ldrh	r3, [r2, r3]
 542 0158 1B02     		lsl	r3, r3, #8
 543 015a BB60     		str	r3, [r7, #8]
 467:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 calc |= (uint32) CapSense_sensorBaselineLow[sensor];
 544              		.loc 1 467 0
 545 015c 304A     		ldr	r2, .L29+40
 546 015e 7B68     		ldr	r3, [r7, #4]
 547 0160 D318     		add	r3, r2, r3
 548 0162 1B78     		ldrb	r3, [r3]
ARM GAS  C:\Users\IEUser\AppData\Local\Temp\cctak5Pf.s 			page 19


 549 0164 BA68     		ldr	r2, [r7, #8]
 550 0166 1343     		orr	r3, r2
 551 0168 BB60     		str	r3, [r7, #8]
 468:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 469:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Add Raw Data to Baseline */
 470:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 calc += filteredRawData;
 552              		.loc 1 470 0
 553 016a 3B1C     		mov	r3, r7
 554 016c 1033     		add	r3, r3, #16
 555 016e 1B88     		ldrh	r3, [r3]
 556 0170 BA68     		ldr	r2, [r7, #8]
 557 0172 D318     		add	r3, r2, r3
 558 0174 BB60     		str	r3, [r7, #8]
 471:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 472:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Sub the high Baseline */
 473:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 calc -= CapSense_sensorBaseline[sensor];
 559              		.loc 1 473 0
 560 0176 264B     		ldr	r3, .L29+24
 561 0178 7A68     		ldr	r2, [r7, #4]
 562 017a 5200     		lsl	r2, r2, #1
 563 017c D35A     		ldrh	r3, [r2, r3]
 564 017e BA68     		ldr	r2, [r7, #8]
 565 0180 D31A     		sub	r3, r2, r3
 566 0182 BB60     		str	r3, [r7, #8]
 474:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 475:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Put Baseline and BaselineLow */
 476:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 CapSense_sensorBaseline[sensor] = ((uint16) (calc >> 8u));
 567              		.loc 1 476 0
 568 0184 BB68     		ldr	r3, [r7, #8]
 569 0186 1B0A     		lsr	r3, r3, #8
 570 0188 99B2     		uxth	r1, r3
 571 018a 214B     		ldr	r3, .L29+24
 572 018c 7A68     		ldr	r2, [r7, #4]
 573 018e 5200     		lsl	r2, r2, #1
 574 0190 D152     		strh	r1, [r2, r3]
 477:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 CapSense_sensorBaselineLow[sensor] = ((uint8) calc);
 575              		.loc 1 477 0
 576 0192 BB68     		ldr	r3, [r7, #8]
 577 0194 DAB2     		uxtb	r2, r3
 578 0196 2249     		ldr	r1, .L29+40
 579 0198 7B68     		ldr	r3, [r7, #4]
 580 019a CB18     		add	r3, r1, r3
 581 019c 1A70     		strb	r2, [r3]
 478:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 479:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 CapSense_lowBaselineResetCnt[sensor] = 0u;
 582              		.loc 1 479 0
 583 019e 1D4A     		ldr	r2, .L29+28
 584 01a0 7B68     		ldr	r3, [r7, #4]
 585 01a2 D318     		add	r3, r2, r3
 586 01a4 0022     		mov	r2, #0
 587 01a6 1A70     		strb	r2, [r3]
 588              	.L23:
 480:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_AUTO_RESET == CapSense_AUTO_RESET_DISABLE)
 481:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
 482:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_AUTO_RESET == CapSense_AUTO_RESET_DISABLE) */
 483:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 484:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
ARM GAS  C:\Users\IEUser\AppData\Local\Temp\cctak5Pf.s 			page 20


 485:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Calculate Signal if positive difference > noiseThreshold */
 486:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     if((tempRaw > (uint16) noiseThreshold) && (sign != 0u))
 589              		.loc 1 486 0
 590 01a8 3B1C     		mov	r3, r7
 591 01aa 0E33     		add	r3, r3, #14
 592 01ac 1B78     		ldrb	r3, [r3]
 593 01ae 9BB2     		uxth	r3, r3
 594 01b0 3A1C     		mov	r2, r7
 595 01b2 1232     		add	r2, r2, #18
 596 01b4 1288     		ldrh	r2, [r2]
 597 01b6 9A42     		cmp	r2, r3
 598 01b8 16D9     		bls	.L25
 599              		.loc 1 486 0 is_stmt 0 discriminator 1
 600 01ba 7B69     		ldr	r3, [r7, #20]
 601 01bc 002B     		cmp	r3, #0
 602 01be 13D0     		beq	.L25
 487:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 488:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_SIGNAL_SIZE == CapSense_SIGNAL_SIZE_UINT8)
 489:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Over flow defence for uint8 */
 490:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             if (tempRaw > 0xFFu)
 603              		.loc 1 490 0 is_stmt 1
 604 01c0 3B1C     		mov	r3, r7
 605 01c2 1233     		add	r3, r3, #18
 606 01c4 1B88     		ldrh	r3, [r3]
 607 01c6 FF2B     		cmp	r3, #255
 608 01c8 05D9     		bls	.L26
 491:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
 492:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 CapSense_sensorSignal[sensor] = 0xFFu;
 609              		.loc 1 492 0
 610 01ca 164A     		ldr	r2, .L29+44
 611 01cc 7B68     		ldr	r3, [r7, #4]
 612 01ce D318     		add	r3, r2, r3
 613 01d0 FF22     		mov	r2, #255
 614 01d2 1A70     		strb	r2, [r3]
 490:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             if (tempRaw > 0xFFu)
 615              		.loc 1 490 0
 616 01d4 0DE0     		b	.L16
 617              	.L26:
 493:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }    
 494:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             else 
 495:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
 496:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 CapSense_sensorSignal[sensor] = ((uint8) tempRaw);
 618              		.loc 1 496 0
 619 01d6 3B1C     		mov	r3, r7
 620 01d8 1233     		add	r3, r3, #18
 621 01da 1B88     		ldrh	r3, [r3]
 622 01dc DAB2     		uxtb	r2, r3
 623 01de 1149     		ldr	r1, .L29+44
 624 01e0 7B68     		ldr	r3, [r7, #4]
 625 01e2 CB18     		add	r3, r1, r3
 626 01e4 1A70     		strb	r2, [r3]
 490:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             if (tempRaw > 0xFFu)
 627              		.loc 1 490 0
 628 01e6 04E0     		b	.L16
 629              	.L25:
 497:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
 498:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #else
ARM GAS  C:\Users\IEUser\AppData\Local\Temp\cctak5Pf.s 			page 21


 499:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_sensorSignal[sensor] = ((uint16) tempRaw);
 500:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif  /* (CapSense_SIGNAL_SIZE == CapSense_SIGNAL_SIZE_UINT8) */
 501:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 502:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     else
 503:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 504:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Signal is zero */
 505:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_sensorSignal[sensor] = 0u;
 630              		.loc 1 505 0
 631 01e8 0E4A     		ldr	r2, .L29+44
 632 01ea 7B68     		ldr	r3, [r7, #4]
 633 01ec D318     		add	r3, r2, r3
 634 01ee 0022     		mov	r2, #0
 635 01f0 1A70     		strb	r2, [r3]
 636              	.L16:
 506:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 507:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 508:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TOTAL_GENERICS_COUNT)
 509:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Exclude generic widget */
 510:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
 511:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif  /* CapSense_TOTAL_GENERICS_COUNT */
 512:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 637              		.loc 1 512 0
 638 01f2 BD46     		mov	sp, r7
 639 01f4 07B0     		add	sp, sp, #28
 640              		@ sp needed
 641 01f6 90BD     		pop	{r4, r7, pc}
 642              	.L30:
 643              		.align	2
 644              	.L29:
 645 01f8 00000000 		.word	CapSense_widgetNumber
 646 01fc 00000000 		.word	CapSense_noiseThreshold
 647 0200 00000000 		.word	CapSense_sensorRaw
 648 0204 00000000 		.word	CapSense_enableRawFilters
 649 0208 00000000 		.word	CapSense_rawFilterData1
 650 020c 00000000 		.word	CapSense_config
 651 0210 00000000 		.word	CapSense_sensorBaseline
 652 0214 00000000 		.word	CapSense_lowBaselineResetCnt
 653 0218 00000000 		.word	CapSense_negativeNoiseThreshold
 654 021c 00000000 		.word	CapSense_lowBaselineReset
 655 0220 00000000 		.word	CapSense_sensorBaselineLow
 656 0224 00000000 		.word	CapSense_sensorSignal
 657              		.cfi_endproc
 658              	.LFE37:
 659              		.size	CapSense_UpdateBaselineNoThreshold, .-CapSense_UpdateBaselineNoThreshold
 660              		.section	.text.CapSense_UpdateSensorBaseline,"ax",%progbits
 661              		.align	2
 662              		.global	CapSense_UpdateSensorBaseline
 663              		.code	16
 664              		.thumb_func
 665              		.type	CapSense_UpdateSensorBaseline, %function
 666              	CapSense_UpdateSensorBaseline:
 667              	.LFB38:
 513:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 514:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 515:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 516:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_UpdateSensorBaseline
 517:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
ARM GAS  C:\Users\IEUser\AppData\Local\Temp\cctak5Pf.s 			page 22


 518:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 519:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 520:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Updates the CapSense_sensorBaseline[sensor] array element using the 
 521:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  LP filter with k = 256. The signal calculates the difference of count by 
 522:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  subtracting the previous baseline from the current raw count value and stores
 523:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  it in CapSense_sensorSignal[sensor]. 
 524:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  If the auto reset option is enabled, the baseline updated regards the noise threshold. 
 525:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  If the auto reset option is disabled, the baseline stops updating. 
 526:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Baseline is loaded with raw count value if a signal is greater than zero and  
 527:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  if signal is less than noise threshold.
 528:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Raw data filters are applied to the values if enabled before baseline 
 529:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  calculation.
 530:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API updates the thresholds in the Smartsense Mode.
 531:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 532:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 533:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor:  Sensor number.
 534:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 535:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 536:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 537:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 538:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 539:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_widgetNumber[]  - stores widget numbers.
 540:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * 
 541:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 542:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 543:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * 
 544:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 545:.\Generated_Source\PSoC4/CapSense_CSHL.c ****  void CapSense_UpdateSensorBaseline(uint32 sensor)
 546:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 668              		.loc 1 546 0
 669              		.cfi_startproc
 670 0000 80B5     		push	{r7, lr}
 671              		.cfi_def_cfa_offset 8
 672              		.cfi_offset 7, -8
 673              		.cfi_offset 14, -4
 674 0002 82B0     		sub	sp, sp, #8
 675              		.cfi_def_cfa_offset 16
 676 0004 00AF     		add	r7, sp, #0
 677              		.cfi_def_cfa_register 7
 678 0006 7860     		str	r0, [r7, #4]
 547:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TOTAL_GENERICS_COUNT)
 548:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		uint32 widget;
 549:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		
 550:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		widget = CapSense_widgetNumber[sensor];
 551:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	
 552:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Exclude generic widget */
 553:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if(widget < CapSense_END_OF_WIDGETS_INDEX)
 554:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 555:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif  /* CapSense_TOTAL_GENERICS_COUNT */
 556:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 557:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TUNING_METHOD == CapSense__TUNING_AUTO)
 558:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     	CapSense_UpdateThresholds(sensor);
 679              		.loc 1 558 0
 680 0008 7B68     		ldr	r3, [r7, #4]
 681 000a 181C     		mov	r0, r3
 682 000c FFF7FEFF 		bl	CapSense_UpdateThresholds
 559:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif /* (CapSense_TUNING_METHOD == CapSense__TUNING_AUTO) */
ARM GAS  C:\Users\IEUser\AppData\Local\Temp\cctak5Pf.s 			page 23


 560:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 561:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_UpdateBaselineNoThreshold(sensor);
 683              		.loc 1 561 0
 684 0010 7B68     		ldr	r3, [r7, #4]
 685 0012 181C     		mov	r0, r3
 686 0014 FFF7FEFF 		bl	CapSense_UpdateBaselineNoThreshold
 562:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
 563:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TOTAL_GENERICS_COUNT)
 564:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Exclude generic widget */
 565:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
 566:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif  /* CapSense_TOTAL_GENERICS_COUNT */
 567:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 687              		.loc 1 567 0
 688 0018 BD46     		mov	sp, r7
 689 001a 02B0     		add	sp, sp, #8
 690              		@ sp needed
 691 001c 80BD     		pop	{r7, pc}
 692              		.cfi_endproc
 693              	.LFE38:
 694              		.size	CapSense_UpdateSensorBaseline, .-CapSense_UpdateSensorBaseline
 695 001e C046     		.section	.text.CapSense_UpdateEnabledBaselines,"ax",%progbits
 696              		.align	2
 697              		.global	CapSense_UpdateEnabledBaselines
 698              		.code	16
 699              		.thumb_func
 700              		.type	CapSense_UpdateEnabledBaselines, %function
 701              	CapSense_UpdateEnabledBaselines:
 702              	.LFB39:
 568:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 569:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 570:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 571:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_UpdateEnabledBaselines
 572:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 573:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 574:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 575:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Checks CapSense_sensorEnableMask[] array and calls the 
 576:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_UpdateSensorBaseline function to update the baselines 
 577:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  for the enabled sensors.
 578:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 579:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 580:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 581:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 582:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 583:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 584:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 585:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 586:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[] - used to store the sensor scanning 
 587:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  state.
 588:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[0] contains the masked bits for sensors 
 589:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *   0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
 590:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[1] contains the masked bits for 
 591:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
 592:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  0 - sensor doesn't scan by CapSense_ScanEnabledWidgets().
 593:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  1 - sensor scans by CapSense_ScanEnabledWidgets().
 594:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * 
 595:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 596:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
ARM GAS  C:\Users\IEUser\AppData\Local\Temp\cctak5Pf.s 			page 24


 597:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * 
 598:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 599:.\Generated_Source\PSoC4/CapSense_CSHL.c ****  void CapSense_UpdateEnabledBaselines(void)
 600:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 703              		.loc 1 600 0
 704              		.cfi_startproc
 705 0000 80B5     		push	{r7, lr}
 706              		.cfi_def_cfa_offset 8
 707              		.cfi_offset 7, -8
 708              		.cfi_offset 14, -4
 709 0002 82B0     		sub	sp, sp, #8
 710              		.cfi_def_cfa_offset 16
 711 0004 00AF     		add	r7, sp, #0
 712              		.cfi_def_cfa_register 7
 601:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 i;
 602:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 isSensorEnabled;
 603:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
 604:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     for(i = 0u; i < CapSense_TOTAL_SENSOR_COUNT; i++)
 713              		.loc 1 604 0
 714 0006 0023     		mov	r3, #0
 715 0008 7B60     		str	r3, [r7, #4]
 716 000a 11E0     		b	.L33
 717              	.L35:
 605:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 606:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         isSensorEnabled = CapSense_GetBitValue(CapSense_sensorEnableMask, i);
 718              		.loc 1 606 0
 719 000c 0B4A     		ldr	r2, .L36
 720 000e 7B68     		ldr	r3, [r7, #4]
 721 0010 101C     		mov	r0, r2
 722 0012 191C     		mov	r1, r3
 723 0014 FFF7FEFF 		bl	CapSense_GetBitValue
 724 0018 031C     		mov	r3, r0
 725 001a 3B60     		str	r3, [r7]
 607:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
 608:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if(0u != isSensorEnabled)
 726              		.loc 1 608 0
 727 001c 3B68     		ldr	r3, [r7]
 728 001e 002B     		cmp	r3, #0
 729 0020 03D0     		beq	.L34
 609:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 610:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_UpdateSensorBaseline(i);
 730              		.loc 1 610 0
 731 0022 7B68     		ldr	r3, [r7, #4]
 732 0024 181C     		mov	r0, r3
 733 0026 FFF7FEFF 		bl	CapSense_UpdateSensorBaseline
 734              	.L34:
 604:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     for(i = 0u; i < CapSense_TOTAL_SENSOR_COUNT; i++)
 735              		.loc 1 604 0
 736 002a 7B68     		ldr	r3, [r7, #4]
 737 002c 0133     		add	r3, r3, #1
 738 002e 7B60     		str	r3, [r7, #4]
 739              	.L33:
 604:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     for(i = 0u; i < CapSense_TOTAL_SENSOR_COUNT; i++)
 740              		.loc 1 604 0 is_stmt 0 discriminator 1
 741 0030 7B68     		ldr	r3, [r7, #4]
 742 0032 042B     		cmp	r3, #4
 743 0034 EAD9     		bls	.L35
ARM GAS  C:\Users\IEUser\AppData\Local\Temp\cctak5Pf.s 			page 25


 611:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
 612:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 613:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 744              		.loc 1 613 0 is_stmt 1
 745 0036 BD46     		mov	sp, r7
 746 0038 02B0     		add	sp, sp, #8
 747              		@ sp needed
 748 003a 80BD     		pop	{r7, pc}
 749              	.L37:
 750              		.align	2
 751              	.L36:
 752 003c 00000000 		.word	CapSense_sensorEnableMask
 753              		.cfi_endproc
 754              	.LFE39:
 755              		.size	CapSense_UpdateEnabledBaselines, .-CapSense_UpdateEnabledBaselines
 756              		.section	.text.CapSense_UpdateWidgetBaseline,"ax",%progbits
 757              		.align	2
 758              		.global	CapSense_UpdateWidgetBaseline
 759              		.code	16
 760              		.thumb_func
 761              		.type	CapSense_UpdateWidgetBaseline, %function
 762              	CapSense_UpdateWidgetBaseline:
 763              	.LFB40:
 614:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 615:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 616:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_UpdateWidgetBaseline
 617:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 618:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 619:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 620:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Checks CapSense_sensorEnableMask[] array and calls the 
 621:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_UpdateSensorBaseline function to update the baselines 
 622:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  for the enabled sensors that belong to widget.
 623:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 624:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 625:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  widget:  Widget number.
 626:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 627:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 628:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 629:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 630:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 631:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[] - used to store the sensor scanning 
 632:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  state.
 633:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[0] contains the masked bits for sensors 
 634:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *   0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
 635:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[1] contains the masked bits for 
 636:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
 637:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  0 - sensor doesn't scan by CapSense_ScanEnabledWidgets().
 638:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  1 - sensor scans by CapSense_ScanEnabledWidgets().
 639:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * 
 640:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 641:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 642:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * 
 643:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 644:.\Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_UpdateWidgetBaseline(uint32 widget)
 645:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 764              		.loc 1 645 0
 765              		.cfi_startproc
ARM GAS  C:\Users\IEUser\AppData\Local\Temp\cctak5Pf.s 			page 26


 766 0000 80B5     		push	{r7, lr}
 767              		.cfi_def_cfa_offset 8
 768              		.cfi_offset 7, -8
 769              		.cfi_offset 14, -4
 770 0002 88B0     		sub	sp, sp, #32
 771              		.cfi_def_cfa_offset 40
 772 0004 00AF     		add	r7, sp, #0
 773              		.cfi_def_cfa_register 7
 774 0006 7860     		str	r0, [r7, #4]
 646:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 sensorsPerWidget;
 647:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 firstSensor;
 648:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 lastSensor;
 649:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 i;
 650:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 isSensorEnabled;
 651:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
 652:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	/* Get number of sensors in widget */
 653:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	sensorsPerWidget = CapSense_numberOfSensors[widget];
 775              		.loc 1 653 0
 776 0008 0523     		mov	r3, #5
 777 000a BB61     		str	r3, [r7, #24]
 654:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 655:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	/* Get first sensor in widget */
 656:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	firstSensor = CapSense_rawDataIndex[widget];
 778              		.loc 1 656 0
 779 000c 0023     		mov	r3, #0
 780 000e 7B61     		str	r3, [r7, #20]
 657:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	
 658:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	/* Get last sensor in widget */
 659:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	lastSensor = (CapSense_rawDataIndex[widget] + sensorsPerWidget);
 781              		.loc 1 659 0
 782 0010 0023     		mov	r3, #0
 783 0012 1A1C     		mov	r2, r3
 784 0014 BB69     		ldr	r3, [r7, #24]
 785 0016 D318     		add	r3, r2, r3
 786 0018 3B61     		str	r3, [r7, #16]
 660:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	
 661:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     for(i = firstSensor; i < lastSensor; i++)
 787              		.loc 1 661 0
 788 001a 7B69     		ldr	r3, [r7, #20]
 789 001c FB61     		str	r3, [r7, #28]
 790 001e 11E0     		b	.L39
 791              	.L41:
 662:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 663:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         isSensorEnabled = CapSense_GetBitValue(CapSense_sensorEnableMask, i);
 792              		.loc 1 663 0
 793 0020 0C4A     		ldr	r2, .L42
 794 0022 FB69     		ldr	r3, [r7, #28]
 795 0024 101C     		mov	r0, r2
 796 0026 191C     		mov	r1, r3
 797 0028 FFF7FEFF 		bl	CapSense_GetBitValue
 798 002c 031C     		mov	r3, r0
 799 002e FB60     		str	r3, [r7, #12]
 664:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
 665:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if(0u != isSensorEnabled)
 800              		.loc 1 665 0
 801 0030 FB68     		ldr	r3, [r7, #12]
 802 0032 002B     		cmp	r3, #0
ARM GAS  C:\Users\IEUser\AppData\Local\Temp\cctak5Pf.s 			page 27


 803 0034 03D0     		beq	.L40
 666:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 667:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_UpdateSensorBaseline(i);
 804              		.loc 1 667 0
 805 0036 FB69     		ldr	r3, [r7, #28]
 806 0038 181C     		mov	r0, r3
 807 003a FFF7FEFF 		bl	CapSense_UpdateSensorBaseline
 808              	.L40:
 661:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     for(i = firstSensor; i < lastSensor; i++)
 809              		.loc 1 661 0
 810 003e FB69     		ldr	r3, [r7, #28]
 811 0040 0133     		add	r3, r3, #1
 812 0042 FB61     		str	r3, [r7, #28]
 813              	.L39:
 661:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     for(i = firstSensor; i < lastSensor; i++)
 814              		.loc 1 661 0 is_stmt 0 discriminator 1
 815 0044 FA69     		ldr	r2, [r7, #28]
 816 0046 3B69     		ldr	r3, [r7, #16]
 817 0048 9A42     		cmp	r2, r3
 818 004a E9D3     		bcc	.L41
 668:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
 669:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 670:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 819              		.loc 1 670 0 is_stmt 1
 820 004c BD46     		mov	sp, r7
 821 004e 08B0     		add	sp, sp, #32
 822              		@ sp needed
 823 0050 80BD     		pop	{r7, pc}
 824              	.L43:
 825 0052 C046     		.align	2
 826              	.L42:
 827 0054 00000000 		.word	CapSense_sensorEnableMask
 828              		.cfi_endproc
 829              	.LFE40:
 830              		.size	CapSense_UpdateWidgetBaseline, .-CapSense_UpdateWidgetBaseline
 831              		.section	.text.CapSense_GetBaselineData,"ax",%progbits
 832              		.align	2
 833              		.global	CapSense_GetBaselineData
 834              		.code	16
 835              		.thumb_func
 836              		.type	CapSense_GetBaselineData, %function
 837              	CapSense_GetBaselineData:
 838              	.LFB41:
 671:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 672:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 673:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 674:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_GetBaselineData
 675:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 676:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 677:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 678:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This function reads the sensor baseline from the component.
 679:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 680:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 681:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor:  Sensor number.
 682:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 683:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 684:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns the baseline value of the sensor indicated by an argument.
ARM GAS  C:\Users\IEUser\AppData\Local\Temp\cctak5Pf.s 			page 28


 685:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 686:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 687:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorBaseline[] - the array with an initial values by scanning
 688:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * 
 689:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 690:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 691:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 692:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 693:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint16 CapSense_GetBaselineData(uint32 sensor)
 694:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 839              		.loc 1 694 0
 840              		.cfi_startproc
 841 0000 80B5     		push	{r7, lr}
 842              		.cfi_def_cfa_offset 8
 843              		.cfi_offset 7, -8
 844              		.cfi_offset 14, -4
 845 0002 82B0     		sub	sp, sp, #8
 846              		.cfi_def_cfa_offset 16
 847 0004 00AF     		add	r7, sp, #0
 848              		.cfi_def_cfa_register 7
 849 0006 7860     		str	r0, [r7, #4]
 695:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	return (CapSense_sensorBaseline[sensor]);
 850              		.loc 1 695 0
 851 0008 034B     		ldr	r3, .L46
 852 000a 7A68     		ldr	r2, [r7, #4]
 853 000c 5200     		lsl	r2, r2, #1
 854 000e D35A     		ldrh	r3, [r2, r3]
 696:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 855              		.loc 1 696 0
 856 0010 181C     		mov	r0, r3
 857 0012 BD46     		mov	sp, r7
 858 0014 02B0     		add	sp, sp, #8
 859              		@ sp needed
 860 0016 80BD     		pop	{r7, pc}
 861              	.L47:
 862              		.align	2
 863              	.L46:
 864 0018 00000000 		.word	CapSense_sensorBaseline
 865              		.cfi_endproc
 866              	.LFE41:
 867              		.size	CapSense_GetBaselineData, .-CapSense_GetBaselineData
 868              		.section	.text.CapSense_SetBaselineData,"ax",%progbits
 869              		.align	2
 870              		.global	CapSense_SetBaselineData
 871              		.code	16
 872              		.thumb_func
 873              		.type	CapSense_SetBaselineData, %function
 874              	CapSense_SetBaselineData:
 875              	.LFB42:
 697:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 698:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 699:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 700:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_SetBaselineData
 701:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 702:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 703:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 704:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API writes the data value passed as an argument to the sensor baseline array.
ARM GAS  C:\Users\IEUser\AppData\Local\Temp\cctak5Pf.s 			page 29


 705:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 706:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 707:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor:  Sensor number.
 708:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  data:    Sensor baseline.
 709:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 710:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 711:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None.
 712:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 713:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 714:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorBaseline[] - the array with initial values by scanning
 715:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * 
 716:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 717:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 718:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 719:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 720:.\Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_SetBaselineData(uint32 sensor, uint16 data)
 721:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 876              		.loc 1 721 0
 877              		.cfi_startproc
 878 0000 80B5     		push	{r7, lr}
 879              		.cfi_def_cfa_offset 8
 880              		.cfi_offset 7, -8
 881              		.cfi_offset 14, -4
 882 0002 82B0     		sub	sp, sp, #8
 883              		.cfi_def_cfa_offset 16
 884 0004 00AF     		add	r7, sp, #0
 885              		.cfi_def_cfa_register 7
 886 0006 7860     		str	r0, [r7, #4]
 887 0008 0A1C     		mov	r2, r1
 888 000a BB1C     		add	r3, r7, #2
 889 000c 1A80     		strh	r2, [r3]
 722:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	CapSense_sensorBaseline[sensor] = data;
 890              		.loc 1 722 0
 891 000e 044B     		ldr	r3, .L49
 892 0010 7A68     		ldr	r2, [r7, #4]
 893 0012 5200     		lsl	r2, r2, #1
 894 0014 B91C     		add	r1, r7, #2
 895 0016 0988     		ldrh	r1, [r1]
 896 0018 D152     		strh	r1, [r2, r3]
 723:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 897              		.loc 1 723 0
 898 001a BD46     		mov	sp, r7
 899 001c 02B0     		add	sp, sp, #8
 900              		@ sp needed
 901 001e 80BD     		pop	{r7, pc}
 902              	.L50:
 903              		.align	2
 904              	.L49:
 905 0020 00000000 		.word	CapSense_sensorBaseline
 906              		.cfi_endproc
 907              	.LFE42:
 908              		.size	CapSense_SetBaselineData, .-CapSense_SetBaselineData
 909              		.section	.text.CapSense_GetDiffCountData,"ax",%progbits
 910              		.align	2
 911              		.global	CapSense_GetDiffCountData
 912              		.code	16
 913              		.thumb_func
ARM GAS  C:\Users\IEUser\AppData\Local\Temp\cctak5Pf.s 			page 30


 914              		.type	CapSense_GetDiffCountData, %function
 915              	CapSense_GetDiffCountData:
 916              	.LFB43:
 724:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 725:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 726:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 727:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_GetDiffCountData
 728:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 729:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 730:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 731:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This function returns the Sensor Signal from the component.
 732:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 733:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 734:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor:  Sensor number.
 735:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 736:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 737:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns the difference count value of the sensor indicated by the 
 738:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  argument. 
 739:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 740:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 741:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorSignal[] - the array with difference counts for sensors
 742:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * 
 743:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 744:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 745:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 746:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 747:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_GetDiffCountData(uint32 sensor)
 748:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 917              		.loc 1 748 0
 918              		.cfi_startproc
 919 0000 80B5     		push	{r7, lr}
 920              		.cfi_def_cfa_offset 8
 921              		.cfi_offset 7, -8
 922              		.cfi_offset 14, -4
 923 0002 82B0     		sub	sp, sp, #8
 924              		.cfi_def_cfa_offset 16
 925 0004 00AF     		add	r7, sp, #0
 926              		.cfi_def_cfa_register 7
 927 0006 7860     		str	r0, [r7, #4]
 749:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	return (CapSense_sensorSignal[sensor]);
 928              		.loc 1 749 0
 929 0008 034A     		ldr	r2, .L53
 930 000a 7B68     		ldr	r3, [r7, #4]
 931 000c D318     		add	r3, r2, r3
 932 000e 1B78     		ldrb	r3, [r3]
 750:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 933              		.loc 1 750 0
 934 0010 181C     		mov	r0, r3
 935 0012 BD46     		mov	sp, r7
 936 0014 02B0     		add	sp, sp, #8
 937              		@ sp needed
 938 0016 80BD     		pop	{r7, pc}
 939              	.L54:
 940              		.align	2
 941              	.L53:
 942 0018 00000000 		.word	CapSense_sensorSignal
 943              		.cfi_endproc
ARM GAS  C:\Users\IEUser\AppData\Local\Temp\cctak5Pf.s 			page 31


 944              	.LFE43:
 945              		.size	CapSense_GetDiffCountData, .-CapSense_GetDiffCountData
 946              		.section	.text.CapSense_SetDiffCountData,"ax",%progbits
 947              		.align	2
 948              		.global	CapSense_SetDiffCountData
 949              		.code	16
 950              		.thumb_func
 951              		.type	CapSense_SetDiffCountData, %function
 952              	CapSense_SetDiffCountData:
 953              	.LFB44:
 751:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 752:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 753:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 754:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_SetDiffCountData
 755:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 756:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 757:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 758:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API writes the data value passed as an argument to the sensor signal array.
 759:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 760:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 761:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor:  Sensor number.
 762:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  value:   Sensor signal.
 763:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 764:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 765:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None. 
 766:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 767:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 768:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorSignal[] - the array with difference counts for sensors
 769:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * 
 770:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 771:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 772:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 773:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 774:.\Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_SetDiffCountData(uint32 sensor, uint8 value)
 775:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 954              		.loc 1 775 0
 955              		.cfi_startproc
 956 0000 80B5     		push	{r7, lr}
 957              		.cfi_def_cfa_offset 8
 958              		.cfi_offset 7, -8
 959              		.cfi_offset 14, -4
 960 0002 82B0     		sub	sp, sp, #8
 961              		.cfi_def_cfa_offset 16
 962 0004 00AF     		add	r7, sp, #0
 963              		.cfi_def_cfa_register 7
 964 0006 7860     		str	r0, [r7, #4]
 965 0008 0A1C     		mov	r2, r1
 966 000a FB1C     		add	r3, r7, #3
 967 000c 1A70     		strb	r2, [r3]
 776:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_sensorSignal[sensor] = value;
 968              		.loc 1 776 0
 969 000e 044A     		ldr	r2, .L56
 970 0010 7B68     		ldr	r3, [r7, #4]
 971 0012 D318     		add	r3, r2, r3
 972 0014 FA1C     		add	r2, r7, #3
 973 0016 1278     		ldrb	r2, [r2]
 974 0018 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\IEUser\AppData\Local\Temp\cctak5Pf.s 			page 32


 777:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 975              		.loc 1 777 0
 976 001a BD46     		mov	sp, r7
 977 001c 02B0     		add	sp, sp, #8
 978              		@ sp needed
 979 001e 80BD     		pop	{r7, pc}
 980              	.L57:
 981              		.align	2
 982              	.L56:
 983 0020 00000000 		.word	CapSense_sensorSignal
 984              		.cfi_endproc
 985              	.LFE44:
 986              		.size	CapSense_SetDiffCountData, .-CapSense_SetDiffCountData
 987              		.section	.text.CapSense_GetFingerThreshold,"ax",%progbits
 988              		.align	2
 989              		.global	CapSense_GetFingerThreshold
 990              		.code	16
 991              		.thumb_func
 992              		.type	CapSense_GetFingerThreshold, %function
 993              	CapSense_GetFingerThreshold:
 994              	.LFB45:
 778:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 779:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 780:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 781:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_GetFingerThreshold
 782:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 783:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 784:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 785:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This function reads the finger threshold from the component.
 786:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 787:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 788:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  widget:  widget number.
 789:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 790:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 791:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns the finger threshold of the widget indicated by the argument. 
 792:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 793:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 794:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_fingerThreshold[] - This array contains the level of signal 
 795:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  for each widget that is determined if a finger is present on the widget.
 796:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 797:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 798:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 799:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 800:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 801:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_GetFingerThreshold(uint32 widget)
 802:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 995              		.loc 1 802 0
 996              		.cfi_startproc
 997 0000 80B5     		push	{r7, lr}
 998              		.cfi_def_cfa_offset 8
 999              		.cfi_offset 7, -8
 1000              		.cfi_offset 14, -4
 1001 0002 82B0     		sub	sp, sp, #8
 1002              		.cfi_def_cfa_offset 16
 1003 0004 00AF     		add	r7, sp, #0
 1004              		.cfi_def_cfa_register 7
 1005 0006 7860     		str	r0, [r7, #4]
ARM GAS  C:\Users\IEUser\AppData\Local\Temp\cctak5Pf.s 			page 33


 803:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	return(CapSense_fingerThreshold[widget]);
 1006              		.loc 1 803 0
 1007 0008 034A     		ldr	r2, .L60
 1008 000a 7B68     		ldr	r3, [r7, #4]
 1009 000c D318     		add	r3, r2, r3
 1010 000e 1B78     		ldrb	r3, [r3]
 804:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 1011              		.loc 1 804 0
 1012 0010 181C     		mov	r0, r3
 1013 0012 BD46     		mov	sp, r7
 1014 0014 02B0     		add	sp, sp, #8
 1015              		@ sp needed
 1016 0016 80BD     		pop	{r7, pc}
 1017              	.L61:
 1018              		.align	2
 1019              	.L60:
 1020 0018 00000000 		.word	CapSense_fingerThreshold
 1021              		.cfi_endproc
 1022              	.LFE45:
 1023              		.size	CapSense_GetFingerThreshold, .-CapSense_GetFingerThreshold
 1024              		.section	.text.CapSense_GetNoiseThreshold,"ax",%progbits
 1025              		.align	2
 1026              		.global	CapSense_GetNoiseThreshold
 1027              		.code	16
 1028              		.thumb_func
 1029              		.type	CapSense_GetNoiseThreshold, %function
 1030              	CapSense_GetNoiseThreshold:
 1031              	.LFB46:
 805:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 806:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 807:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 808:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_GetNoiseThreshold
 809:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 810:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 811:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 812:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This function reads the noise threshold from the component.
 813:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 814:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 815:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  widget:  widget number.
 816:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 817:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 818:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns the noise threshold of the widget indicated by the argument. 
 819:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 820:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 821:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_noiseThreshold[] - This array contains the level of signal 
 822:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  for each widget that determines the level of noise in the capacitive scan.
 823:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * 
 824:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 825:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 826:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 827:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 828:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_GetNoiseThreshold(uint32 widget)
 829:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 1032              		.loc 1 829 0
 1033              		.cfi_startproc
 1034 0000 80B5     		push	{r7, lr}
 1035              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\IEUser\AppData\Local\Temp\cctak5Pf.s 			page 34


 1036              		.cfi_offset 7, -8
 1037              		.cfi_offset 14, -4
 1038 0002 82B0     		sub	sp, sp, #8
 1039              		.cfi_def_cfa_offset 16
 1040 0004 00AF     		add	r7, sp, #0
 1041              		.cfi_def_cfa_register 7
 1042 0006 7860     		str	r0, [r7, #4]
 830:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	return (CapSense_noiseThreshold[widget]);
 1043              		.loc 1 830 0
 1044 0008 034A     		ldr	r2, .L64
 1045 000a 7B68     		ldr	r3, [r7, #4]
 1046 000c D318     		add	r3, r2, r3
 1047 000e 1B78     		ldrb	r3, [r3]
 831:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 1048              		.loc 1 831 0
 1049 0010 181C     		mov	r0, r3
 1050 0012 BD46     		mov	sp, r7
 1051 0014 02B0     		add	sp, sp, #8
 1052              		@ sp needed
 1053 0016 80BD     		pop	{r7, pc}
 1054              	.L65:
 1055              		.align	2
 1056              	.L64:
 1057 0018 00000000 		.word	CapSense_noiseThreshold
 1058              		.cfi_endproc
 1059              	.LFE46:
 1060              		.size	CapSense_GetNoiseThreshold, .-CapSense_GetNoiseThreshold
 1061              		.section	.text.CapSense_GetFingerHysteresis,"ax",%progbits
 1062              		.align	2
 1063              		.global	CapSense_GetFingerHysteresis
 1064              		.code	16
 1065              		.thumb_func
 1066              		.type	CapSense_GetFingerHysteresis, %function
 1067              	CapSense_GetFingerHysteresis:
 1068              	.LFB47:
 832:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 833:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 834:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 835:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_GetFingerHysteresis
 836:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 837:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 838:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 839:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This function reads the Hysteresis value from the component.
 840:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 841:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 842:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  widget:  widget number.
 843:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 844:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 845:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns the Hysteresis of the widget indicated by the argument. 
 846:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 847:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 848:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_hysteresis[] - This array contains the hysteresis value 
 849:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *   for each widget.
 850:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_widgetNumberSld - structure with dynamic sliders' parameters.
 851:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 852:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 853:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
ARM GAS  C:\Users\IEUser\AppData\Local\Temp\cctak5Pf.s 			page 35


 854:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 855:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 856:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_GetFingerHysteresis(uint32 widget)
 857:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 1069              		.loc 1 857 0
 1070              		.cfi_startproc
 1071 0000 80B5     		push	{r7, lr}
 1072              		.cfi_def_cfa_offset 8
 1073              		.cfi_offset 7, -8
 1074              		.cfi_offset 14, -4
 1075 0002 82B0     		sub	sp, sp, #8
 1076              		.cfi_def_cfa_offset 16
 1077 0004 00AF     		add	r7, sp, #0
 1078              		.cfi_def_cfa_register 7
 1079 0006 7860     		str	r0, [r7, #4]
 858:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	return(CapSense_hysteresis[widget]);
 1080              		.loc 1 858 0
 1081 0008 034A     		ldr	r2, .L68
 1082 000a 7B68     		ldr	r3, [r7, #4]
 1083 000c D318     		add	r3, r2, r3
 1084 000e 1B78     		ldrb	r3, [r3]
 859:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 1085              		.loc 1 859 0
 1086 0010 181C     		mov	r0, r3
 1087 0012 BD46     		mov	sp, r7
 1088 0014 02B0     		add	sp, sp, #8
 1089              		@ sp needed
 1090 0016 80BD     		pop	{r7, pc}
 1091              	.L69:
 1092              		.align	2
 1093              	.L68:
 1094 0018 00000000 		.word	CapSense_hysteresis
 1095              		.cfi_endproc
 1096              	.LFE47:
 1097              		.size	CapSense_GetFingerHysteresis, .-CapSense_GetFingerHysteresis
 1098              		.section	.text.CapSense_GetNegativeNoiseThreshold,"ax",%progbits
 1099              		.align	2
 1100              		.global	CapSense_GetNegativeNoiseThreshold
 1101              		.code	16
 1102              		.thumb_func
 1103              		.type	CapSense_GetNegativeNoiseThreshold, %function
 1104              	CapSense_GetNegativeNoiseThreshold:
 1105              	.LFB48:
 860:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 861:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 862:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 863:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_GetNegativeNoiseThreshold
 864:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 865:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 866:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 867:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This function reads the negative noise threshold from the component.
 868:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 869:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters: 
 870:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None.
 871:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 872:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return Value: 
 873:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns the negative noise threshold
ARM GAS  C:\Users\IEUser\AppData\Local\Temp\cctak5Pf.s 			page 36


 874:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 875:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 876:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_negativeNoiseThreshold - This variable specifies the negative 
 877:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *   difference between the raw count and baseline levels for Baseline resetting
 878:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *   to the raw count level.
 879:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * 
 880:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 881:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 882:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 883:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 884:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_GetNegativeNoiseThreshold(uint32 widget)
 885:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 1106              		.loc 1 885 0
 1107              		.cfi_startproc
 1108 0000 80B5     		push	{r7, lr}
 1109              		.cfi_def_cfa_offset 8
 1110              		.cfi_offset 7, -8
 1111              		.cfi_offset 14, -4
 1112 0002 82B0     		sub	sp, sp, #8
 1113              		.cfi_def_cfa_offset 16
 1114 0004 00AF     		add	r7, sp, #0
 1115              		.cfi_def_cfa_register 7
 1116 0006 7860     		str	r0, [r7, #4]
 886:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if (CapSense_TUNING_METHOD != CapSense__TUNING_NONE)
 887:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	return(CapSense_negativeNoiseThreshold[widget]);
 1117              		.loc 1 887 0
 1118 0008 034A     		ldr	r2, .L72
 1119 000a 7B68     		ldr	r3, [r7, #4]
 1120 000c D318     		add	r3, r2, r3
 1121 000e 1B78     		ldrb	r3, [r3]
 888:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #else
 889:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	return(CapSense_NEGATIVE_NOISE_THRESHOLD);
 890:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (CapSense_TUNING_METHOD != CapSense__TUNING_NONE) */ 
 891:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 1122              		.loc 1 891 0
 1123 0010 181C     		mov	r0, r3
 1124 0012 BD46     		mov	sp, r7
 1125 0014 02B0     		add	sp, sp, #8
 1126              		@ sp needed
 1127 0016 80BD     		pop	{r7, pc}
 1128              	.L73:
 1129              		.align	2
 1130              	.L72:
 1131 0018 00000000 		.word	CapSense_negativeNoiseThreshold
 1132              		.cfi_endproc
 1133              	.LFE48:
 1134              		.size	CapSense_GetNegativeNoiseThreshold, .-CapSense_GetNegativeNoiseThreshold
 1135              		.section	.text.CapSense_SetFingerThreshold,"ax",%progbits
 1136              		.align	2
 1137              		.global	CapSense_SetFingerThreshold
 1138              		.code	16
 1139              		.thumb_func
 1140              		.type	CapSense_SetFingerThreshold, %function
 1141              	CapSense_SetFingerThreshold:
 1142              	.LFB49:
 892:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 893:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
ARM GAS  C:\Users\IEUser\AppData\Local\Temp\cctak5Pf.s 			page 37


 894:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if(CapSense_TUNING_METHOD != CapSense__TUNING_NONE)
 895:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	/*******************************************************************************
 896:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Function Name: CapSense_SetFingerThreshold
 897:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	********************************************************************************
 898:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
 899:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Summary:
 900:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  This API sets the finger threshold value for a widget. 
 901:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
 902:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Parameters: 
 903:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  sensorNumber:  widget index. 
 904:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  value:  Finger threshold value for the widget.
 905:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
 906:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Return Value: 
 907:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
 908:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
 909:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Global Variables:
 910:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  CapSense_fingerThreshold[] - This array contains the level of signal 
 911:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*   for each widget that determines if a finger is present on the widget.
 912:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* 
 913:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Side Effects:
 914:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
 915:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
 916:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*******************************************************************************/
 917:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	void CapSense_SetFingerThreshold(uint32 widget, uint8 value)
 918:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	{	
 1143              		.loc 1 918 0
 1144              		.cfi_startproc
 1145 0000 80B5     		push	{r7, lr}
 1146              		.cfi_def_cfa_offset 8
 1147              		.cfi_offset 7, -8
 1148              		.cfi_offset 14, -4
 1149 0002 82B0     		sub	sp, sp, #8
 1150              		.cfi_def_cfa_offset 16
 1151 0004 00AF     		add	r7, sp, #0
 1152              		.cfi_def_cfa_register 7
 1153 0006 7860     		str	r0, [r7, #4]
 1154 0008 0A1C     		mov	r2, r1
 1155 000a FB1C     		add	r3, r7, #3
 1156 000c 1A70     		strb	r2, [r3]
 919:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		CapSense_fingerThreshold[widget] = value;
 1157              		.loc 1 919 0
 1158 000e 044A     		ldr	r2, .L75
 1159 0010 7B68     		ldr	r3, [r7, #4]
 1160 0012 D318     		add	r3, r2, r3
 1161 0014 FA1C     		add	r2, r7, #3
 1162 0016 1278     		ldrb	r2, [r2]
 1163 0018 1A70     		strb	r2, [r3]
 920:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	}
 1164              		.loc 1 920 0
 1165 001a BD46     		mov	sp, r7
 1166 001c 02B0     		add	sp, sp, #8
 1167              		@ sp needed
 1168 001e 80BD     		pop	{r7, pc}
 1169              	.L76:
 1170              		.align	2
 1171              	.L75:
 1172 0020 00000000 		.word	CapSense_fingerThreshold
ARM GAS  C:\Users\IEUser\AppData\Local\Temp\cctak5Pf.s 			page 38


 1173              		.cfi_endproc
 1174              	.LFE49:
 1175              		.size	CapSense_SetFingerThreshold, .-CapSense_SetFingerThreshold
 1176              		.section	.text.CapSense_SetNoiseThreshold,"ax",%progbits
 1177              		.align	2
 1178              		.global	CapSense_SetNoiseThreshold
 1179              		.code	16
 1180              		.thumb_func
 1181              		.type	CapSense_SetNoiseThreshold, %function
 1182              	CapSense_SetNoiseThreshold:
 1183              	.LFB50:
 921:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 922:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 923:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	/*******************************************************************************
 924:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Function Name: CapSense_SetNoiseThreshold
 925:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	********************************************************************************
 926:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
 927:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Summary:
 928:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  This API sets the Noise Threshold value for each widget.
 929:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
 930:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Parameters:
 931:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  widget:  Sensor index number.
 932:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  value:   Noise Threshold value for widget.
 933:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
 934:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Return Value: 
 935:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
 936:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
 937:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Global Variables:
 938:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  CapSense_noiseThreshold[] - This array contains the level of signal 
 939:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*   for each widget that determines the level of noise in the capacitive scan.
 940:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* 
 941:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Side Effects:
 942:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
 943:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
 944:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*******************************************************************************/
 945:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	void CapSense_SetNoiseThreshold(uint32 widget, uint8 value)
 946:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	{
 1184              		.loc 1 946 0
 1185              		.cfi_startproc
 1186 0000 80B5     		push	{r7, lr}
 1187              		.cfi_def_cfa_offset 8
 1188              		.cfi_offset 7, -8
 1189              		.cfi_offset 14, -4
 1190 0002 82B0     		sub	sp, sp, #8
 1191              		.cfi_def_cfa_offset 16
 1192 0004 00AF     		add	r7, sp, #0
 1193              		.cfi_def_cfa_register 7
 1194 0006 7860     		str	r0, [r7, #4]
 1195 0008 0A1C     		mov	r2, r1
 1196 000a FB1C     		add	r3, r7, #3
 1197 000c 1A70     		strb	r2, [r3]
 947:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		CapSense_noiseThreshold[widget] = value;
 1198              		.loc 1 947 0
 1199 000e 044A     		ldr	r2, .L78
 1200 0010 7B68     		ldr	r3, [r7, #4]
 1201 0012 D318     		add	r3, r2, r3
 1202 0014 FA1C     		add	r2, r7, #3
ARM GAS  C:\Users\IEUser\AppData\Local\Temp\cctak5Pf.s 			page 39


 1203 0016 1278     		ldrb	r2, [r2]
 1204 0018 1A70     		strb	r2, [r3]
 948:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	}
 1205              		.loc 1 948 0
 1206 001a BD46     		mov	sp, r7
 1207 001c 02B0     		add	sp, sp, #8
 1208              		@ sp needed
 1209 001e 80BD     		pop	{r7, pc}
 1210              	.L79:
 1211              		.align	2
 1212              	.L78:
 1213 0020 00000000 		.word	CapSense_noiseThreshold
 1214              		.cfi_endproc
 1215              	.LFE50:
 1216              		.size	CapSense_SetNoiseThreshold, .-CapSense_SetNoiseThreshold
 1217              		.section	.text.CapSense_SetFingerHysteresis,"ax",%progbits
 1218              		.align	2
 1219              		.global	CapSense_SetFingerHysteresis
 1220              		.code	16
 1221              		.thumb_func
 1222              		.type	CapSense_SetFingerHysteresis, %function
 1223              	CapSense_SetFingerHysteresis:
 1224              	.LFB51:
 949:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 950:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 951:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	/*******************************************************************************
 952:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Function Name: CapSense_SetFingerHysteresis
 953:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	********************************************************************************
 954:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
 955:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Summary:
 956:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  This API sets the Hysteresis value of a widget
 957:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
 958:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Parameters: 
 959:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  value:  Hysteresis value for widgets.
 960:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  widget:  widget number
 961:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
 962:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Return Value: 
 963:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
 964:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
 965:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Global Variables:
 966:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  CapSense_hysteresis[] - This array contains the hysteresis value for each widget.
 967:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  CapSense_widgetNumberSld - structure with dynamic sliders' parameters.
 968:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
 969:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Side Effects:
 970:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
 971:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
 972:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*******************************************************************************/
 973:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	void CapSense_SetFingerHysteresis(uint32 widget, uint8 value)
 974:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	{
 1225              		.loc 1 974 0
 1226              		.cfi_startproc
 1227 0000 80B5     		push	{r7, lr}
 1228              		.cfi_def_cfa_offset 8
 1229              		.cfi_offset 7, -8
 1230              		.cfi_offset 14, -4
 1231 0002 82B0     		sub	sp, sp, #8
 1232              		.cfi_def_cfa_offset 16
ARM GAS  C:\Users\IEUser\AppData\Local\Temp\cctak5Pf.s 			page 40


 1233 0004 00AF     		add	r7, sp, #0
 1234              		.cfi_def_cfa_register 7
 1235 0006 7860     		str	r0, [r7, #4]
 1236 0008 0A1C     		mov	r2, r1
 1237 000a FB1C     		add	r3, r7, #3
 1238 000c 1A70     		strb	r2, [r3]
 975:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		CapSense_hysteresis[widget] = value;
 1239              		.loc 1 975 0
 1240 000e 044A     		ldr	r2, .L81
 1241 0010 7B68     		ldr	r3, [r7, #4]
 1242 0012 D318     		add	r3, r2, r3
 1243 0014 FA1C     		add	r2, r7, #3
 1244 0016 1278     		ldrb	r2, [r2]
 1245 0018 1A70     		strb	r2, [r3]
 976:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	}
 1246              		.loc 1 976 0
 1247 001a BD46     		mov	sp, r7
 1248 001c 02B0     		add	sp, sp, #8
 1249              		@ sp needed
 1250 001e 80BD     		pop	{r7, pc}
 1251              	.L82:
 1252              		.align	2
 1253              	.L81:
 1254 0020 00000000 		.word	CapSense_hysteresis
 1255              		.cfi_endproc
 1256              	.LFE51:
 1257              		.size	CapSense_SetFingerHysteresis, .-CapSense_SetFingerHysteresis
 1258              		.section	.text.CapSense_SetNegativeNoiseThreshold,"ax",%progbits
 1259              		.align	2
 1260              		.global	CapSense_SetNegativeNoiseThreshold
 1261              		.code	16
 1262              		.thumb_func
 1263              		.type	CapSense_SetNegativeNoiseThreshold, %function
 1264              	CapSense_SetNegativeNoiseThreshold:
 1265              	.LFB52:
 977:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 978:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 979:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	/*******************************************************************************
 980:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Function Name: CapSense_SetNegativeNoiseThreshold
 981:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	********************************************************************************
 982:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
 983:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Summary:
 984:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  This API sets the Negative Noise Threshold value of a widget
 985:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
 986:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Parameters: 
 987:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  value:  Negative Noise Threshold value for widgets.
 988:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  widget: widget number
 989:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
 990:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Return Value: 
 991:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
 992:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
 993:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Global Variables:
 994:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  CapSense_negativeNoiseThreshold  - This parameter specifies the negative 
 995:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*   difference between the raw count and baseline levels for Baseline resetting to 
 996:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*   the raw count level.
 997:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* 
 998:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Side Effects:
ARM GAS  C:\Users\IEUser\AppData\Local\Temp\cctak5Pf.s 			page 41


 999:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
1000:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
1001:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*******************************************************************************/
1002:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	void CapSense_SetNegativeNoiseThreshold(uint32 widget, uint8 value)
1003:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	{
 1266              		.loc 1 1003 0
 1267              		.cfi_startproc
 1268 0000 80B5     		push	{r7, lr}
 1269              		.cfi_def_cfa_offset 8
 1270              		.cfi_offset 7, -8
 1271              		.cfi_offset 14, -4
 1272 0002 82B0     		sub	sp, sp, #8
 1273              		.cfi_def_cfa_offset 16
 1274 0004 00AF     		add	r7, sp, #0
 1275              		.cfi_def_cfa_register 7
 1276 0006 7860     		str	r0, [r7, #4]
 1277 0008 0A1C     		mov	r2, r1
 1278 000a FB1C     		add	r3, r7, #3
 1279 000c 1A70     		strb	r2, [r3]
1004:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		CapSense_negativeNoiseThreshold[widget] = value;
 1280              		.loc 1 1004 0
 1281 000e 044A     		ldr	r2, .L84
 1282 0010 7B68     		ldr	r3, [r7, #4]
 1283 0012 D318     		add	r3, r2, r3
 1284 0014 FA1C     		add	r2, r7, #3
 1285 0016 1278     		ldrb	r2, [r2]
 1286 0018 1A70     		strb	r2, [r3]
1005:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	}
 1287              		.loc 1 1005 0
 1288 001a BD46     		mov	sp, r7
 1289 001c 02B0     		add	sp, sp, #8
 1290              		@ sp needed
 1291 001e 80BD     		pop	{r7, pc}
 1292              	.L85:
 1293              		.align	2
 1294              	.L84:
 1295 0020 00000000 		.word	CapSense_negativeNoiseThreshold
 1296              		.cfi_endproc
 1297              	.LFE52:
 1298              		.size	CapSense_SetNegativeNoiseThreshold, .-CapSense_SetNegativeNoiseThreshold
 1299              		.section	.text.CapSense_SetDebounce,"ax",%progbits
 1300              		.align	2
 1301              		.global	CapSense_SetDebounce
 1302              		.code	16
 1303              		.thumb_func
 1304              		.type	CapSense_SetDebounce, %function
 1305              	CapSense_SetDebounce:
 1306              	.LFB53:
1006:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1007:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1008:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	/*******************************************************************************
1009:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Function Name: CapSense_SetDebounce
1010:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	********************************************************************************
1011:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
1012:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Summary:
1013:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  This API sets the debounce value for a widget.
1014:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
ARM GAS  C:\Users\IEUser\AppData\Local\Temp\cctak5Pf.s 			page 42


1015:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Parameters: 
1016:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  value:  Debounce value for widget.
1017:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  widget: widget index.
1018:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
1019:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Return Value: 
1020:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
1021:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
1022:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Global Variables:
1023:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  CapSense_debounce[] - This array contains the debounce value for each widget.
1024:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  CapSense_widgetNumberSld - structure with dynamic sliders' parameters.
1025:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
1026:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Side Effects:
1027:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
1028:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
1029:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*******************************************************************************/
1030:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	void CapSense_SetDebounce(uint32 widget, uint8 value)
1031:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	{
 1307              		.loc 1 1031 0
 1308              		.cfi_startproc
 1309 0000 80B5     		push	{r7, lr}
 1310              		.cfi_def_cfa_offset 8
 1311              		.cfi_offset 7, -8
 1312              		.cfi_offset 14, -4
 1313 0002 82B0     		sub	sp, sp, #8
 1314              		.cfi_def_cfa_offset 16
 1315 0004 00AF     		add	r7, sp, #0
 1316              		.cfi_def_cfa_register 7
 1317 0006 7860     		str	r0, [r7, #4]
 1318 0008 0A1C     		mov	r2, r1
 1319 000a FB1C     		add	r3, r7, #3
 1320 000c 1A70     		strb	r2, [r3]
1032:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		CapSense_debounce[widget] = value;
 1321              		.loc 1 1032 0
 1322 000e 044A     		ldr	r2, .L87
 1323 0010 7B68     		ldr	r3, [r7, #4]
 1324 0012 D318     		add	r3, r2, r3
 1325 0014 FA1C     		add	r2, r7, #3
 1326 0016 1278     		ldrb	r2, [r2]
 1327 0018 1A70     		strb	r2, [r3]
1033:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	}
 1328              		.loc 1 1033 0
 1329 001a BD46     		mov	sp, r7
 1330 001c 02B0     		add	sp, sp, #8
 1331              		@ sp needed
 1332 001e 80BD     		pop	{r7, pc}
 1333              	.L88:
 1334              		.align	2
 1335              	.L87:
 1336 0020 00000000 		.word	CapSense_debounce
 1337              		.cfi_endproc
 1338              	.LFE53:
 1339              		.size	CapSense_SetDebounce, .-CapSense_SetDebounce
 1340              		.section	.text.CapSense_SetLowBaselineReset,"ax",%progbits
 1341              		.align	2
 1342              		.global	CapSense_SetLowBaselineReset
 1343              		.code	16
 1344              		.thumb_func
ARM GAS  C:\Users\IEUser\AppData\Local\Temp\cctak5Pf.s 			page 43


 1345              		.type	CapSense_SetLowBaselineReset, %function
 1346              	CapSense_SetLowBaselineReset:
 1347              	.LFB54:
1034:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1035:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1036:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	/*******************************************************************************
1037:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Function Name: CapSense_SetLowBaselineReset
1038:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	********************************************************************************
1039:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
1040:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Summary:
1041:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  This API sets the low baseline reset threshold value for the sensor.
1042:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
1043:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Parameters: 
1044:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  value: low baseline reset threshold value.
1045:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  sensor: Sensor index.
1046:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
1047:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Return Value: 
1048:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
1049:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
1050:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Global Variables:
1051:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  CapSense_lowBaselineReset[] - This array contains the Baseline update 
1052:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  threshold value for each sensor.
1053:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* 
1054:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Side Effects:
1055:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
1056:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
1057:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*******************************************************************************/
1058:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	void CapSense_SetLowBaselineReset(uint32 sensor, uint8 value)
1059:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	{
 1348              		.loc 1 1059 0
 1349              		.cfi_startproc
 1350 0000 80B5     		push	{r7, lr}
 1351              		.cfi_def_cfa_offset 8
 1352              		.cfi_offset 7, -8
 1353              		.cfi_offset 14, -4
 1354 0002 82B0     		sub	sp, sp, #8
 1355              		.cfi_def_cfa_offset 16
 1356 0004 00AF     		add	r7, sp, #0
 1357              		.cfi_def_cfa_register 7
 1358 0006 7860     		str	r0, [r7, #4]
 1359 0008 0A1C     		mov	r2, r1
 1360 000a FB1C     		add	r3, r7, #3
 1361 000c 1A70     		strb	r2, [r3]
1060:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		CapSense_lowBaselineReset[sensor] = value;
 1362              		.loc 1 1060 0
 1363 000e 044A     		ldr	r2, .L90
 1364 0010 7B68     		ldr	r3, [r7, #4]
 1365 0012 D318     		add	r3, r2, r3
 1366 0014 FA1C     		add	r2, r7, #3
 1367 0016 1278     		ldrb	r2, [r2]
 1368 0018 1A70     		strb	r2, [r3]
1061:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	}
 1369              		.loc 1 1061 0
 1370 001a BD46     		mov	sp, r7
 1371 001c 02B0     		add	sp, sp, #8
 1372              		@ sp needed
 1373 001e 80BD     		pop	{r7, pc}
ARM GAS  C:\Users\IEUser\AppData\Local\Temp\cctak5Pf.s 			page 44


 1374              	.L91:
 1375              		.align	2
 1376              	.L90:
 1377 0020 00000000 		.word	CapSense_lowBaselineReset
 1378              		.cfi_endproc
 1379              	.LFE54:
 1380              		.size	CapSense_SetLowBaselineReset, .-CapSense_SetLowBaselineReset
 1381              		.section	.text.CapSense_CheckIsSensorActive,"ax",%progbits
 1382              		.align	2
 1383              		.global	CapSense_CheckIsSensorActive
 1384              		.code	16
 1385              		.thumb_func
 1386              		.type	CapSense_CheckIsSensorActive, %function
 1387              	CapSense_CheckIsSensorActive:
 1388              	.LFB55:
1062:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (CapSense_TUNING_METHOD != CapSense__TUNING_NONE) */
1063:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1064:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1065:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
1066:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_CheckIsSensorActive
1067:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
1068:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1069:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
1070:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Compares the CapSense_sensorSignal[sensor] array element to the finger
1071:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  threshold of the widget it belongs to. The hysteresis and debounce are taken into 
1072:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  account. The hysteresis is added or subtracted from the finger threshold 
1073:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  based on whether the sensor is currently active. 
1074:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  If the sensor is active, the threshold is lowered by the hysteresis amount.
1075:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  If the sensor is inactive, the threshold is raised by the hysteresis amount.
1076:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  The debounce counter is added to the sensor active transition.
1077:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This function updates the CapSense_sensorOnMask[] array element.
1078:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1079:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
1080:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor:  Sensor number.
1081:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1082:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
1083:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Returns sensor state 1 if active, 0 if not active.
1084:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1085:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
1086:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorSignal[] - used to store the difference between 
1087:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  the current value of raw data and a previous value of the baseline.
1088:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_debounceCounter[]   - used to store the current debounce 
1089:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  counter of the sensor. the widget which have this parameter are buttons, matrix 
1090:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  buttons, proximity, and guard. All other widgets don't have the  debounce parameter
1091:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  and use the last element of this array with value 0 (it means no debounce).
1092:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorOnMask[] - used to store the sensors on/off state.
1093:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorOnMask[0] contains the masked bits for sensors 
1094:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *   0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
1095:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[1] contains the masked bits for 
1096:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
1097:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  0 - sensor is inactive.
1098:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  1 - sensor is active.
1099:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * 
1100:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
1101:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
1102:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1103:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
ARM GAS  C:\Users\IEUser\AppData\Local\Temp\cctak5Pf.s 			page 45


1104:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint32 CapSense_CheckIsSensorActive(uint32 sensor)
1105:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {	
 1389              		.loc 1 1105 0
 1390              		.cfi_startproc
 1391 0000 80B5     		push	{r7, lr}
 1392              		.cfi_def_cfa_offset 8
 1393              		.cfi_offset 7, -8
 1394              		.cfi_offset 14, -4
 1395 0002 84B0     		sub	sp, sp, #16
 1396              		.cfi_def_cfa_offset 24
 1397 0004 00AF     		add	r7, sp, #0
 1398              		.cfi_def_cfa_register 7
 1399 0006 7860     		str	r0, [r7, #4]
1106:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	uint8 widget;
1107:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	uint8 debounce;
1108:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	uint8 debounceIndex;
1109:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1110:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	uint8 fingerThreshold;
1111:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	uint8 hysteresis;
1112:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	static uint8 CapSense_debounceCounter[] = {
1113:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     0u, 
1114:.\Generated_Source\PSoC4/CapSense_CSHL.c **** };
1115:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1116:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1117:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	
1118:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Prepare to find debounce counter index */
1119:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     widget = CapSense_widgetNumber[sensor];
 1400              		.loc 1 1119 0
 1401 0008 3B1C     		mov	r3, r7
 1402 000a 0F33     		add	r3, r3, #15
 1403 000c 4549     		ldr	r1, .L101
 1404 000e 7A68     		ldr	r2, [r7, #4]
 1405 0010 8A18     		add	r2, r1, r2
 1406 0012 1278     		ldrb	r2, [r2]
 1407 0014 1A70     		strb	r2, [r3]
1120:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	
1121:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     fingerThreshold = CapSense_fingerThreshold[widget];
 1408              		.loc 1 1121 0
 1409 0016 3B1C     		mov	r3, r7
 1410 0018 0F33     		add	r3, r3, #15
 1411 001a 1A78     		ldrb	r2, [r3]
 1412 001c 3B1C     		mov	r3, r7
 1413 001e 0E33     		add	r3, r3, #14
 1414 0020 4149     		ldr	r1, .L101+4
 1415 0022 8A5C     		ldrb	r2, [r1, r2]
 1416 0024 1A70     		strb	r2, [r3]
1122:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	hysteresis = CapSense_hysteresis[widget];
 1417              		.loc 1 1122 0
 1418 0026 3B1C     		mov	r3, r7
 1419 0028 0F33     		add	r3, r3, #15
 1420 002a 1A78     		ldrb	r2, [r3]
 1421 002c 3B1C     		mov	r3, r7
 1422 002e 0D33     		add	r3, r3, #13
 1423 0030 3E49     		ldr	r1, .L101+8
 1424 0032 8A5C     		ldrb	r2, [r1, r2]
 1425 0034 1A70     		strb	r2, [r3]
1123:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	debounce = CapSense_debounce[widget];	
ARM GAS  C:\Users\IEUser\AppData\Local\Temp\cctak5Pf.s 			page 46


 1426              		.loc 1 1123 0
 1427 0036 3B1C     		mov	r3, r7
 1428 0038 0F33     		add	r3, r3, #15
 1429 003a 1A78     		ldrb	r2, [r3]
 1430 003c 3B1C     		mov	r3, r7
 1431 003e 0C33     		add	r3, r3, #12
 1432 0040 3B49     		ldr	r1, .L101+12
 1433 0042 8A5C     		ldrb	r2, [r1, r2]
 1434 0044 1A70     		strb	r2, [r3]
1124:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	
1125:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	    debounceIndex = CapSense_UNUSED_DEBOUNCE_COUNTER_INDEX;
 1435              		.loc 1 1125 0
 1436 0046 3B1C     		mov	r3, r7
 1437 0048 0B33     		add	r3, r3, #11
 1438 004a 0022     		mov	r2, #0
 1439 004c 1A70     		strb	r2, [r3]
1126:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_debounceCounter[debounceIndex] = 1u;
 1440              		.loc 1 1126 0
 1441 004e 3B1C     		mov	r3, r7
 1442 0050 0B33     		add	r3, r3, #11
 1443 0052 1B78     		ldrb	r3, [r3]
 1444 0054 374A     		ldr	r2, .L101+16
 1445 0056 0121     		mov	r1, #1
 1446 0058 D154     		strb	r1, [r2, r3]
1127:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1128:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	
1129:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Was on */
1130:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     if (0u != CapSense_GetBitValue(CapSense_sensorOnMask, sensor))
 1447              		.loc 1 1130 0
 1448 005a 374A     		ldr	r2, .L101+20
 1449 005c 7B68     		ldr	r3, [r7, #4]
 1450 005e 101C     		mov	r0, r2
 1451 0060 191C     		mov	r1, r3
 1452 0062 FFF7FEFF 		bl	CapSense_GetBitValue
 1453 0066 031C     		mov	r3, r0
 1454 0068 002B     		cmp	r3, #0
 1455 006a 1DD0     		beq	.L93
1131:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
1132:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Hysteresis minus */
1133:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if (CapSense_sensorSignal[sensor] < (fingerThreshold - hysteresis))
 1456              		.loc 1 1133 0
 1457 006c 334A     		ldr	r2, .L101+24
 1458 006e 7B68     		ldr	r3, [r7, #4]
 1459 0070 D318     		add	r3, r2, r3
 1460 0072 1B78     		ldrb	r3, [r3]
 1461 0074 1A1C     		mov	r2, r3
 1462 0076 3B1C     		mov	r3, r7
 1463 0078 0E33     		add	r3, r3, #14
 1464 007a 1978     		ldrb	r1, [r3]
 1465 007c 3B1C     		mov	r3, r7
 1466 007e 0D33     		add	r3, r3, #13
 1467 0080 1B78     		ldrb	r3, [r3]
 1468 0082 CB1A     		sub	r3, r1, r3
 1469 0084 9A42     		cmp	r2, r3
 1470 0086 3DDA     		bge	.L95
1134:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1135:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	   		CapSense_SetBitValue(CapSense_sensorOnMask, sensor, 0u);
ARM GAS  C:\Users\IEUser\AppData\Local\Temp\cctak5Pf.s 			page 47


 1471              		.loc 1 1135 0
 1472 0088 2B4A     		ldr	r2, .L101+20
 1473 008a 7B68     		ldr	r3, [r7, #4]
 1474 008c 101C     		mov	r0, r2
 1475 008e 191C     		mov	r1, r3
 1476 0090 0022     		mov	r2, #0
 1477 0092 FFF7FEFF 		bl	CapSense_SetBitValue
1136:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			/* Sensor inactive - reset Debounce counter */
1137:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_debounceCounter[debounceIndex] = debounce;
 1478              		.loc 1 1137 0
 1479 0096 3B1C     		mov	r3, r7
 1480 0098 0B33     		add	r3, r3, #11
 1481 009a 1B78     		ldrb	r3, [r3]
 1482 009c 254A     		ldr	r2, .L101+16
 1483 009e 391C     		mov	r1, r7
 1484 00a0 0C31     		add	r1, r1, #12
 1485 00a2 0978     		ldrb	r1, [r1]
 1486 00a4 D154     		strb	r1, [r2, r3]
 1487 00a6 2DE0     		b	.L95
 1488              	.L93:
1138:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1139:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
1140:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     else    /* Was off */
1141:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
1142:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Hysteresis plus */
1143:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if (CapSense_sensorSignal[sensor] >= (fingerThreshold + hysteresis))
 1489              		.loc 1 1143 0
 1490 00a8 244A     		ldr	r2, .L101+24
 1491 00aa 7B68     		ldr	r3, [r7, #4]
 1492 00ac D318     		add	r3, r2, r3
 1493 00ae 1B78     		ldrb	r3, [r3]
 1494 00b0 1A1C     		mov	r2, r3
 1495 00b2 3B1C     		mov	r3, r7
 1496 00b4 0E33     		add	r3, r3, #14
 1497 00b6 1978     		ldrb	r1, [r3]
 1498 00b8 3B1C     		mov	r3, r7
 1499 00ba 0D33     		add	r3, r3, #13
 1500 00bc 1B78     		ldrb	r3, [r3]
 1501 00be CB18     		add	r3, r1, r3
 1502 00c0 9A42     		cmp	r2, r3
 1503 00c2 17DB     		blt	.L96
1144:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1145:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			CapSense_debounceCounter[debounceIndex]--;
 1504              		.loc 1 1145 0
 1505 00c4 3B1C     		mov	r3, r7
 1506 00c6 0B33     		add	r3, r3, #11
 1507 00c8 1B78     		ldrb	r3, [r3]
 1508 00ca 1A4A     		ldr	r2, .L101+16
 1509 00cc D25C     		ldrb	r2, [r2, r3]
 1510 00ce 013A     		sub	r2, r2, #1
 1511 00d0 D1B2     		uxtb	r1, r2
 1512 00d2 184A     		ldr	r2, .L101+16
 1513 00d4 D154     		strb	r1, [r2, r3]
1146:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Sensor active, decrement debounce counter */
1147:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             if(CapSense_debounceCounter[debounceIndex] == 0u)
 1514              		.loc 1 1147 0
 1515 00d6 3B1C     		mov	r3, r7
ARM GAS  C:\Users\IEUser\AppData\Local\Temp\cctak5Pf.s 			page 48


 1516 00d8 0B33     		add	r3, r3, #11
 1517 00da 1B78     		ldrb	r3, [r3]
 1518 00dc 154A     		ldr	r2, .L101+16
 1519 00de D35C     		ldrb	r3, [r2, r3]
 1520 00e0 002B     		cmp	r3, #0
 1521 00e2 0FD1     		bne	.L95
1148:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
1149:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 CapSense_SetBitValue(CapSense_sensorOnMask, sensor, 1u); 
 1522              		.loc 1 1149 0
 1523 00e4 144A     		ldr	r2, .L101+20
 1524 00e6 7B68     		ldr	r3, [r7, #4]
 1525 00e8 101C     		mov	r0, r2
 1526 00ea 191C     		mov	r1, r3
 1527 00ec 0122     		mov	r2, #1
 1528 00ee FFF7FEFF 		bl	CapSense_SetBitValue
 1529 00f2 07E0     		b	.L95
 1530              	.L96:
1150:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
1151:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1152:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         else
1153:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1154:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Sensor inactive - reset Debounce counter */
1155:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_debounceCounter[debounceIndex] = debounce;
 1531              		.loc 1 1155 0
 1532 00f4 3B1C     		mov	r3, r7
 1533 00f6 0B33     		add	r3, r3, #11
 1534 00f8 1B78     		ldrb	r3, [r3]
 1535 00fa 0E4A     		ldr	r2, .L101+16
 1536 00fc 391C     		mov	r1, r7
 1537 00fe 0C31     		add	r1, r1, #12
 1538 0100 0978     		ldrb	r1, [r1]
 1539 0102 D154     		strb	r1, [r2, r3]
 1540              	.L95:
1156:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1157:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
1158:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
1159:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     return ((uint32)((0u != CapSense_GetBitValue(CapSense_sensorOnMask, sensor)) ? 1u : 0u));
 1541              		.loc 1 1159 0
 1542 0104 0C4A     		ldr	r2, .L101+20
 1543 0106 7B68     		ldr	r3, [r7, #4]
 1544 0108 101C     		mov	r0, r2
 1545 010a 191C     		mov	r1, r3
 1546 010c FFF7FEFF 		bl	CapSense_GetBitValue
 1547 0110 031C     		mov	r3, r0
 1548 0112 002B     		cmp	r3, #0
 1549 0114 01D0     		beq	.L98
 1550              		.loc 1 1159 0 is_stmt 0 discriminator 1
 1551 0116 0123     		mov	r3, #1
 1552 0118 00E0     		b	.L99
 1553              	.L98:
 1554              		.loc 1 1159 0 discriminator 2
 1555 011a 0023     		mov	r3, #0
 1556              	.L99:
1160:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 1557              		.loc 1 1160 0 is_stmt 1 discriminator 3
 1558 011c 181C     		mov	r0, r3
 1559 011e BD46     		mov	sp, r7
ARM GAS  C:\Users\IEUser\AppData\Local\Temp\cctak5Pf.s 			page 49


 1560 0120 04B0     		add	sp, sp, #16
 1561              		@ sp needed
 1562 0122 80BD     		pop	{r7, pc}
 1563              	.L102:
 1564              		.align	2
 1565              	.L101:
 1566 0124 00000000 		.word	CapSense_widgetNumber
 1567 0128 00000000 		.word	CapSense_fingerThreshold
 1568 012c 00000000 		.word	CapSense_hysteresis
 1569 0130 00000000 		.word	CapSense_debounce
 1570 0134 20000000 		.word	CapSense_debounceCounter.5354
 1571 0138 00000000 		.word	CapSense_sensorOnMask
 1572 013c 00000000 		.word	CapSense_sensorSignal
 1573              		.cfi_endproc
 1574              	.LFE55:
 1575              		.size	CapSense_CheckIsSensorActive, .-CapSense_CheckIsSensorActive
 1576              		.section	.text.CapSense_CheckIsWidgetActive,"ax",%progbits
 1577              		.align	2
 1578              		.global	CapSense_CheckIsWidgetActive
 1579              		.code	16
 1580              		.thumb_func
 1581              		.type	CapSense_CheckIsWidgetActive, %function
 1582              	CapSense_CheckIsWidgetActive:
 1583              	.LFB56:
1161:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1162:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1163:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
1164:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_CheckIsWidgetActive
1165:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
1166:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1167:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
1168:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Compares the CapSense_sensorSignal[] array element to the finger threshold of 
1169:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * the widget it belongs to. The hysteresis and debounce are taken into account. 
1170:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * The hysteresis is added or subtracted from the finger threshold based on whether
1171:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  the sensor is currently active. If the sensor is active, the threshold is 
1172:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  lowered by the hysteresis amount. If the sensor is inactive, the threshold 
1173:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  is raised by the hysteresis amount. 
1174:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * The debounce counter added to the sensor active transition. 
1175:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * This function updates CapSense_sensorOnMask[] array element
1176:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1177:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
1178:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  widget:  widget number.
1179:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1180:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
1181:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Returns widget sensor state 1 if one or more sensors within widget is/are 
1182:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  active, 0 if all sensors within widget are inactive.
1183:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1184:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
1185:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  rawDataIndex[]: Contains the  1st sensor position in the widget
1186:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * 
1187:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
1188:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
1189:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1190:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
1191:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint32 CapSense_CheckIsWidgetActive(uint32 widget)
1192:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 1584              		.loc 1 1192 0
ARM GAS  C:\Users\IEUser\AppData\Local\Temp\cctak5Pf.s 			page 50


 1585              		.cfi_startproc
 1586 0000 80B5     		push	{r7, lr}
 1587              		.cfi_def_cfa_offset 8
 1588              		.cfi_offset 7, -8
 1589              		.cfi_offset 14, -4
 1590 0002 86B0     		sub	sp, sp, #24
 1591              		.cfi_def_cfa_offset 32
 1592 0004 00AF     		add	r7, sp, #0
 1593              		.cfi_def_cfa_register 7
 1594 0006 7860     		str	r0, [r7, #4]
1193:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 rawIndex = (uint32)CapSense_rawDataIndex[widget];
 1595              		.loc 1 1193 0
 1596 0008 0023     		mov	r3, #0
 1597 000a 7B61     		str	r3, [r7, #20]
1194:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 numOfSensors = (uint32)CapSense_numberOfSensors[widget] + rawIndex;
 1598              		.loc 1 1194 0
 1599 000c 0523     		mov	r3, #5
 1600 000e 1A1C     		mov	r2, r3
 1601 0010 7B69     		ldr	r3, [r7, #20]
 1602 0012 D318     		add	r3, r2, r3
 1603 0014 FB60     		str	r3, [r7, #12]
1195:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 state = 0u;
 1604              		.loc 1 1195 0
 1605 0016 0023     		mov	r3, #0
 1606 0018 3B61     		str	r3, [r7, #16]
 1607              	.L105:
1196:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1197:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Check all sensors of widget */
1198:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     do
1199:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
1200:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if(CapSense_CheckIsSensorActive((uint32)rawIndex) != 0u)
 1608              		.loc 1 1200 0
 1609 001a 7B69     		ldr	r3, [r7, #20]
 1610 001c 181C     		mov	r0, r3
 1611 001e FFF7FEFF 		bl	CapSense_CheckIsSensorActive
 1612 0022 031C     		mov	r3, r0
 1613 0024 002B     		cmp	r3, #0
 1614 0026 01D0     		beq	.L104
1201:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1202:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             state = CapSense_SENSOR_IS_ACTIVE;
 1615              		.loc 1 1202 0
 1616 0028 0123     		mov	r3, #1
 1617 002a 3B61     		str	r3, [r7, #16]
 1618              	.L104:
1203:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1204:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         rawIndex++;
 1619              		.loc 1 1204 0
 1620 002c 7B69     		ldr	r3, [r7, #20]
 1621 002e 0133     		add	r3, r3, #1
 1622 0030 7B61     		str	r3, [r7, #20]
1205:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
1206:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     while(rawIndex < numOfSensors);
 1623              		.loc 1 1206 0
 1624 0032 7A69     		ldr	r2, [r7, #20]
 1625 0034 FB68     		ldr	r3, [r7, #12]
 1626 0036 9A42     		cmp	r2, r3
 1627 0038 EFD3     		bcc	.L105
ARM GAS  C:\Users\IEUser\AppData\Local\Temp\cctak5Pf.s 			page 51


1207:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
1208:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1209:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
1210:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     return state;
 1628              		.loc 1 1210 0
 1629 003a 3B69     		ldr	r3, [r7, #16]
1211:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 1630              		.loc 1 1211 0
 1631 003c 181C     		mov	r0, r3
 1632 003e BD46     		mov	sp, r7
 1633 0040 06B0     		add	sp, sp, #24
 1634              		@ sp needed
 1635 0042 80BD     		pop	{r7, pc}
 1636              		.cfi_endproc
 1637              	.LFE56:
 1638              		.size	CapSense_CheckIsWidgetActive, .-CapSense_CheckIsWidgetActive
 1639              		.section	.text.CapSense_CheckIsAnyWidgetActive,"ax",%progbits
 1640              		.align	2
 1641              		.global	CapSense_CheckIsAnyWidgetActive
 1642              		.code	16
 1643              		.thumb_func
 1644              		.type	CapSense_CheckIsAnyWidgetActive, %function
 1645              	CapSense_CheckIsAnyWidgetActive:
 1646              	.LFB57:
1212:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1213:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1214:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
1215:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_CheckIsAnyWidgetActive
1216:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
1217:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1218:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
1219:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Compares all the sensors of the CapSense_Signal[] array to their finger 
1220:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  threshold. Calls CapSense_CheckIsWidgetActive() for each widget so 
1221:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  the CapSense_sensorOnMask[] array is up to date after calling this 
1222:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  function.
1223:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1224:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
1225:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  widget:  widget number.
1226:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1227:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
1228:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Returns 1 if any widget is active, 0 none of widgets are active.
1229:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1230:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
1231:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
1232:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * 
1233:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
1234:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
1235:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1236:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
1237:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint32 CapSense_CheckIsAnyWidgetActive(void)
1238:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 1647              		.loc 1 1238 0
 1648              		.cfi_startproc
 1649 0000 80B5     		push	{r7, lr}
 1650              		.cfi_def_cfa_offset 8
 1651              		.cfi_offset 7, -8
 1652              		.cfi_offset 14, -4
ARM GAS  C:\Users\IEUser\AppData\Local\Temp\cctak5Pf.s 			page 52


 1653 0002 82B0     		sub	sp, sp, #8
 1654              		.cfi_def_cfa_offset 16
 1655 0004 00AF     		add	r7, sp, #0
 1656              		.cfi_def_cfa_register 7
1239:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1240:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	    uint32 i;
1241:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 state = 0u;
 1657              		.loc 1 1241 0
 1658 0006 0023     		mov	r3, #0
 1659 0008 3B60     		str	r3, [r7]
1242:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
1243:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     for(i = 0u; i < CapSense_TOTAL_WIDGET_COUNT; i++)
 1660              		.loc 1 1243 0
 1661 000a 0023     		mov	r3, #0
 1662 000c 7B60     		str	r3, [r7, #4]
 1663 000e 0BE0     		b	.L108
 1664              	.L110:
1244:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
1245:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if (CapSense_CheckIsWidgetActive(i) != 0u)
 1665              		.loc 1 1245 0
 1666 0010 7B68     		ldr	r3, [r7, #4]
 1667 0012 181C     		mov	r0, r3
 1668 0014 FFF7FEFF 		bl	CapSense_CheckIsWidgetActive
 1669 0018 031C     		mov	r3, r0
 1670 001a 002B     		cmp	r3, #0
 1671 001c 01D0     		beq	.L109
1246:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1247:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             state = CapSense_WIDGET_IS_ACTIVE;
 1672              		.loc 1 1247 0
 1673 001e 0123     		mov	r3, #1
 1674 0020 3B60     		str	r3, [r7]
 1675              	.L109:
1243:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     for(i = 0u; i < CapSense_TOTAL_WIDGET_COUNT; i++)
 1676              		.loc 1 1243 0
 1677 0022 7B68     		ldr	r3, [r7, #4]
 1678 0024 0133     		add	r3, r3, #1
 1679 0026 7B60     		str	r3, [r7, #4]
 1680              	.L108:
1243:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     for(i = 0u; i < CapSense_TOTAL_WIDGET_COUNT; i++)
 1681              		.loc 1 1243 0 is_stmt 0 discriminator 1
 1682 0028 7B68     		ldr	r3, [r7, #4]
 1683 002a 002B     		cmp	r3, #0
 1684 002c F0D0     		beq	.L110
1248:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1249:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
1250:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
1251:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1252:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1253:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     return state;
 1685              		.loc 1 1253 0 is_stmt 1
 1686 002e 3B68     		ldr	r3, [r7]
1254:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 1687              		.loc 1 1254 0
 1688 0030 181C     		mov	r0, r3
 1689 0032 BD46     		mov	sp, r7
 1690 0034 02B0     		add	sp, sp, #8
 1691              		@ sp needed
ARM GAS  C:\Users\IEUser\AppData\Local\Temp\cctak5Pf.s 			page 53


 1692 0036 80BD     		pop	{r7, pc}
 1693              		.cfi_endproc
 1694              	.LFE57:
 1695              		.size	CapSense_CheckIsAnyWidgetActive, .-CapSense_CheckIsAnyWidgetActive
 1696              		.section	.text.CapSense_EnableWidget,"ax",%progbits
 1697              		.align	2
 1698              		.global	CapSense_EnableWidget
 1699              		.code	16
 1700              		.thumb_func
 1701              		.type	CapSense_EnableWidget, %function
 1702              	CapSense_EnableWidget:
 1703              	.LFB58:
1255:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1256:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1257:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
1258:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_EnableWidget
1259:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
1260:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1261:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
1262:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Enables all the widget elements (sensors) to the scanning process.
1263:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1264:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
1265:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  widget:  widget number.
1266:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1267:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
1268:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
1269:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1270:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
1271:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[] - used to store the sensor scanning 
1272:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  state.
1273:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[0] contains the masked bits for sensors 
1274:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
1275:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[1] contains the masked bits for 
1276:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
1277:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  0 - sensor doesn't scan by CapSense_ScanEnabledWidgets().
1278:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  1 - sensor scans by CapSense_ScanEnabledWidgets().
1279:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * 
1280:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
1281:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
1282:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1283:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
1284:.\Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_EnableWidget(uint32 widget)
1285:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 1704              		.loc 1 1285 0
 1705              		.cfi_startproc
 1706 0000 80B5     		push	{r7, lr}
 1707              		.cfi_def_cfa_offset 8
 1708              		.cfi_offset 7, -8
 1709              		.cfi_offset 14, -4
 1710 0002 84B0     		sub	sp, sp, #16
 1711              		.cfi_def_cfa_offset 24
 1712 0004 00AF     		add	r7, sp, #0
 1713              		.cfi_def_cfa_register 7
 1714 0006 7860     		str	r0, [r7, #4]
1286:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1287:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 rawIndex = CapSense_rawDataIndex[widget];
 1715              		.loc 1 1287 0
ARM GAS  C:\Users\IEUser\AppData\Local\Temp\cctak5Pf.s 			page 54


 1716 0008 3B1C     		mov	r3, r7
 1717 000a 0F33     		add	r3, r3, #15
 1718 000c 0022     		mov	r2, #0
 1719 000e 1A70     		strb	r2, [r3]
1288:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 numOfSensors = CapSense_numberOfSensors[widget] + rawIndex;
 1720              		.loc 1 1288 0
 1721 0010 0521     		mov	r1, #5
 1722 0012 3B1C     		mov	r3, r7
 1723 0014 0E33     		add	r3, r3, #14
 1724 0016 3A1C     		mov	r2, r7
 1725 0018 0F32     		add	r2, r2, #15
 1726 001a 1278     		ldrb	r2, [r2]
 1727 001c 8A18     		add	r2, r1, r2
 1728 001e 1A70     		strb	r2, [r3]
 1729              	.L113:
1289:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
1290:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Enable all sensors of widget */
1291:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     do
1292:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
1293:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_SetBitValue(CapSense_sensorEnableMask, (uint32)rawIndex, 1u);
 1730              		.loc 1 1293 0 discriminator 1
 1731 0020 3B1C     		mov	r3, r7
 1732 0022 0F33     		add	r3, r3, #15
 1733 0024 1B78     		ldrb	r3, [r3]
 1734 0026 0C4A     		ldr	r2, .L114
 1735 0028 101C     		mov	r0, r2
 1736 002a 191C     		mov	r1, r3
 1737 002c 0122     		mov	r2, #1
 1738 002e FFF7FEFF 		bl	CapSense_SetBitValue
1294:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         rawIndex++;
 1739              		.loc 1 1294 0 discriminator 1
 1740 0032 3B1C     		mov	r3, r7
 1741 0034 0F33     		add	r3, r3, #15
 1742 0036 1A78     		ldrb	r2, [r3]
 1743 0038 3B1C     		mov	r3, r7
 1744 003a 0F33     		add	r3, r3, #15
 1745 003c 0132     		add	r2, r2, #1
 1746 003e 1A70     		strb	r2, [r3]
1295:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
1296:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     while(rawIndex < numOfSensors);
 1747              		.loc 1 1296 0 discriminator 1
 1748 0040 3A1C     		mov	r2, r7
 1749 0042 0F32     		add	r2, r2, #15
 1750 0044 3B1C     		mov	r3, r7
 1751 0046 0E33     		add	r3, r3, #14
 1752 0048 1278     		ldrb	r2, [r2]
 1753 004a 1B78     		ldrb	r3, [r3]
 1754 004c 9A42     		cmp	r2, r3
 1755 004e E7D3     		bcc	.L113
1297:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 1756              		.loc 1 1297 0
 1757 0050 BD46     		mov	sp, r7
 1758 0052 04B0     		add	sp, sp, #16
 1759              		@ sp needed
 1760 0054 80BD     		pop	{r7, pc}
 1761              	.L115:
 1762 0056 C046     		.align	2
ARM GAS  C:\Users\IEUser\AppData\Local\Temp\cctak5Pf.s 			page 55


 1763              	.L114:
 1764 0058 00000000 		.word	CapSense_sensorEnableMask
 1765              		.cfi_endproc
 1766              	.LFE58:
 1767              		.size	CapSense_EnableWidget, .-CapSense_EnableWidget
 1768              		.section	.text.CapSense_DisableWidget,"ax",%progbits
 1769              		.align	2
 1770              		.global	CapSense_DisableWidget
 1771              		.code	16
 1772              		.thumb_func
 1773              		.type	CapSense_DisableWidget, %function
 1774              	CapSense_DisableWidget:
 1775              	.LFB59:
1298:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1299:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1300:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
1301:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_DisableWidget
1302:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
1303:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1304:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
1305:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Disables all the widget elements (sensors) from the scanning process.
1306:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1307:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
1308:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  widget:  widget number.
1309:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1310:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
1311:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
1312:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1313:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
1314:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[] - used to store the sensor scanning 
1315:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  state.
1316:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[0] contains the masked bits for sensors 
1317:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
1318:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[1] contains the masked bits for 
1319:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
1320:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  0 - sensor isn't scanned by CapSense_ScanEnabledWidgets().
1321:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  1 - sensor is scanned by CapSense_ScanEnabledWidgets().
1322:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * 
1323:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
1324:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
1325:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1326:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
1327:.\Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_DisableWidget(uint32 widget)
1328:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 1776              		.loc 1 1328 0
 1777              		.cfi_startproc
 1778 0000 80B5     		push	{r7, lr}
 1779              		.cfi_def_cfa_offset 8
 1780              		.cfi_offset 7, -8
 1781              		.cfi_offset 14, -4
 1782 0002 84B0     		sub	sp, sp, #16
 1783              		.cfi_def_cfa_offset 24
 1784 0004 00AF     		add	r7, sp, #0
 1785              		.cfi_def_cfa_register 7
 1786 0006 7860     		str	r0, [r7, #4]
1329:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 rawIndex = CapSense_rawDataIndex[widget];
 1787              		.loc 1 1329 0
ARM GAS  C:\Users\IEUser\AppData\Local\Temp\cctak5Pf.s 			page 56


 1788 0008 3B1C     		mov	r3, r7
 1789 000a 0F33     		add	r3, r3, #15
 1790 000c 0022     		mov	r2, #0
 1791 000e 1A70     		strb	r2, [r3]
1330:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 numOfSensors = CapSense_numberOfSensors[widget] + rawIndex;
 1792              		.loc 1 1330 0
 1793 0010 0521     		mov	r1, #5
 1794 0012 3B1C     		mov	r3, r7
 1795 0014 0E33     		add	r3, r3, #14
 1796 0016 3A1C     		mov	r2, r7
 1797 0018 0F32     		add	r2, r2, #15
 1798 001a 1278     		ldrb	r2, [r2]
 1799 001c 8A18     		add	r2, r1, r2
 1800 001e 1A70     		strb	r2, [r3]
 1801              	.L117:
1331:.\Generated_Source\PSoC4/CapSense_CSHL.c ****    
1332:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Disable all sensors of widget */
1333:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     do
1334:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
1335:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1336:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_SetBitValue(CapSense_sensorEnableMask, (uint32)rawIndex, 0u);
 1802              		.loc 1 1336 0 discriminator 1
 1803 0020 3B1C     		mov	r3, r7
 1804 0022 0F33     		add	r3, r3, #15
 1805 0024 1B78     		ldrb	r3, [r3]
 1806 0026 0C4A     		ldr	r2, .L118
 1807 0028 101C     		mov	r0, r2
 1808 002a 191C     		mov	r1, r3
 1809 002c 0022     		mov	r2, #0
 1810 002e FFF7FEFF 		bl	CapSense_SetBitValue
1337:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         rawIndex++;
 1811              		.loc 1 1337 0 discriminator 1
 1812 0032 3B1C     		mov	r3, r7
 1813 0034 0F33     		add	r3, r3, #15
 1814 0036 1A78     		ldrb	r2, [r3]
 1815 0038 3B1C     		mov	r3, r7
 1816 003a 0F33     		add	r3, r3, #15
 1817 003c 0132     		add	r2, r2, #1
 1818 003e 1A70     		strb	r2, [r3]
1338:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
1339:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     while(rawIndex < numOfSensors);
 1819              		.loc 1 1339 0 discriminator 1
 1820 0040 3A1C     		mov	r2, r7
 1821 0042 0F32     		add	r2, r2, #15
 1822 0044 3B1C     		mov	r3, r7
 1823 0046 0E33     		add	r3, r3, #14
 1824 0048 1278     		ldrb	r2, [r2]
 1825 004a 1B78     		ldrb	r3, [r3]
 1826 004c 9A42     		cmp	r2, r3
 1827 004e E7D3     		bcc	.L117
1340:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 1828              		.loc 1 1340 0
 1829 0050 BD46     		mov	sp, r7
 1830 0052 04B0     		add	sp, sp, #16
 1831              		@ sp needed
 1832 0054 80BD     		pop	{r7, pc}
 1833              	.L119:
ARM GAS  C:\Users\IEUser\AppData\Local\Temp\cctak5Pf.s 			page 57


 1834 0056 C046     		.align	2
 1835              	.L118:
 1836 0058 00000000 		.word	CapSense_sensorEnableMask
 1837              		.cfi_endproc
 1838              	.LFE59:
 1839              		.size	CapSense_DisableWidget, .-CapSense_DisableWidget
 1840              		.section	.text.CapSense_FindMaximum,"ax",%progbits
 1841              		.align	2
 1842              		.global	CapSense_FindMaximum
 1843              		.code	16
 1844              		.thumb_func
 1845              		.type	CapSense_FindMaximum, %function
 1846              	CapSense_FindMaximum:
 1847              	.LFB60:
1341:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1342:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1343:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if(CapSense_TOTAL_CENTROIDS_BASIC_COUNT)
1344:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
1345:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_FindMaximum
1346:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
1347:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1348:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
1349:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Finds the index of the maximum element within a defined centroid. Checks 
1350:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense_sensorSignal[] within a defined centroid and 
1351:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  returns the index of the maximum element. The values below the finger threshold are 
1352:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  ignored.
1353:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  The centroid is defined by offset of the first element and a number of elements - count.
1354:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  The diplexed centroid requires at least two consecutive elements above
1355:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  FingerThreshold to find the index of the maximum element.
1356:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * 
1357:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
1358:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  offset:  Start index of centroid in CapSense_sensorSignal[] array.
1359:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  count:   number of elements within centroid.
1360:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  fingerThreshold:  Finger threshold.
1361:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  diplex:   pointer to diplex table.
1362:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * 
1363:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
1364:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns the index of the maximum element within a defined centroid.
1365:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  If the index of the maximum element isn't found it returns 0xFF.
1366:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
1367:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Global Variables:
1368:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  CapSense_startOfSlider[] - contains the index of the first slider element
1369:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* 
1370:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Side Effects: 
1371:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
1372:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* 
1373:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
1374:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	#if (CapSense_IS_DIPLEX_SLIDER)
1375:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		uint8 CapSense_FindMaximum(uint8 offset, uint8 count, uint8 fingerThreshold, const uint8 *diplex)
1376:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	#else 
1377:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		uint8 CapSense_FindMaximum(uint8 offset, uint8 count, uint8 fingerThreshold)
1378:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	#endif /* (CapSense_IS_DIPLEX_SLIDER) */
1379:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 1848              		.loc 1 1379 0
 1849              		.cfi_startproc
 1850 0000 80B5     		push	{r7, lr}
 1851              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\IEUser\AppData\Local\Temp\cctak5Pf.s 			page 58


 1852              		.cfi_offset 7, -8
 1853              		.cfi_offset 14, -4
 1854 0002 84B0     		sub	sp, sp, #16
 1855              		.cfi_def_cfa_offset 24
 1856 0004 00AF     		add	r7, sp, #0
 1857              		.cfi_def_cfa_register 7
 1858 0006 FB1D     		add	r3, r7, #7
 1859 0008 1870     		strb	r0, [r3]
 1860 000a BB1D     		add	r3, r7, #6
 1861 000c 1970     		strb	r1, [r3]
 1862 000e 7B1D     		add	r3, r7, #5
 1863 0010 1A70     		strb	r2, [r3]
1380:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 i;
1381:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)        
1382:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 curPos = 0u;
1383:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             /* No centroid at Start */
1384:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 curCntrdSize = 0u;
1385:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 curCtrdStartPos = CapSense_MAXIMUM_CENTROID;
1386:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Biggest centroid is zero */
1387:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 biggestCtrdSize = 0u;
1388:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 biggestCtrdStartPos = 0u;
1389:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1390:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 maximum = CapSense_MAXIMUM_CENTROID;
 1864              		.loc 1 1390 0
 1865 0012 3B1C     		mov	r3, r7
 1866 0014 0E33     		add	r3, r3, #14
 1867 0016 FF22     		mov	r2, #255
 1868 0018 1A70     		strb	r2, [r3]
1391:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		
1392:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 temp = 0u;
 1869              		.loc 1 1392 0
 1870 001a 3B1C     		mov	r3, r7
 1871 001c 0D33     		add	r3, r3, #13
 1872 001e 0022     		mov	r2, #0
 1873 0020 1A70     		strb	r2, [r3]
1393:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 *startOfSlider = &CapSense_sensorSignal[offset];
 1874              		.loc 1 1393 0
 1875 0022 FB1D     		add	r3, r7, #7
 1876 0024 1A78     		ldrb	r2, [r3]
 1877 0026 204B     		ldr	r3, .L125
 1878 0028 D318     		add	r3, r2, r3
 1879 002a BB60     		str	r3, [r7, #8]
1394:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1395:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)        
1396:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             if(diplex != 0u)
1397:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
1398:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Initialize */
1399:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 i = 0u;
1400:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 
1401:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Make slider x2 as Diplexed */
1402:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 count <<= 1u;
1403:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 while(1u)
1404:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 { 
1405:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     if (startOfSlider[curPos] > 0u)    /* Looking for centroids */
1406:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1407:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         if (curCtrdStartPos == CapSense_MAXIMUM_CENTROID)
1408:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         {
ARM GAS  C:\Users\IEUser\AppData\Local\Temp\cctak5Pf.s 			page 59


1409:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             /* Start of centroid */
1410:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             curCtrdStartPos = i;
1411:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             curCntrdSize++;
1412:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         }
1413:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         else
1414:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         {
1415:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             curCntrdSize++;
1416:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         }
1417:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
1418:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     else   /* Select biggest and indicate zero start */
1419:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     {          
1420:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         if(curCntrdSize > 0u)
1421:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         {
1422:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             /* We are at the end of current */
1423:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             if(curCntrdSize > biggestCtrdSize)
1424:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1425:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 biggestCtrdSize = curCntrdSize;
1426:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 biggestCtrdStartPos = curCtrdStartPos;
1427:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
1428:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             
1429:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             curCntrdSize = 0u;
1430:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             curCtrdStartPos = CapSense_MAXIMUM_CENTROID;
1431:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         }
1432:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
1433:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     
1434:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     i++; 
1435:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     curPos = diplex[i];
1436:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     if(i == count)
1437:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1438:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         break;
1439:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     }            
1440:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1441:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     
1442:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     /* Find biggest centroid if two are same size, last one wins
1443:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                        We are at the end of current */
1444:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 if (curCntrdSize >= biggestCtrdSize) 
1445:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1446:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     biggestCtrdSize = curCntrdSize;
1447:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     biggestCtrdStartPos = curCtrdStartPos;
1448:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1449:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
1450:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             else
1451:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
1452:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Without diplexing */ 
1453:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 biggestCtrdSize = count;
1454:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
1455:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         
1456:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1457:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Check centroid size */
1458:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #if (CapSense_IS_NON_DIPLEX_SLIDER)
1459:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 if((biggestCtrdSize >= 2u) || ((biggestCtrdSize == 1u) && (diplex == 0u)))
1460:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #else                    
1461:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 if(biggestCtrdSize >= 2u)
1462:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #endif /* (CapSense_IS_NON_DIPLEX_SLIDER) */
1463:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1464:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     for (i = biggestCtrdStartPos; i < (biggestCtrdStartPos + biggestCtrdSize); i++)
1465:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
ARM GAS  C:\Users\IEUser\AppData\Local\Temp\cctak5Pf.s 			page 60


1466:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (CapSense_IS_DIPLEX_SLIDER && CapSense_IS_NON_DIPLEX_SLIDER)
1467:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (diplex == 0u)
1468:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1469:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 curPos = i;
1470:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
1471:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             else
1472:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1473:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 curPos = diplex[i];
1474:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             }                    
1475:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #elif (CapSense_IS_DIPLEX_SLIDER)                    
1476:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             curPos = diplex[i];                    
1477:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (CapSense_IS_DIPLEX_SLIDER && CapSense_IS_NON_DIPLEX_SLIDER) */
1478:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         /* Looking for greater element within centroid */
1479:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         if(startOfSlider[curPos] > fingerThreshold)
1480:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         {
1481:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             if(startOfSlider[curPos] > temp)
1482:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1483:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 maximum = i;
1484:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 temp = startOfSlider[curPos];
1485:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
1486:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         }
1487:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
1488:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 } 
1489:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #else
1490:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             for (i = 0u; i < count; i++)
 1880              		.loc 1 1490 0
 1881 002c 3B1C     		mov	r3, r7
 1882 002e 0F33     		add	r3, r3, #15
 1883 0030 0022     		mov	r2, #0
 1884 0032 1A70     		strb	r2, [r3]
 1885 0034 2AE0     		b	.L121
 1886              	.L123:
1491:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {                      
1492:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Looking for greater element within centroid */
1493:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 if(startOfSlider[i] > fingerThreshold)
 1887              		.loc 1 1493 0
 1888 0036 3B1C     		mov	r3, r7
 1889 0038 0F33     		add	r3, r3, #15
 1890 003a 1B78     		ldrb	r3, [r3]
 1891 003c BA68     		ldr	r2, [r7, #8]
 1892 003e D318     		add	r3, r2, r3
 1893 0040 1B78     		ldrb	r3, [r3]
 1894 0042 7A1D     		add	r2, r7, #5
 1895 0044 1278     		ldrb	r2, [r2]
 1896 0046 9A42     		cmp	r2, r3
 1897 0048 19D2     		bcs	.L122
1494:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1495:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     if(startOfSlider[i] > temp)
 1898              		.loc 1 1495 0
 1899 004a 3B1C     		mov	r3, r7
 1900 004c 0F33     		add	r3, r3, #15
 1901 004e 1B78     		ldrb	r3, [r3]
 1902 0050 BA68     		ldr	r2, [r7, #8]
 1903 0052 D318     		add	r3, r2, r3
 1904 0054 1B78     		ldrb	r3, [r3]
 1905 0056 3A1C     		mov	r2, r7
 1906 0058 0D32     		add	r2, r2, #13
ARM GAS  C:\Users\IEUser\AppData\Local\Temp\cctak5Pf.s 			page 61


 1907 005a 1278     		ldrb	r2, [r2]
 1908 005c 9A42     		cmp	r2, r3
 1909 005e 0ED2     		bcs	.L122
1496:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1497:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         maximum = i;
 1910              		.loc 1 1497 0
 1911 0060 3B1C     		mov	r3, r7
 1912 0062 0E33     		add	r3, r3, #14
 1913 0064 3A1C     		mov	r2, r7
 1914 0066 0F32     		add	r2, r2, #15
 1915 0068 1278     		ldrb	r2, [r2]
 1916 006a 1A70     		strb	r2, [r3]
1498:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         temp = startOfSlider[i];
 1917              		.loc 1 1498 0
 1918 006c 3B1C     		mov	r3, r7
 1919 006e 0F33     		add	r3, r3, #15
 1920 0070 1B78     		ldrb	r3, [r3]
 1921 0072 BA68     		ldr	r2, [r7, #8]
 1922 0074 D218     		add	r2, r2, r3
 1923 0076 3B1C     		mov	r3, r7
 1924 0078 0D33     		add	r3, r3, #13
 1925 007a 1278     		ldrb	r2, [r2]
 1926 007c 1A70     		strb	r2, [r3]
 1927              	.L122:
1490:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             for (i = 0u; i < count; i++)
 1928              		.loc 1 1490 0
 1929 007e 3B1C     		mov	r3, r7
 1930 0080 0F33     		add	r3, r3, #15
 1931 0082 1A78     		ldrb	r2, [r3]
 1932 0084 3B1C     		mov	r3, r7
 1933 0086 0F33     		add	r3, r3, #15
 1934 0088 0132     		add	r2, r2, #1
 1935 008a 1A70     		strb	r2, [r3]
 1936              	.L121:
1490:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             for (i = 0u; i < count; i++)
 1937              		.loc 1 1490 0 is_stmt 0 discriminator 1
 1938 008c 3A1C     		mov	r2, r7
 1939 008e 0F32     		add	r2, r2, #15
 1940 0090 BB1D     		add	r3, r7, #6
 1941 0092 1278     		ldrb	r2, [r2]
 1942 0094 1B78     		ldrb	r3, [r3]
 1943 0096 9A42     		cmp	r2, r3
 1944 0098 CDD3     		bcc	.L123
1499:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
1500:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1501:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }    
1502:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1503:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         return (maximum);
 1945              		.loc 1 1503 0 is_stmt 1
 1946 009a 3B1C     		mov	r3, r7
 1947 009c 0E33     		add	r3, r3, #14
 1948 009e 1B78     		ldrb	r3, [r3]
1504:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 1949              		.loc 1 1504 0
 1950 00a0 181C     		mov	r0, r3
 1951 00a2 BD46     		mov	sp, r7
 1952 00a4 04B0     		add	sp, sp, #16
ARM GAS  C:\Users\IEUser\AppData\Local\Temp\cctak5Pf.s 			page 62


 1953              		@ sp needed
 1954 00a6 80BD     		pop	{r7, pc}
 1955              	.L126:
 1956              		.align	2
 1957              	.L125:
 1958 00a8 00000000 		.word	CapSense_sensorSignal
 1959              		.cfi_endproc
 1960              	.LFE60:
 1961              		.size	CapSense_FindMaximum, .-CapSense_FindMaximum
 1962              		.global	__aeabi_idiv
 1963              		.section	.text.CapSense_CalcCentroid,"ax",%progbits
 1964              		.align	2
 1965              		.global	CapSense_CalcCentroid
 1966              		.code	16
 1967              		.thumb_func
 1968              		.type	CapSense_CalcCentroid, %function
 1969              	CapSense_CalcCentroid:
 1970              	.LFB61:
1505:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
1506:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
1507:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
1508:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_CalcCentroid
1509:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
1510:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1511:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
1512:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns a position value calculated according to the index of the maximum element and API
1513:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  resolution.
1514:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1515:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
1516:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  type:  widget type.
1517:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  diplex:  pointer to diplex table.
1518:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  maximum:  Index of maximum element within centroid.
1519:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  offset:   Start index of centroid in CapSense_sensorSignal[] array.
1520:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  count:    Number of elements within centroid.
1521:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  resolution:  multiplicator calculated according to centroid type and
1522:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  API resolution.
1523:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  noiseThreshold:  Noise threshold.
1524:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * 
1525:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
1526:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns a position value of the slider.
1527:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
1528:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Side Effects: 
1529:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
1530:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* 
1531:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
1532:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if (CapSense_TOTAL_TRACKPAD_GESTURES_COUNT > 0u)
1533:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 CapSense_CalcCentroid(uint8 maximum, uint8 offset, 
1534:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                         uint8 count, uint32 resolution, uint8 noiseThreshold)
1535:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #else								
1536:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 CapSense_CalcCentroid(uint8 maximum, uint8 offset, 
1537:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                         uint8 count, uint16 resolution, uint8 noiseThreshold)						
1538:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (CapSense_TOTAL_TRACKPAD_GESTURES_COUNT > 0u) */
1539:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 1971              		.loc 1 1539 0
 1972              		.cfi_startproc
 1973 0000 90B5     		push	{r4, r7, lr}
 1974              		.cfi_def_cfa_offset 12
ARM GAS  C:\Users\IEUser\AppData\Local\Temp\cctak5Pf.s 			page 63


 1975              		.cfi_offset 4, -12
 1976              		.cfi_offset 7, -8
 1977              		.cfi_offset 14, -4
 1978 0002 89B0     		sub	sp, sp, #36
 1979              		.cfi_def_cfa_offset 48
 1980 0004 00AF     		add	r7, sp, #0
 1981              		.cfi_def_cfa_register 7
 1982 0006 041C     		mov	r4, r0
 1983 0008 081C     		mov	r0, r1
 1984 000a 111C     		mov	r1, r2
 1985 000c 1A1C     		mov	r2, r3
 1986 000e FB1D     		add	r3, r7, #7
 1987 0010 1C70     		strb	r4, [r3]
 1988 0012 BB1D     		add	r3, r7, #6
 1989 0014 1870     		strb	r0, [r3]
 1990 0016 7B1D     		add	r3, r7, #5
 1991 0018 1970     		strb	r1, [r3]
 1992 001a BB1C     		add	r3, r7, #2
 1993 001c 1A80     		strh	r2, [r3]
1540:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if ((CapSense_TOTAL_LINEAR_SLIDERS_COUNT > 0u) || (CapSense_TOTAL_TOUCH_PADS_BASIC_COUNT >
1541:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 posPrev;
1542:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 posNext;
1543:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* ((CapSense_TOTAL_LINEAR_SLIDERS_COUNT>0u) || (CapSense_TOTAL_TOUCH_PADS_BASIC_COU
1544:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
1545:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Helps during centroid calculation */
1546:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_TOTAL_CENTROIDS_BASIC_COUNT)
1547:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		    static uint8 CapSense_centroid[3u];
1548:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif  /* (CapSense_TOTAL_CENTROIDS_BASIC_COUNT) */
1549:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                
1550:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)                
1551:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 pos;
1552:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1553:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1554:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 position;
1555:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint32 numerator;
1556:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         int32 denominator;
1557:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		
1558:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		uint8  *startOfSlider = &CapSense_sensorSignal[offset];
 1994              		.loc 1 1558 0
 1995 001e BB1D     		add	r3, r7, #6
 1996 0020 1A78     		ldrb	r2, [r3]
 1997 0022 5A4B     		ldr	r3, .L137
 1998 0024 D318     		add	r3, r2, r3
 1999 0026 BB61     		str	r3, [r7, #24]
1559:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		
1560:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if ((CapSense_TOTAL_LINEAR_SLIDERS_COUNT > 0u) || (CapSense_TOTAL_TOUCH_PADS_BASIC_COUNT >
1561:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             posPrev = 0u;
 2000              		.loc 1 1561 0
 2001 0028 3B1C     		mov	r3, r7
 2002 002a 1F33     		add	r3, r3, #31
 2003 002c 0022     		mov	r2, #0
 2004 002e 1A70     		strb	r2, [r3]
1562:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* ((CapSense_TOTAL_LINEAR_SLIDERS_COUNT>0u) || (CapSense_TOTAL_TOUCH_PADS_BASIC_COU
1563:.\Generated_Source\PSoC4/CapSense_CSHL.c ****      
1564:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_ADD_SLIDER_TYPE)
1565:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             if(type == CapSense_TYPE_RADIAL_SLIDER)
1566:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
ARM GAS  C:\Users\IEUser\AppData\Local\Temp\cctak5Pf.s 			page 64


1567:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_ADD_SLIDER_TYPE) */
1568:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1569:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #if (CapSense_TOTAL_RADIAL_SLIDERS_COUNT > 0u)                
1570:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Copy Signal to the centroid array */
1571:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 CapSense_centroid[CapSense_POS] = startOfSlider[maximum];
1572:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                  
1573:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Check borders for ROTARY Slider */
1574:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 if (maximum == 0u)                   /* Start of centroid */
1575:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 { 
1576:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_PREV] = startOfSlider[count - 1u];
1577:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_NEXT] = startOfSlider[1u];
1578:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1579:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 else if (maximum == (count - 1u))    /* End of centroid */
1580:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1581:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_PREV] = startOfSlider[maximum - 1u];
1582:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_NEXT] = startOfSlider[0u];
1583:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1584:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 else                                /* Not first Not last */
1585:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1586:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_PREV] = startOfSlider[maximum - 1u];
1587:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_NEXT] = startOfSlider[maximum + 1u];
1588:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1589:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #endif /* (CapSense_TOTAL_RADIAL_SLIDERS_COUNT > 0u) */
1590:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1591:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_ADD_SLIDER_TYPE)
1592:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
1593:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             else
1594:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
1595:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_ADD_SLIDER_TYPE) */
1596:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1597:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #if ((CapSense_TOTAL_LINEAR_SLIDERS_COUNT > 0u) || (CapSense_TOTAL_TOUCH_PADS_BASIC_COU
1598:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 #if (CapSense_IS_DIPLEX_SLIDER && CapSense_IS_NON_DIPLEX_SLIDER)                   
1599:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     /* Calculate next and previous near to maximum */
1600:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     if(diplex == 0u)
1601:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1602:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         pos     = maximum;
1603:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         posPrev = maximum - 1u;
1604:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         posNext = maximum + 1u; 
1605:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
1606:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     else
1607:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1608:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         pos     = diplex[maximum];
1609:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         posPrev = diplex[maximum - 1u];
1610:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         posNext = diplex[maximum + 1u];
1611:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         count <<= 1u;
1612:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     }                    
1613:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 #elif (CapSense_IS_DIPLEX_SLIDER)
1614:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     /* Calculate next and previous near to maximum */
1615:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     pos     = diplex[maximum];
1616:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     posPrev = diplex[maximum - 1u];
1617:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     posNext = diplex[maximum + 1u];
1618:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     count <<= 1u;                    
1619:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 #else                    
1620:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     /* Calculate next and previous near to maximum */
1621:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     if (maximum >= 1u)
 2005              		.loc 1 1621 0
 2006 0030 FB1D     		add	r3, r7, #7
ARM GAS  C:\Users\IEUser\AppData\Local\Temp\cctak5Pf.s 			page 65


 2007 0032 1B78     		ldrb	r3, [r3]
 2008 0034 002B     		cmp	r3, #0
 2009 0036 05D0     		beq	.L128
1622:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1623:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         posPrev = maximum - 1u;
 2010              		.loc 1 1623 0
 2011 0038 3B1C     		mov	r3, r7
 2012 003a 1F33     		add	r3, r3, #31
 2013 003c FA1D     		add	r2, r7, #7
 2014 003e 1278     		ldrb	r2, [r2]
 2015 0040 013A     		sub	r2, r2, #1
 2016 0042 1A70     		strb	r2, [r3]
 2017              	.L128:
1624:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
1625:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     posNext = maximum + 1u;
 2018              		.loc 1 1625 0
 2019 0044 3B1C     		mov	r3, r7
 2020 0046 1733     		add	r3, r3, #23
 2021 0048 FA1D     		add	r2, r7, #7
 2022 004a 1278     		ldrb	r2, [r2]
 2023 004c 0132     		add	r2, r2, #1
 2024 004e 1A70     		strb	r2, [r3]
1626:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 #endif /* (CapSense_IS_DIPLEX_SLIDER && CapSense_IS_NON_DIPLEX_SLIDER) */
1627:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         
1628:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Copy Signal to the centroid array */
1629:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 #if (CapSense_IS_DIPLEX_SLIDER)
1630:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS] = startOfSlider[pos];
1631:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 #else
1632:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS] = startOfSlider[maximum];
 2025              		.loc 1 1632 0
 2026 0050 FB1D     		add	r3, r7, #7
 2027 0052 1B78     		ldrb	r3, [r3]
 2028 0054 BA69     		ldr	r2, [r7, #24]
 2029 0056 D318     		add	r3, r2, r3
 2030 0058 1A78     		ldrb	r2, [r3]
 2031 005a 4D4B     		ldr	r3, .L137+4
 2032 005c 5A70     		strb	r2, [r3, #1]
1633:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1634:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     
1635:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Check borders for LINEAR Slider */
1636:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 if (maximum == 0u)                   /* Start of centroid */
 2033              		.loc 1 1636 0
 2034 005e FB1D     		add	r3, r7, #7
 2035 0060 1B78     		ldrb	r3, [r3]
 2036 0062 002B     		cmp	r3, #0
 2037 0064 0BD1     		bne	.L129
1637:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 { 
1638:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_PREV] = 0u;
 2038              		.loc 1 1638 0
 2039 0066 4A4B     		ldr	r3, .L137+4
 2040 0068 0022     		mov	r2, #0
 2041 006a 1A70     		strb	r2, [r3]
1639:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_NEXT] = startOfSlider[posNext];
 2042              		.loc 1 1639 0
 2043 006c 3B1C     		mov	r3, r7
 2044 006e 1733     		add	r3, r3, #23
 2045 0070 1B78     		ldrb	r3, [r3]
ARM GAS  C:\Users\IEUser\AppData\Local\Temp\cctak5Pf.s 			page 66


 2046 0072 BA69     		ldr	r2, [r7, #24]
 2047 0074 D318     		add	r3, r2, r3
 2048 0076 1A78     		ldrb	r2, [r3]
 2049 0078 454B     		ldr	r3, .L137+4
 2050 007a 9A70     		strb	r2, [r3, #2]
 2051 007c 22E0     		b	.L130
 2052              	.L129:
1640:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1641:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 else if (maximum == ((count) - 1u)) /* End of centroid */
 2053              		.loc 1 1641 0
 2054 007e FB1D     		add	r3, r7, #7
 2055 0080 1A78     		ldrb	r2, [r3]
 2056 0082 7B1D     		add	r3, r7, #5
 2057 0084 1B78     		ldrb	r3, [r3]
 2058 0086 013B     		sub	r3, r3, #1
 2059 0088 9A42     		cmp	r2, r3
 2060 008a 0BD1     		bne	.L131
1642:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1643:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_PREV] = startOfSlider[posPrev];
 2061              		.loc 1 1643 0
 2062 008c 3B1C     		mov	r3, r7
 2063 008e 1F33     		add	r3, r3, #31
 2064 0090 1B78     		ldrb	r3, [r3]
 2065 0092 BA69     		ldr	r2, [r7, #24]
 2066 0094 D318     		add	r3, r2, r3
 2067 0096 1A78     		ldrb	r2, [r3]
 2068 0098 3D4B     		ldr	r3, .L137+4
 2069 009a 1A70     		strb	r2, [r3]
1644:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_NEXT] = 0u;
 2070              		.loc 1 1644 0
 2071 009c 3C4B     		ldr	r3, .L137+4
 2072 009e 0022     		mov	r2, #0
 2073 00a0 9A70     		strb	r2, [r3, #2]
 2074 00a2 0FE0     		b	.L130
 2075              	.L131:
1645:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1646:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 else                                /* Not first Not last */
1647:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1648:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_PREV] = startOfSlider[posPrev];
 2076              		.loc 1 1648 0
 2077 00a4 3B1C     		mov	r3, r7
 2078 00a6 1F33     		add	r3, r3, #31
 2079 00a8 1B78     		ldrb	r3, [r3]
 2080 00aa BA69     		ldr	r2, [r7, #24]
 2081 00ac D318     		add	r3, r2, r3
 2082 00ae 1A78     		ldrb	r2, [r3]
 2083 00b0 374B     		ldr	r3, .L137+4
 2084 00b2 1A70     		strb	r2, [r3]
1649:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_NEXT] = startOfSlider[posNext];
 2085              		.loc 1 1649 0
 2086 00b4 3B1C     		mov	r3, r7
 2087 00b6 1733     		add	r3, r3, #23
 2088 00b8 1B78     		ldrb	r3, [r3]
 2089 00ba BA69     		ldr	r2, [r7, #24]
 2090 00bc D318     		add	r3, r2, r3
 2091 00be 1A78     		ldrb	r2, [r3]
 2092 00c0 334B     		ldr	r3, .L137+4
ARM GAS  C:\Users\IEUser\AppData\Local\Temp\cctak5Pf.s 			page 67


 2093 00c2 9A70     		strb	r2, [r3, #2]
 2094              	.L130:
1650:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1651:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #endif /* ((CapSense_TOTAL_LINEAR_SLIDERS_COUNT>0u)||(CapSense_TOTAL_TOUCH_PADS_BASIC_C
1652:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1653:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_ADD_SLIDER_TYPE)
1654:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
1655:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_ADD_SLIDER_TYPE) */
1656:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
1657:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Subtract noiseThreshold */
1658:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if(CapSense_centroid[CapSense_POS_PREV] > noiseThreshold)
 2095              		.loc 1 1658 0
 2096 00c4 324B     		ldr	r3, .L137+4
 2097 00c6 1B78     		ldrb	r3, [r3]
 2098 00c8 3A1C     		mov	r2, r7
 2099 00ca 3032     		add	r2, r2, #48
 2100 00cc 1278     		ldrb	r2, [r2]
 2101 00ce 9A42     		cmp	r2, r3
 2102 00d0 09D2     		bcs	.L132
1659:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1660:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_centroid[CapSense_POS_PREV] -= noiseThreshold;
 2103              		.loc 1 1660 0
 2104 00d2 2F4B     		ldr	r3, .L137+4
 2105 00d4 1A78     		ldrb	r2, [r3]
 2106 00d6 3B1C     		mov	r3, r7
 2107 00d8 3033     		add	r3, r3, #48
 2108 00da 1B78     		ldrb	r3, [r3]
 2109 00dc D31A     		sub	r3, r2, r3
 2110 00de DAB2     		uxtb	r2, r3
 2111 00e0 2B4B     		ldr	r3, .L137+4
 2112 00e2 1A70     		strb	r2, [r3]
 2113 00e4 02E0     		b	.L133
 2114              	.L132:
1661:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1662:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         else
1663:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1664:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_centroid[CapSense_POS_PREV] = 0u;
 2115              		.loc 1 1664 0
 2116 00e6 2A4B     		ldr	r3, .L137+4
 2117 00e8 0022     		mov	r2, #0
 2118 00ea 1A70     		strb	r2, [r3]
 2119              	.L133:
1665:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1666:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
1667:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Maximum always greater than fingerThreshold, so greater than noiseThreshold */
1668:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_centroid[CapSense_POS] -= noiseThreshold;
 2120              		.loc 1 1668 0
 2121 00ec 284B     		ldr	r3, .L137+4
 2122 00ee 5A78     		ldrb	r2, [r3, #1]
 2123 00f0 3B1C     		mov	r3, r7
 2124 00f2 3033     		add	r3, r3, #48
 2125 00f4 1B78     		ldrb	r3, [r3]
 2126 00f6 D31A     		sub	r3, r2, r3
 2127 00f8 DAB2     		uxtb	r2, r3
 2128 00fa 254B     		ldr	r3, .L137+4
 2129 00fc 5A70     		strb	r2, [r3, #1]
1669:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
ARM GAS  C:\Users\IEUser\AppData\Local\Temp\cctak5Pf.s 			page 68


1670:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Subtract noiseThreshold */
1671:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if(CapSense_centroid[CapSense_POS_NEXT] > noiseThreshold)
 2130              		.loc 1 1671 0
 2131 00fe 244B     		ldr	r3, .L137+4
 2132 0100 9B78     		ldrb	r3, [r3, #2]
 2133 0102 3A1C     		mov	r2, r7
 2134 0104 3032     		add	r2, r2, #48
 2135 0106 1278     		ldrb	r2, [r2]
 2136 0108 9A42     		cmp	r2, r3
 2137 010a 09D2     		bcs	.L134
1672:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1673:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_centroid[CapSense_POS_NEXT] -= noiseThreshold;
 2138              		.loc 1 1673 0
 2139 010c 204B     		ldr	r3, .L137+4
 2140 010e 9A78     		ldrb	r2, [r3, #2]
 2141 0110 3B1C     		mov	r3, r7
 2142 0112 3033     		add	r3, r3, #48
 2143 0114 1B78     		ldrb	r3, [r3]
 2144 0116 D31A     		sub	r3, r2, r3
 2145 0118 DAB2     		uxtb	r2, r3
 2146 011a 1D4B     		ldr	r3, .L137+4
 2147 011c 9A70     		strb	r2, [r3, #2]
 2148 011e 02E0     		b	.L135
 2149              	.L134:
1674:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1675:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         else
1676:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1677:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_centroid[CapSense_POS_NEXT] = 0u;
 2150              		.loc 1 1677 0
 2151 0120 1B4B     		ldr	r3, .L137+4
 2152 0122 0022     		mov	r2, #0
 2153 0124 9A70     		strb	r2, [r3, #2]
 2154              	.L135:
1678:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1679:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
1680:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
1681:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Si+1 - Si-1 */
1682:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         numerator = (uint32) CapSense_centroid[CapSense_POS_NEXT] -
 2155              		.loc 1 1682 0
 2156 0126 1A4B     		ldr	r3, .L137+4
 2157 0128 9B78     		ldrb	r3, [r3, #2]
 2158 012a 1A1C     		mov	r2, r3
1683:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     (uint32) CapSense_centroid[CapSense_POS_PREV];
 2159              		.loc 1 1683 0
 2160 012c 184B     		ldr	r3, .L137+4
 2161 012e 1B78     		ldrb	r3, [r3]
1682:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         numerator = (uint32) CapSense_centroid[CapSense_POS_NEXT] -
 2162              		.loc 1 1682 0
 2163 0130 D31A     		sub	r3, r2, r3
 2164 0132 3B61     		str	r3, [r7, #16]
1684:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1685:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Si+1 + Si + Si-1 */
1686:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         denominator = (int32) CapSense_centroid[CapSense_POS_PREV] + 
 2165              		.loc 1 1686 0
 2166 0134 164B     		ldr	r3, .L137+4
 2167 0136 1B78     		ldrb	r3, [r3]
 2168 0138 1A1C     		mov	r2, r3
ARM GAS  C:\Users\IEUser\AppData\Local\Temp\cctak5Pf.s 			page 69


1687:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                       (int32) CapSense_centroid[CapSense_POS] + 
 2169              		.loc 1 1687 0
 2170 013a 154B     		ldr	r3, .L137+4
 2171 013c 5B78     		ldrb	r3, [r3, #1]
1686:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         denominator = (int32) CapSense_centroid[CapSense_POS_PREV] + 
 2172              		.loc 1 1686 0
 2173 013e D218     		add	r2, r2, r3
1688:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                       (int32) CapSense_centroid[CapSense_POS_NEXT];
 2174              		.loc 1 1688 0
 2175 0140 134B     		ldr	r3, .L137+4
 2176 0142 9B78     		ldrb	r3, [r3, #2]
1686:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         denominator = (int32) CapSense_centroid[CapSense_POS_PREV] + 
 2177              		.loc 1 1686 0
 2178 0144 D318     		add	r3, r2, r3
 2179 0146 FB60     		str	r3, [r7, #12]
1689:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
1690:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* (numerator/denominator) + maximum */
1691:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         denominator = (((int32)(uint32)((uint32)numerator << 8u)/denominator) + (int32)(uint32)((ui
 2180              		.loc 1 1691 0
 2181 0148 3B69     		ldr	r3, [r7, #16]
 2182 014a 1B02     		lsl	r3, r3, #8
 2183 014c 181C     		mov	r0, r3
 2184 014e F968     		ldr	r1, [r7, #12]
 2185 0150 FFF7FEFF 		bl	__aeabi_idiv
 2186 0154 031C     		mov	r3, r0
 2187 0156 1A1C     		mov	r2, r3
 2188 0158 FB1D     		add	r3, r7, #7
 2189 015a 1B78     		ldrb	r3, [r3]
 2190 015c 1B02     		lsl	r3, r3, #8
 2191 015e D318     		add	r3, r2, r3
 2192 0160 FB60     		str	r3, [r7, #12]
1692:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1693:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if(CapSense_TOTAL_RADIAL_SLIDERS_COUNT > 0u)
1694:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Only required for RADIAL Slider */
1695:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             if(denominator < 0)
1696:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
1697:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 denominator += (int32)((uint16)((uint16) count << 8u));
1698:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
1699:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_TOTAL_RADIAL_SLIDERS_COUNT > 0u) */
1700:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
1701:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         denominator *= (int16)resolution;
 2193              		.loc 1 1701 0
 2194 0162 BB1C     		add	r3, r7, #2
 2195 0164 1B88     		ldrh	r3, [r3]
 2196 0166 1AB2     		sxth	r2, r3
 2197 0168 FB68     		ldr	r3, [r7, #12]
 2198 016a 5343     		mul	r3, r2
 2199 016c FB60     		str	r3, [r7, #12]
1702:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
1703:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Round result and put it to uint8 */
1704:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         position = ((uint8) HI16((uint32)denominator + CapSense_CENTROID_ROUND_VALUE));
 2200              		.loc 1 1704 0
 2201 016e FB68     		ldr	r3, [r7, #12]
 2202 0170 FE22     		mov	r2, #254
 2203 0172 D201     		lsl	r2, r2, #7
 2204 0174 9B18     		add	r3, r3, r2
 2205 0176 1A0C     		lsr	r2, r3, #16
ARM GAS  C:\Users\IEUser\AppData\Local\Temp\cctak5Pf.s 			page 70


 2206 0178 3B1C     		mov	r3, r7
 2207 017a 0B33     		add	r3, r3, #11
 2208 017c 1A70     		strb	r2, [r3]
1705:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1706:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         return (position);
 2209              		.loc 1 1706 0
 2210 017e 3B1C     		mov	r3, r7
 2211 0180 0B33     		add	r3, r3, #11
 2212 0182 1B78     		ldrb	r3, [r3]
1707:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }    
 2213              		.loc 1 1707 0
 2214 0184 181C     		mov	r0, r3
 2215 0186 BD46     		mov	sp, r7
 2216 0188 09B0     		add	sp, sp, #36
 2217              		@ sp needed
 2218 018a 90BD     		pop	{r4, r7, pc}
 2219              	.L138:
 2220              		.align	2
 2221              	.L137:
 2222 018c 00000000 		.word	CapSense_sensorSignal
 2223 0190 24000000 		.word	CapSense_centroid.5406
 2224              		.cfi_endproc
 2225              	.LFE61:
 2226              		.size	CapSense_CalcCentroid, .-CapSense_CalcCentroid
 2227              		.section	.text.CapSense_GetCentroidPos,"ax",%progbits
 2228              		.align	2
 2229              		.global	CapSense_GetCentroidPos
 2230              		.code	16
 2231              		.thumb_func
 2232              		.type	CapSense_GetCentroidPos, %function
 2233              	CapSense_GetCentroidPos:
 2234              	.LFB62:
1708:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (CapSense_TOTAL_CENTROIDS_BASIC_COUNT) */
1709:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1710:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1711:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if((CapSense_TOTAL_RADIAL_SLIDERS_COUNT > 0u) || (CapSense_TOTAL_LINEAR_SLIDERS_COUNT > 0u))
1712:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
1713:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_GetCentroidPos
1714:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
1715:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1716:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
1717:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Checks the CapSense_Signal[ ] array for a centroid within
1718:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  a slider specified range. The centroid position is calculated according to the resolution
1719:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  specified in the CapSense customizer. The position filters are applied to the
1720:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  result if enabled.
1721:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1722:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
1723:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  widget:  Widget number.
1724:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  For every linear slider widget there are defines in this format:
1725:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  #define CapSense_"widget_name"__LS           5
1726:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * 
1727:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
1728:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns a position value of the linear slider.
1729:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
1730:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Global Variables:
1731:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
1732:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
ARM GAS  C:\Users\IEUser\AppData\Local\Temp\cctak5Pf.s 			page 71


1733:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
1734:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  If any sensor within the slider widget is active, the function returns values
1735:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  from zero to the API resolution value set in the CapSense customizer. If no
1736:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  sensors are active, the function returns 0xFFFF. If an error occurs during
1737:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  execution of the centroid/diplexing algorithm, the function returns 0xFFFF.
1738:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  There are no checks of the widget type argument provided to this function.
1739:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  The unproper widget type provided will cause unexpected position calculations.
1740:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1741:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Note:
1742:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  If noise counts on the slider segments are greater than the noise
1743:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  threshold, this subroutine may generate a false centroid result. The noise
1744:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  threshold should be set carefully (high enough above the noise level) so
1745:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  that noise will not generate a false centroid.
1746:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
1747:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_GetCentroidPos(uint32 widget)
1748:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 2235              		.loc 1 1748 0
 2236              		.cfi_startproc
 2237 0000 90B5     		push	{r4, r7, lr}
 2238              		.cfi_def_cfa_offset 12
 2239              		.cfi_offset 4, -12
 2240              		.cfi_offset 7, -8
 2241              		.cfi_offset 14, -4
 2242 0002 87B0     		sub	sp, sp, #28
 2243              		.cfi_def_cfa_offset 40
 2244 0004 02AF     		add	r7, sp, #8
 2245              		.cfi_def_cfa 7, 32
 2246 0006 7860     		str	r0, [r7, #4]
1749:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)
1750:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             const uint8 *diplex;
1751:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1752:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 
1753:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (0u != CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)
1754:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 posIndex;
1755:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 firstTimeIndex = CapSense_posFiltersData[widget];
 2247              		.loc 1 1755 0
 2248 0008 3B1C     		mov	r3, r7
 2249 000a 0D33     		add	r3, r3, #13
 2250 000c 4F49     		ldr	r1, .L145
 2251 000e 7A68     		ldr	r2, [r7, #4]
 2252 0010 8A18     		add	r2, r1, r2
 2253 0012 1278     		ldrb	r2, [r2]
 2254 0014 1A70     		strb	r2, [r3]
1756:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 posFiltersMask = CapSense_posFiltersMask[widget];  
 2255              		.loc 1 1756 0
 2256 0016 3B1C     		mov	r3, r7
 2257 0018 0C33     		add	r3, r3, #12
 2258 001a 4D49     		ldr	r1, .L145+4
 2259 001c 7A68     		ldr	r2, [r7, #4]
 2260 001e 8A18     		add	r2, r1, r2
 2261 0020 1278     		ldrb	r2, [r2]
 2262 0022 1A70     		strb	r2, [r3]
1757:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (0u != CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK) */
1758:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1759:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if ((0u != (CapSense_MEDIAN_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)) || \
1760:.\Generated_Source\PSoC4/CapSense_CSHL.c ****              (0u != (CapSense_AVERAGING_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)))
1761:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 tempPos;
ARM GAS  C:\Users\IEUser\AppData\Local\Temp\cctak5Pf.s 			page 72


1762:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* ((0u != (CapSense_MEDIAN_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)) || \
1763:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                *   (0u != (CapSense_AVERAGING_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)))
1764:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                */
1765:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1766:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 maximum;
1767:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint16 position;
1768:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 offset = CapSense_rawDataIndex[widget];
 2263              		.loc 1 1768 0
 2264 0024 3B1C     		mov	r3, r7
 2265 0026 0B33     		add	r3, r3, #11
 2266 0028 0022     		mov	r2, #0
 2267 002a 1A70     		strb	r2, [r3]
1769:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 count = CapSense_numberOfSensors[widget];
 2268              		.loc 1 1769 0
 2269 002c 3B1C     		mov	r3, r7
 2270 002e 0A33     		add	r3, r3, #10
 2271 0030 0522     		mov	r2, #5
 2272 0032 1A70     		strb	r2, [r3]
1770:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         
1771:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)
1772:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             if(widget < CapSense_TOTAL_DIPLEXED_SLIDERS_COUNT)
1773:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
1774:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 maximum = CapSense_diplexTable[widget];
1775:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 diplex = &CapSense_diplexTable[maximum];
1776:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
1777:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             else
1778:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
1779:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 diplex = 0u;
1780:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
1781:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1782:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1783:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		/* Find Maximum within centroid */      
1784:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		#if (CapSense_IS_DIPLEX_SLIDER)        
1785:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			maximum = CapSense_FindMaximum(offset, count, (uint8)CapSense_fingerThreshold[widget], diplex);
1786:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		#else
1787:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			maximum = CapSense_FindMaximum(offset, count, (uint8)CapSense_fingerThreshold[widget]);
 2273              		.loc 1 1787 0
 2274 0034 474A     		ldr	r2, .L145+8
 2275 0036 7B68     		ldr	r3, [r7, #4]
 2276 0038 D318     		add	r3, r2, r3
 2277 003a 1B78     		ldrb	r3, [r3]
 2278 003c 3C1C     		mov	r4, r7
 2279 003e 0934     		add	r4, r4, #9
 2280 0040 3A1C     		mov	r2, r7
 2281 0042 0B32     		add	r2, r2, #11
 2282 0044 1178     		ldrb	r1, [r2]
 2283 0046 3A1C     		mov	r2, r7
 2284 0048 0A32     		add	r2, r2, #10
 2285 004a 1278     		ldrb	r2, [r2]
 2286 004c 081C     		mov	r0, r1
 2287 004e 111C     		mov	r1, r2
 2288 0050 1A1C     		mov	r2, r3
 2289 0052 FFF7FEFF 		bl	CapSense_FindMaximum
 2290 0056 031C     		mov	r3, r0
 2291 0058 2370     		strb	r3, [r4]
1788:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		#endif /* (CapSense_IS_DIPLEX_SLIDER) */
1789:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
ARM GAS  C:\Users\IEUser\AppData\Local\Temp\cctak5Pf.s 			page 73


1790:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if (maximum != 0xFFu)
 2292              		.loc 1 1790 0
 2293 005a 3B1C     		mov	r3, r7
 2294 005c 0933     		add	r3, r3, #9
 2295 005e 1B78     		ldrb	r3, [r3]
 2296 0060 FF2B     		cmp	r3, #255
 2297 0062 5AD0     		beq	.L140
1791:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1792:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Calculate centroid */
1793:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             position = (uint16) CapSense_CalcCentroid(maximum, 
 2298              		.loc 1 1793 0
 2299 0064 FE23     		mov	r3, #254
 2300 0066 5B01     		lsl	r3, r3, #5
 2301 0068 3B49     		ldr	r1, .L145+12
 2302 006a 7A68     		ldr	r2, [r7, #4]
 2303 006c 8A18     		add	r2, r1, r2
 2304 006e 1478     		ldrb	r4, [r2]
 2305 0070 3A1C     		mov	r2, r7
 2306 0072 0932     		add	r2, r2, #9
 2307 0074 1078     		ldrb	r0, [r2]
 2308 0076 3A1C     		mov	r2, r7
 2309 0078 0B32     		add	r2, r2, #11
 2310 007a 1178     		ldrb	r1, [r2]
 2311 007c 3A1C     		mov	r2, r7
 2312 007e 0A32     		add	r2, r2, #10
 2313 0080 1278     		ldrb	r2, [r2]
 2314 0082 0094     		str	r4, [sp]
 2315 0084 FFF7FEFF 		bl	CapSense_CalcCentroid
 2316 0088 031C     		mov	r3, r0
 2317 008a 1A1C     		mov	r2, r3
 2318 008c 3B1C     		mov	r3, r7
 2319 008e 0E33     		add	r3, r3, #14
 2320 0090 1A80     		strh	r2, [r3]
1794:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                          offset, count, CapSense_centroidMult[widget], CapSense_noiseThreshold[widg
1795:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1796:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #if (0u != CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)
1797:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Check if this linear slider has enabled filters */
1798:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 if (0u != (posFiltersMask & CapSense_ANY_POS_FILTER))
 2321              		.loc 1 1798 0
 2322 0092 3B1C     		mov	r3, r7
 2323 0094 0C33     		add	r3, r3, #12
 2324 0096 1A78     		ldrb	r2, [r3]
 2325 0098 1F23     		mov	r3, #31
 2326 009a 1340     		and	r3, r2
 2327 009c 4ED0     		beq	.L143
1799:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1800:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     /* Calculate position to store filters data */
1801:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     posIndex  = firstTimeIndex + 1u;
 2328              		.loc 1 1801 0
 2329 009e 3B1C     		mov	r3, r7
 2330 00a0 0833     		add	r3, r3, #8
 2331 00a2 3A1C     		mov	r2, r7
 2332 00a4 0D32     		add	r2, r2, #13
 2333 00a6 1278     		ldrb	r2, [r2]
 2334 00a8 0132     		add	r2, r2, #1
 2335 00aa 1A70     		strb	r2, [r3]
1802:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     
ARM GAS  C:\Users\IEUser\AppData\Local\Temp\cctak5Pf.s 			page 74


1803:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     if (0u == CapSense_posFiltersData[firstTimeIndex])
 2336              		.loc 1 1803 0
 2337 00ac 3B1C     		mov	r3, r7
 2338 00ae 0D33     		add	r3, r3, #13
 2339 00b0 1B78     		ldrb	r3, [r3]
 2340 00b2 264A     		ldr	r2, .L145
 2341 00b4 D35C     		ldrb	r3, [r2, r3]
 2342 00b6 002B     		cmp	r3, #0
 2343 00b8 0FD1     		bne	.L142
1804:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1805:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         /* Init filters */
1806:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         CapSense_posFiltersData[posIndex] = (uint8) position;
 2344              		.loc 1 1806 0
 2345 00ba 3B1C     		mov	r3, r7
 2346 00bc 0833     		add	r3, r3, #8
 2347 00be 1B78     		ldrb	r3, [r3]
 2348 00c0 3A1C     		mov	r2, r7
 2349 00c2 0E32     		add	r2, r2, #14
 2350 00c4 1288     		ldrh	r2, [r2]
 2351 00c6 D1B2     		uxtb	r1, r2
 2352 00c8 204A     		ldr	r2, .L145
 2353 00ca D154     		strb	r1, [r2, r3]
1807:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if ((0u != (CapSense_MEDIAN_FILTER & \
1808:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                      CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)) || \
1809:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                              (0u != (CapSense_AVERAGING_FILTER & \
1810:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                      CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)))
1811:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1812:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             if ( (0u != (posFiltersMask & CapSense_MEDIAN_FILTER)) || 
1813:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                  (0u != (posFiltersMask & CapSense_AVERAGING_FILTER)) )
1814:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1815:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex + 1u] = (uint8) position;
1816:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
1817:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* ((0u != (CapSense_MEDIAN_FILTER & \
1818:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                *           CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)) || \
1819:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                *   (0u != (CapSense_AVERAGING_FILTER & \
1820:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                *           CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)))
1821:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
1822:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         
1823:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         CapSense_posFiltersData[firstTimeIndex] = 1u;
 2354              		.loc 1 1823 0
 2355 00cc 3B1C     		mov	r3, r7
 2356 00ce 0D33     		add	r3, r3, #13
 2357 00d0 1B78     		ldrb	r3, [r3]
 2358 00d2 1E4A     		ldr	r2, .L145
 2359 00d4 0121     		mov	r1, #1
 2360 00d6 D154     		strb	r1, [r2, r3]
 2361 00d8 30E0     		b	.L143
 2362              	.L142:
1824:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
1825:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     else
1826:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1827:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         /* Do filtering */
1828:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (0u != (CapSense_MEDIAN_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MA
1829:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_MEDIAN_FILTER))
1830:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1831:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 tempPos = (uint8) position;
1832:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_MedianFilter(position,
ARM GAS  C:\Users\IEUser\AppData\Local\Temp\cctak5Pf.s 			page 75


1833:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                 (uint16)CapSense_posFiltersData[pos
1834:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                 (uint16)CapSense_posFiltersData[pos
1835:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex + 1u] =
1836:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                              CapSense_posFiltersDat
1837:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = tempPos;
1838:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
1839:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /*(0u != (CapSense_MEDIAN_FILTER &
1840:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                *         CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK))
1841:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
1842:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1843:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if(0u!=(CapSense_AVERAGING_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MA
1844:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_AVERAGING_FILTER)) 
1845:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1846:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 tempPos = (uint8) position;
1847:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_AveragingFilter(position,
1848:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                 (uint16)CapSense_posFiltersData[pos
1849:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                 (uint16)CapSense_posFiltersData[pos
1850:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex+1u]=CapSense_posFiltersData[posInd
1851:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = tempPos;
1852:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
1853:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_AVERAGING_FILTER & \
1854:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                *           CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK))
1855:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
1856:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1857:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (0u != (CapSense_IIR2_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK
1858:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_IIR2_FILTER)) 
1859:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1860:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_IIR2Filter(position,
1861:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                     (uint16)CapSense_posFiltersData
1862:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = (uint8) position;
1863:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
1864:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_IIR2_FILTER & \
1865:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                *          CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK))
1866:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
1867:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1868:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (0u != (CapSense_IIR4_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK
1869:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_IIR4_FILTER))
1870:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1871:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_IIR4Filter(position,
1872:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                     (uint16)CapSense_posFiltersData
1873:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = (uint8) position;
1874:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             }                                
1875:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_IIR4_FILTER & \
1876:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                *          CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK))
1877:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
1878:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1879:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (0u != (CapSense_JITTER_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MA
1880:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_JITTER_FILTER))
 2363              		.loc 1 1880 0
 2364 00da 3B1C     		mov	r3, r7
 2365 00dc 0C33     		add	r3, r3, #12
 2366 00de 1A78     		ldrb	r2, [r3]
 2367 00e0 1023     		mov	r3, #16
 2368 00e2 1340     		and	r3, r2
 2369 00e4 2AD0     		beq	.L143
1881:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1882:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_JitterFilter(position,
ARM GAS  C:\Users\IEUser\AppData\Local\Temp\cctak5Pf.s 			page 76


1883:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                     (uint16)CapSense_posFiltersData
 2370              		.loc 1 1883 0
 2371 00e6 3B1C     		mov	r3, r7
 2372 00e8 0833     		add	r3, r3, #8
 2373 00ea 1B78     		ldrb	r3, [r3]
 2374 00ec 174A     		ldr	r2, .L145
 2375 00ee D35C     		ldrb	r3, [r2, r3]
1882:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_JitterFilter(position,
 2376              		.loc 1 1882 0
 2377 00f0 3C1C     		mov	r4, r7
 2378 00f2 0E34     		add	r4, r4, #14
 2379 00f4 3A1C     		mov	r2, r7
 2380 00f6 0E32     		add	r2, r2, #14
 2381 00f8 1288     		ldrh	r2, [r2]
 2382 00fa 101C     		mov	r0, r2
 2383 00fc 191C     		mov	r1, r3
 2384 00fe FFF7FEFF 		bl	CapSense_JitterFilter
 2385 0102 031C     		mov	r3, r0
 2386 0104 2380     		strh	r3, [r4]
1884:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = (uint8) position;
 2387              		.loc 1 1884 0
 2388 0106 3B1C     		mov	r3, r7
 2389 0108 0833     		add	r3, r3, #8
 2390 010a 1B78     		ldrb	r3, [r3]
 2391 010c 3A1C     		mov	r2, r7
 2392 010e 0E32     		add	r2, r2, #14
 2393 0110 1288     		ldrh	r2, [r2]
 2394 0112 D1B2     		uxtb	r1, r2
 2395 0114 0D4A     		ldr	r2, .L145
 2396 0116 D154     		strb	r1, [r2, r3]
 2397 0118 10E0     		b	.L143
 2398              	.L140:
1885:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
1886:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_JITTER_FILTER & \
1887:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                *           CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK))
1888:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
1889:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
1890:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1891:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #endif /* (0u != CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK) */
1892:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1893:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1894:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         else
1895:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1896:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Maximum wasn't found */
1897:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             position = 0xFFFFu;
 2399              		.loc 1 1897 0
 2400 011a 3B1C     		mov	r3, r7
 2401 011c 0E33     		add	r3, r3, #14
 2402 011e 0122     		mov	r2, #1
 2403 0120 5242     		neg	r2, r2
 2404 0122 1A80     		strh	r2, [r3]
1898:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1899:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #if(0u != CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)
1900:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Reset filters */
1901:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 if(0u != (posFiltersMask & CapSense_ANY_POS_FILTER))
 2405              		.loc 1 1901 0
 2406 0124 3B1C     		mov	r3, r7
ARM GAS  C:\Users\IEUser\AppData\Local\Temp\cctak5Pf.s 			page 77


 2407 0126 0C33     		add	r3, r3, #12
 2408 0128 1A78     		ldrb	r2, [r3]
 2409 012a 1F23     		mov	r3, #31
 2410 012c 1340     		and	r3, r2
 2411 012e 05D0     		beq	.L143
1902:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1903:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_posFiltersData[firstTimeIndex] = 0u;
 2412              		.loc 1 1903 0
 2413 0130 3B1C     		mov	r3, r7
 2414 0132 0D33     		add	r3, r3, #13
 2415 0134 1B78     		ldrb	r3, [r3]
 2416 0136 054A     		ldr	r2, .L145
 2417 0138 0021     		mov	r1, #0
 2418 013a D154     		strb	r1, [r2, r3]
 2419              	.L143:
1904:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1905:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #endif /* (0u != CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK) */
1906:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1907:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1908:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
1909:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         return (position);
 2420              		.loc 1 1909 0
 2421 013c 3B1C     		mov	r3, r7
 2422 013e 0E33     		add	r3, r3, #14
 2423 0140 1B88     		ldrh	r3, [r3]
1910:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 2424              		.loc 1 1910 0
 2425 0142 181C     		mov	r0, r3
 2426 0144 BD46     		mov	sp, r7
 2427 0146 05B0     		add	sp, sp, #20
 2428              		@ sp needed
 2429 0148 90BD     		pop	{r4, r7, pc}
 2430              	.L146:
 2431 014a C046     		.align	2
 2432              	.L145:
 2433 014c 10000000 		.word	CapSense_posFiltersData
 2434 0150 0C000000 		.word	CapSense_posFiltersMask
 2435 0154 00000000 		.word	CapSense_fingerThreshold
 2436 0158 00000000 		.word	CapSense_noiseThreshold
 2437              		.cfi_endproc
 2438              	.LFE62:
 2439              		.size	CapSense_GetCentroidPos, .-CapSense_GetCentroidPos
 2440              		.section	.text.CapSense_GetRadialCentroidPos,"ax",%progbits
 2441              		.align	2
 2442              		.global	CapSense_GetRadialCentroidPos
 2443              		.code	16
 2444              		.thumb_func
 2445              		.type	CapSense_GetRadialCentroidPos, %function
 2446              	CapSense_GetRadialCentroidPos:
 2447              	.LFB63:
1911:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* ((CapSense_TOTAL_RADIAL_SLIDERS_COUNT > 0u) || (CapSense_TOTAL_LINEAR_SLIDERS_COUNT > 0u)
1912:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1913:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1914:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if((CapSense_TOTAL_RADIAL_SLIDERS_COUNT > 0u) || (CapSense_TOTAL_LINEAR_SLIDERS_COUNT > 0u))
1915:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
1916:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_GetRadialCentroidPos
1917:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
ARM GAS  C:\Users\IEUser\AppData\Local\Temp\cctak5Pf.s 			page 78


1918:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1919:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
1920:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Checks the CapSense_Signal[ ] array for a centroid within
1921:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  a slider specified range. The centroid position is calculated according to the resolution
1922:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  specified in the CapSense customizer. The position filters are applied to the
1923:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  result if enabled.
1924:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1925:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
1926:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  widget:  Widget number.
1927:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  For every radial slider widget there are defines in this format:
1928:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  #define CapSense_"widget_name"__RS           5
1929:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * 
1930:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
1931:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns a position value of the radial slider.
1932:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1933:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Global Variables:
1934:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None.
1935:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
1936:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
1937:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  If any sensor within the slider widget is active, the function returns values
1938:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  from zero to the API resolution value set in the CapSense customizer. If no
1939:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  sensors are active, the function returns 0xFFFF.
1940:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  There are no checks of the widget type argument provided to this function.
1941:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  The unproper widget type provided will cause unexpected position calculations.
1942:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1943:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Note:
1944:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  If noise counts on the slider segments are greater than the noise
1945:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  threshold, this subroutine may generate a false centroid result. The noise
1946:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  threshold should be set carefully (high enough above the noise level) so 
1947:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  that noise will not generate a false centroid.
1948:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1949:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
1950:.\Generated_Source\PSoC4/CapSense_CSHL.c ****      uint16 CapSense_GetRadialCentroidPos(uint32 widget)
1951:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 2448              		.loc 1 1951 0
 2449              		.cfi_startproc
 2450 0000 90B5     		push	{r4, r7, lr}
 2451              		.cfi_def_cfa_offset 12
 2452              		.cfi_offset 4, -12
 2453              		.cfi_offset 7, -8
 2454              		.cfi_offset 14, -4
 2455 0002 87B0     		sub	sp, sp, #28
 2456              		.cfi_def_cfa_offset 40
 2457 0004 02AF     		add	r7, sp, #8
 2458              		.cfi_def_cfa 7, 32
 2459 0006 7860     		str	r0, [r7, #4]
1952:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (0u != CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)
1953:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 posIndex;
1954:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 firstTimeIndex = CapSense_posFiltersData[widget];
1955:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 posFiltersMask = CapSense_posFiltersMask[widget]; 
1956:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (0u != CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK) */
1957:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1958:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if ((0u != (CapSense_MEDIAN_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)) || \
1959:.\Generated_Source\PSoC4/CapSense_CSHL.c ****              (0u != (CapSense_AVERAGING_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)))
1960:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 tempPos;
1961:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* ((0u != (CapSense_MEDIAN_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)) || \
1962:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                *   (0u != (CapSense_AVERAGING_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)))
ARM GAS  C:\Users\IEUser\AppData\Local\Temp\cctak5Pf.s 			page 79


1963:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                */
1964:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1965:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 maximum;
1966:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint16 position;
1967:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 offset = CapSense_rawDataIndex[widget];
 2460              		.loc 1 1967 0
 2461 0008 3B1C     		mov	r3, r7
 2462 000a 0D33     		add	r3, r3, #13
 2463 000c 0022     		mov	r2, #0
 2464 000e 1A70     		strb	r2, [r3]
1968:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 count = CapSense_numberOfSensors[widget];
 2465              		.loc 1 1968 0
 2466 0010 3B1C     		mov	r3, r7
 2467 0012 0C33     		add	r3, r3, #12
 2468 0014 0522     		mov	r2, #5
 2469 0016 1A70     		strb	r2, [r3]
1969:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1970:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		/* Find Maximum within centroid */      
1971:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		#if (CapSense_IS_DIPLEX_SLIDER)        
1972:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			maximum = CapSense_FindMaximum(offset, count, (uint8)CapSense_fingerThreshold[widget], 0u);
1973:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		#else
1974:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			maximum = CapSense_FindMaximum(offset, count, (uint8)CapSense_fingerThreshold[widget]);
 2470              		.loc 1 1974 0
 2471 0018 1D4A     		ldr	r2, .L151
 2472 001a 7B68     		ldr	r3, [r7, #4]
 2473 001c D318     		add	r3, r2, r3
 2474 001e 1B78     		ldrb	r3, [r3]
 2475 0020 3C1C     		mov	r4, r7
 2476 0022 0B34     		add	r4, r4, #11
 2477 0024 3A1C     		mov	r2, r7
 2478 0026 0D32     		add	r2, r2, #13
 2479 0028 1178     		ldrb	r1, [r2]
 2480 002a 3A1C     		mov	r2, r7
 2481 002c 0C32     		add	r2, r2, #12
 2482 002e 1278     		ldrb	r2, [r2]
 2483 0030 081C     		mov	r0, r1
 2484 0032 111C     		mov	r1, r2
 2485 0034 1A1C     		mov	r2, r3
 2486 0036 FFF7FEFF 		bl	CapSense_FindMaximum
 2487 003a 031C     		mov	r3, r0
 2488 003c 2370     		strb	r3, [r4]
1975:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		#endif /* (CapSense_IS_DIPLEX_SLIDER) */
1976:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
1977:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if (maximum != CapSense_MAXIMUM_CENTROID)
 2489              		.loc 1 1977 0
 2490 003e 3B1C     		mov	r3, r7
 2491 0040 0B33     		add	r3, r3, #11
 2492 0042 1B78     		ldrb	r3, [r3]
 2493 0044 FF2B     		cmp	r3, #255
 2494 0046 17D0     		beq	.L148
1978:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1979:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Calculate centroid */
1980:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             position = (uint16) CapSense_CalcCentroid(maximum, 
 2495              		.loc 1 1980 0
 2496 0048 FE23     		mov	r3, #254
 2497 004a 5B01     		lsl	r3, r3, #5
 2498 004c 1149     		ldr	r1, .L151+4
ARM GAS  C:\Users\IEUser\AppData\Local\Temp\cctak5Pf.s 			page 80


 2499 004e 7A68     		ldr	r2, [r7, #4]
 2500 0050 8A18     		add	r2, r1, r2
 2501 0052 1478     		ldrb	r4, [r2]
 2502 0054 3A1C     		mov	r2, r7
 2503 0056 0B32     		add	r2, r2, #11
 2504 0058 1078     		ldrb	r0, [r2]
 2505 005a 3A1C     		mov	r2, r7
 2506 005c 0D32     		add	r2, r2, #13
 2507 005e 1178     		ldrb	r1, [r2]
 2508 0060 3A1C     		mov	r2, r7
 2509 0062 0C32     		add	r2, r2, #12
 2510 0064 1278     		ldrb	r2, [r2]
 2511 0066 0094     		str	r4, [sp]
 2512 0068 FFF7FEFF 		bl	CapSense_CalcCentroid
 2513 006c 031C     		mov	r3, r0
 2514 006e 1A1C     		mov	r2, r3
 2515 0070 3B1C     		mov	r3, r7
 2516 0072 0E33     		add	r3, r3, #14
 2517 0074 1A80     		strh	r2, [r3]
 2518 0076 04E0     		b	.L149
 2519              	.L148:
1981:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                          offset, count, CapSense_centroidMult[widget], CapSense_noiseThreshold[widg
1982:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1983:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #if (0u != CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)
1984:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Check if this Radial slider has enabled filters */
1985:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 if (0u != (posFiltersMask & CapSense_ANY_POS_FILTER))
1986:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1987:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     /* Calculate position to store filters data */
1988:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     posIndex  = firstTimeIndex + 1u;
1989:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     
1990:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     if (0u == CapSense_posFiltersData[firstTimeIndex])
1991:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1992:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         /* Init filters */
1993:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         CapSense_posFiltersData[posIndex] = (uint8) position;
1994:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if ((0u != (CapSense_MEDIAN_FILTER & \
1995:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                      CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)) || \
1996:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                              (0u != (CapSense_AVERAGING_FILTER & \
1997:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                      CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)))
1998:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1999:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             if ( (0u != (posFiltersMask & CapSense_MEDIAN_FILTER))  || 
2000:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                  (0u != (posFiltersMask & CapSense_AVERAGING_FILTER)) )
2001:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
2002:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex + 1u] = (uint8) position;
2003:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
2004:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* ((0u != (CapSense_MEDIAN_FILTER & \
2005:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                *           CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)) || \
2006:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                *   (0u != (CapSense_AVERAGING_FILTER & \
2007:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                *           CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)))
2008:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
2009:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         
2010:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         CapSense_posFiltersData[firstTimeIndex] = 1u;
2011:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
2012:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     else
2013:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
2014:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         /* Do filtering */
2015:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (0u != (CapSense_MEDIAN_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MA
2016:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_MEDIAN_FILTER))
ARM GAS  C:\Users\IEUser\AppData\Local\Temp\cctak5Pf.s 			page 81


2017:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
2018:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 tempPos = (uint8) position;
2019:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_MedianFilter(position,
2020:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                         CapSense_posFiltersData[pos
2021:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                         CapSense_posFiltersData[pos
2022:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex + 1u] = 
2023:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                               CapSense_posFiltersDa
2024:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = tempPos;
2025:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
2026:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_MEDIAN_FILTER & 
2027:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                *          CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK))
2028:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
2029:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2030:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (0u != (CapSense_AVERAGING_FILTER & \
2031:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK))
2032:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_AVERAGING_FILTER))
2033:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
2034:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 tempPos = (uint8) position;
2035:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_AveragingFilter(position, 
2036:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                        CapSense_posFiltersData[posI
2037:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                        CapSense_posFiltersData[posI
2038:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex+1u]= CapSense_posFiltersData[posIn
2039:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = tempPos;
2040:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
2041:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_AVERAGING_FILTER & \
2042:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                *          CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK))
2043:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
2044:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2045:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (0u != (CapSense_IIR2_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK
2046:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_IIR2_FILTER))
2047:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
2048:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_IIR2Filter(position,
2049:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                     (uint16)CapSense_posFiltersData
2050:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = (uint8) position;
2051:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
2052:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_IIR2_FILTER & 
2053:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                *          CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK))
2054:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
2055:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2056:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (0u != (CapSense_IIR4_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK
2057:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_IIR4_FILTER))
2058:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
2059:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_IIR4Filter(position,
2060:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                     (uint16)CapSense_posFiltersData
2061:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = (uint8) position;
2062:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
2063:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_IIR4_FILTER & 
2064:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                *          CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK))
2065:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
2066:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2067:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (0u != (CapSense_JITTER_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MA
2068:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_JITTER_FILTER))
2069:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
2070:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_JitterFilter(position, 
2071:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                          CapSense_posFiltersData[po
2072:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = (uint8) position;
2073:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
ARM GAS  C:\Users\IEUser\AppData\Local\Temp\cctak5Pf.s 			page 82


2074:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_JITTER_FILTER &
2075:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                *           CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK))
2076:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
2077:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
2078:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
2079:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #endif /* (0u != CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK) */
2080:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2081:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
2082:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         else
2083:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
2084:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Maximum was not found */
2085:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             position = 0xFFFFu;
 2520              		.loc 1 2085 0
 2521 0078 3B1C     		mov	r3, r7
 2522 007a 0E33     		add	r3, r3, #14
 2523 007c 0122     		mov	r2, #1
 2524 007e 5242     		neg	r2, r2
 2525 0080 1A80     		strh	r2, [r3]
 2526              	.L149:
2086:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2087:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #if (0u != CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)
2088:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Reset filters */
2089:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 if((posFiltersMask & CapSense_ANY_POS_FILTER) != 0u)
2090:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
2091:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_posFiltersData[firstTimeIndex] = 0u;
2092:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
2093:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #endif /* (0u != CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK) */
2094:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
2095:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
2096:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         return (position);
 2527              		.loc 1 2096 0
 2528 0082 3B1C     		mov	r3, r7
 2529 0084 0E33     		add	r3, r3, #14
 2530 0086 1B88     		ldrh	r3, [r3]
2097:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 2531              		.loc 1 2097 0
 2532 0088 181C     		mov	r0, r3
 2533 008a BD46     		mov	sp, r7
 2534 008c 05B0     		add	sp, sp, #20
 2535              		@ sp needed
 2536 008e 90BD     		pop	{r4, r7, pc}
 2537              	.L152:
 2538              		.align	2
 2539              	.L151:
 2540 0090 00000000 		.word	CapSense_fingerThreshold
 2541 0094 00000000 		.word	CapSense_noiseThreshold
 2542              		.cfi_endproc
 2543              	.LFE63:
 2544              		.size	CapSense_GetRadialCentroidPos, .-CapSense_GetRadialCentroidPos
 2545              		.section	.text.CapSense_MedianFilter,"ax",%progbits
 2546              		.align	2
 2547              		.global	CapSense_MedianFilter
 2548              		.code	16
 2549              		.thumb_func
 2550              		.type	CapSense_MedianFilter, %function
 2551              	CapSense_MedianFilter:
 2552              	.LFB64:
ARM GAS  C:\Users\IEUser\AppData\Local\Temp\cctak5Pf.s 			page 83


2098:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* ((CapSense_TOTAL_RADIAL_SLIDERS_COUNT > 0u) || (CapSense_TOTAL_LINEAR_SLIDERS_COUNT > 0u)
2099:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2100:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2101:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if(CapSense_TOTAL_TOUCH_PADS_BASIC_COUNT > 0u)
2102:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2103:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_GetTouchCentroidPos
2104:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2105:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2106:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2107:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  If a finger is present on a touchpad, this function calculates the X and Y
2108:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  position of the finger by calculating the centroids within touchpad specified
2109:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  range. The X and Y positions are calculated according to the API resolutions set in the
2110:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense customizer. Returns 1 if a finger is on the touchpad.
2111:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  The position filter is applied to the result if enabled.
2112:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This function is available only if a touch pad is defined by the CapSense
2113:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  customizer.
2114:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2115:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2116:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  widget:  Widget number. 
2117:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  For every touchpad widget there are defines in this format:
2118:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  #define CapSense_"widget_name"__TP            5
2119:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2120:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  pos:     Pointer to the array of two uint16 elements, where result
2121:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  result of calculation of X and Y position are stored.
2122:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  pos[0u]  - position of X
2123:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  pos[1u]  - position of Y
2124:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2125:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2126:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns a 1 if a finger is on the touch pad, 0 - if not.
2127:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
2128:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Global Variables:
2129:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None.
2130:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
2131:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
2132:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *   There are no checks of the widget type argument provided to this function.
2133:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *   The unproper widget type provided will cause unexpected position
2134:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *   calculations.
2135:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2136:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2137:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 CapSense_GetTouchCentroidPos(uint32 widget, uint16* pos)
2138:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
2139:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (0u != CapSense_TOUCH_PADS_POS_FILTERS_MASK)
2140:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 posXIndex;
2141:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 posYIndex;
2142:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 firstTimeIndex = CapSense_posFiltersData[widget];
2143:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 posFiltersMask = CapSense_posFiltersMask[widget];
2144:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (0u != CapSense_TOUCH_PADS_POS_FILTERS_MASK) */
2145:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2146:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if ((0u != (CapSense_MEDIAN_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MASK)) || \
2147:.\Generated_Source\PSoC4/CapSense_CSHL.c ****              (0u != (CapSense_AVERAGING_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MASK)))
2148:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint16 tempPos;
2149:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* ((0u != (CapSense_MEDIAN_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MASK)) || \
2150:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                *   (0u != (CapSense_AVERAGING_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MASK)))
2151:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                */
2152:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2153:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 MaxX;
2154:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 MaxY;
ARM GAS  C:\Users\IEUser\AppData\Local\Temp\cctak5Pf.s 			page 84


2155:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 posX;
2156:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 posY;
2157:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint32 touch = 0u;
2158:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 offset = CapSense_rawDataIndex[widget];
2159:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 count = CapSense_numberOfSensors[widget];
2160:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
2161:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Find Maximum within X centroid */
2162:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)
2163:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             MaxX = CapSense_FindMaximum(offset, count, CapSense_fingerThreshold[widget], 0u);
2164:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #else
2165:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             MaxX = CapSense_FindMaximum(offset, count, CapSense_fingerThreshold[widget]);
2166:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_IS_DIPLEX_SLIDER) */
2167:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2168:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if (MaxX != CapSense_MAXIMUM_CENTROID)
2169:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
2170:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             offset = CapSense_rawDataIndex[widget + 1u];
2171:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             count = CapSense_numberOfSensors[widget + 1u];
2172:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2173:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Find Maximum within Y centroid */
2174:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #if (CapSense_IS_DIPLEX_SLIDER)
2175:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 MaxY = CapSense_FindMaximum(offset, count, CapSense_fingerThreshold[widget + 1u], 0
2176:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #else
2177:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 MaxY = CapSense_FindMaximum(offset, count, CapSense_fingerThreshold[widget + 1u]);
2178:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #endif /* (CapSense_IS_DIPLEX_SLIDER) */
2179:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2180:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             if (MaxY != CapSense_MAXIMUM_CENTROID)
2181:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
2182:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* X and Y maximums are found = true touch */
2183:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 touch = 1u;
2184:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 
2185:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Calculate Y centroid */
2186:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 posY = CapSense_CalcCentroid(MaxY, offset, count, 
2187:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             CapSense_centroidMult[widget + 1u], CapSense_noiseThreshold[widget + 1u
2188:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 
2189:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Calculate X centroid */
2190:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 offset = CapSense_rawDataIndex[widget];
2191:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 count = CapSense_numberOfSensors[widget];
2192:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 
2193:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 posX = CapSense_CalcCentroid(MaxX, offset, count, 
2194:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             CapSense_centroidMult[widget],CapSense_noiseThreshold[widget]);
2195:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
2196:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 #if (0u != CapSense_TOUCH_PADS_POS_FILTERS_MASK)
2197:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     /* Check if this TP has enabled filters */
2198:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     if (0u != (posFiltersMask & CapSense_ANY_POS_FILTER))
2199:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
2200:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         /* Calculate position to store filters data */
2201:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         posXIndex  = firstTimeIndex + 1u;
2202:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         posYIndex  = CapSense_posFiltersData[widget + 1u];
2203:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         
2204:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         if (0u == CapSense_posFiltersData[firstTimeIndex])
2205:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         {
2206:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             /* Init filters */
2207:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             CapSense_posFiltersData[posXIndex] = posX;
2208:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             CapSense_posFiltersData[posYIndex] = posY;
2209:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2210:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             #if((0u != (CapSense_MEDIAN_FILTER & \
2211:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                         CapSense_TOUCH_PADS_POS_FILTERS_MASK))|| \
ARM GAS  C:\Users\IEUser\AppData\Local\Temp\cctak5Pf.s 			page 85


2212:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 (0u != (CapSense_AVERAGING_FILTER & \
2213:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                         CapSense_TOUCH_PADS_POS_FILTERS_MASK)))
2214:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2215:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 if ( (0u != (posFiltersMask & CapSense_MEDIAN_FILTER)) || 
2216:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                      (0u != (posFiltersMask & CapSense_AVERAGING_FILTER)) )
2217:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 {
2218:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posXIndex + 1u] = posX;
2219:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posYIndex + 1u] = posY;
2220:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 }
2221:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             #endif /* ((0u != (CapSense_MEDIAN_FILTER & \
2222:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                    *           CapSense_TOUCH_PADS_POS_FILTERS_MASK)) || \
2223:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                    *    (0u != (CapSense_AVERAGING_FILTER & \
2224:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                    *            CapSense_TOUCH_PADS_POS_FILTERS_MASK)))
2225:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                    */
2226:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             
2227:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             CapSense_posFiltersData[firstTimeIndex] = 1u;
2228:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         }
2229:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         else
2230:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         {
2231:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             /* Do filtering */
2232:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             #if (0u != (CapSense_MEDIAN_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MA
2233:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 if (0u != (posFiltersMask & CapSense_MEDIAN_FILTER))
2234:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 {
2235:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     tempPos = posX;
2236:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     posX = (uint8) CapSense_MedianFilter(posX,
2237:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                       CapSense_posFiltersData[posXI
2238:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                       CapSense_posFiltersData[posXI
2239:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posXIndex + 1u] = 
2240:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                              CapSense_posFiltersDat
2241:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posXIndex] = tempPos;
2242:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     
2243:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     tempPos = posY;
2244:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     posY = (uint8) CapSense_MedianFilter(posY,
2245:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                        CapSense_posFiltersData[posY
2246:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                        CapSense_posFiltersData[posY
2247:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posYIndex + 1u] = 
2248:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                              CapSense_posFiltersDat
2249:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posYIndex] = tempPos;
2250:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 }
2251:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 
2252:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             #endif /* (0u != (CapSense_MEDIAN_FILTER & \
2253:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                    *          CapSense_TOUCH_PADS_POS_FILTERS_MASK))
2254:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                    */
2255:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2256:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             #if(0u !=(CapSense_AVERAGING_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_M
2257:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 if (0u != (posFiltersMask & CapSense_AVERAGING_FILTER))
2258:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 {
2259:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     tempPos = posX;
2260:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     posX = (uint8) CapSense_AveragingFilter(posX,
2261:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                        CapSense_posFiltersData[posX
2262:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                        CapSense_posFiltersData[posX
2263:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posXIndex + 1u] = 
2264:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                              CapSense_posFiltersDat
2265:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posXIndex] = tempPos;
2266:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     
2267:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     tempPos = posY;
2268:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     posY = (uint8) CapSense_AveragingFilter(posY, 
ARM GAS  C:\Users\IEUser\AppData\Local\Temp\cctak5Pf.s 			page 86


2269:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                       CapSense_posFiltersData[posYI
2270:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                       CapSense_posFiltersData[posYI
2271:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posYIndex + 1u] = 
2272:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                             CapSense_posFiltersData
2273:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posYIndex] = tempPos;
2274:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 }
2275:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2276:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             #endif /* (0u != (CapSense_AVERAGING_FILTER & \
2277:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                    *           CapSense_TOUCH_PADS_POS_FILTERS_MASK))
2278:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                    */
2279:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2280:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             #if (0u != (CapSense_IIR2_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MASK
2281:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 if (0u != (posFiltersMask & CapSense_IIR2_FILTER))
2282:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 {
2283:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     posX = (uint8) CapSense_IIR2Filter(posX, 
2284:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                            CapSense_posFiltersData[
2285:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posXIndex] = posX;
2286:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     
2287:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     posY = (uint8) CapSense_IIR2Filter(posY, 
2288:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                             CapSense_posFiltersData
2289:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posYIndex] = posY;
2290:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 }
2291:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 
2292:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             #endif /* (0u != (CapSense_IIR2_FILTER & \
2293:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                    *          CapSense_TOUCH_PADS_POS_FILTERS_MASK))
2294:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                    */
2295:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2296:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             #if (0u != (CapSense_IIR4_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MASK
2297:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 if (0u != (posFiltersMask & CapSense_IIR4_FILTER))
2298:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 {
2299:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     posX = (uint8) CapSense_IIR4Filter((uint16)posX,
2300:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                     (uint16)CapSense_posFiltersData
2301:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posXIndex] = posX;
2302:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2303:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     posY = (uint8) CapSense_IIR4Filter((uint16)posY,
2304:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                     (uint16)CapSense_posFiltersData
2305:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posYIndex] = posY;
2306:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 }
2307:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 
2308:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             #endif /* (0u != (CapSense_IIR4_FILTER & \
2309:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                    *           CapSense_TOUCH_PADS_POS_FILTERS_MASK))
2310:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                    */
2311:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2312:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             #if (0u != (CapSense_JITTER_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MA
2313:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 if (0u != (posFiltersMask & CapSense_JITTER_FILTER))
2314:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     {
2315:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                         posX = (uint8) CapSense_JitterFilter(posX, 
2316:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                             CapSense_posFiltersData
2317:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                         CapSense_posFiltersData[posXIndex] = posX;
2318:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                         
2319:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                         posY = (uint8) CapSense_JitterFilter(posY, 
2320:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                             CapSense_posFiltersData
2321:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                         CapSense_posFiltersData[posYIndex] = posY;
2322:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     }
2323:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             #endif /* (0u != (CapSense_JITTER_FILTER & \
2324:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                    *           CapSense_TOUCH_PADS_POS_FILTERS_MASK))
2325:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                    */
ARM GAS  C:\Users\IEUser\AppData\Local\Temp\cctak5Pf.s 			page 87


2326:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         }
2327:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
2328:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 #endif /* (0u != CapSense_TOUCH_PADS_POS_FILTERS_MASK) */
2329:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2330:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Save positions */
2331:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 pos[0u] = posX;
2332:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 pos[1u] = posY;
2333:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
2334:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
2335:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2336:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (0u != CapSense_TOUCH_PADS_POS_FILTERS_MASK)
2337:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             if(touch == 0u)
2338:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
2339:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Reset filters */
2340:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 if ((posFiltersMask & CapSense_ANY_POS_FILTER) != 0u)
2341:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
2342:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_posFiltersData[firstTimeIndex] = 0u;
2343:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
2344:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
2345:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (0u != CapSense_TOUCH_PADS_POS_FILTERS_MASK) */
2346:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
2347:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         return (touch);
2348:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
2349:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (CapSense_TOTAL_TOUCH_PADS_BASIC_COUNT > 0u) */
2350:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2351:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2352:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER)) || \
2353:.\Generated_Source\PSoC4/CapSense_CSHL.c ****       (0u != (CapSense_POS_FILTERS_MASK & CapSense_MEDIAN_FILTER)) || \
2354:.\Generated_Source\PSoC4/CapSense_CSHL.c ****       ((CapSense_TUNING_METHOD == CapSense__TUNING_AUTO)) )
2355:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2356:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_MedianFilter
2357:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2358:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2359:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2360:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This is the Median filter function. 
2361:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  The median filter looks at the three most recent samples and reports the 
2362:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  median value.
2363:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2364:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2365:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x1:  Current value.
2366:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x2:  Previous value.
2367:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x3:  Before previous value.
2368:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2369:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2370:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns filtered value.
2371:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
2372:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Global Variables:
2373:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None.
2374:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
2375:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Side Effects:
2376:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
2377:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* 
2378:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2379:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_MedianFilter(uint16 x1, uint16 x2, uint16 x3)
2380:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 2553              		.loc 1 2380 0
 2554              		.cfi_startproc
ARM GAS  C:\Users\IEUser\AppData\Local\Temp\cctak5Pf.s 			page 88


 2555 0000 80B5     		push	{r7, lr}
 2556              		.cfi_def_cfa_offset 8
 2557              		.cfi_offset 7, -8
 2558              		.cfi_offset 14, -4
 2559 0002 84B0     		sub	sp, sp, #16
 2560              		.cfi_def_cfa_offset 24
 2561 0004 00AF     		add	r7, sp, #0
 2562              		.cfi_def_cfa_register 7
 2563 0006 BB1D     		add	r3, r7, #6
 2564 0008 1880     		strh	r0, [r3]
 2565 000a 3B1D     		add	r3, r7, #4
 2566 000c 1980     		strh	r1, [r3]
 2567 000e BB1C     		add	r3, r7, #2
 2568 0010 1A80     		strh	r2, [r3]
2381:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint16 tmp;
2382:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
2383:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if (x1 > x2)
 2569              		.loc 1 2383 0
 2570 0012 BA1D     		add	r2, r7, #6
 2571 0014 3B1D     		add	r3, r7, #4
 2572 0016 1288     		ldrh	r2, [r2]
 2573 0018 1B88     		ldrh	r3, [r3]
 2574 001a 9A42     		cmp	r2, r3
 2575 001c 0DD9     		bls	.L154
2384:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
2385:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             tmp = x2;
 2576              		.loc 1 2385 0
 2577 001e 3B1C     		mov	r3, r7
 2578 0020 0E33     		add	r3, r3, #14
 2579 0022 3A1D     		add	r2, r7, #4
 2580 0024 1288     		ldrh	r2, [r2]
 2581 0026 1A80     		strh	r2, [r3]
2386:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             x2 = x1;
 2582              		.loc 1 2386 0
 2583 0028 3B1D     		add	r3, r7, #4
 2584 002a BA1D     		add	r2, r7, #6
 2585 002c 1288     		ldrh	r2, [r2]
 2586 002e 1A80     		strh	r2, [r3]
2387:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             x1 = tmp;
 2587              		.loc 1 2387 0
 2588 0030 BB1D     		add	r3, r7, #6
 2589 0032 3A1C     		mov	r2, r7
 2590 0034 0E32     		add	r2, r2, #14
 2591 0036 1288     		ldrh	r2, [r2]
 2592 0038 1A80     		strh	r2, [r3]
 2593              	.L154:
2388:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
2389:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
2390:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if (x2 > x3)
 2594              		.loc 1 2390 0
 2595 003a 3A1D     		add	r2, r7, #4
 2596 003c BB1C     		add	r3, r7, #2
 2597 003e 1288     		ldrh	r2, [r2]
 2598 0040 1B88     		ldrh	r3, [r3]
 2599 0042 9A42     		cmp	r2, r3
 2600 0044 03D9     		bls	.L155
2391:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
ARM GAS  C:\Users\IEUser\AppData\Local\Temp\cctak5Pf.s 			page 89


2392:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             x2 = x3;
 2601              		.loc 1 2392 0
 2602 0046 3B1D     		add	r3, r7, #4
 2603 0048 BA1C     		add	r2, r7, #2
 2604 004a 1288     		ldrh	r2, [r2]
 2605 004c 1A80     		strh	r2, [r3]
 2606              	.L155:
2393:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
2394:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
2395:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         return ((x1 > x2) ? x1 : x2);
 2607              		.loc 1 2395 0
 2608 004e 3B1D     		add	r3, r7, #4
 2609 0050 BA1D     		add	r2, r7, #6
 2610 0052 1288     		ldrh	r2, [r2]
 2611 0054 1B88     		ldrh	r3, [r3]
 2612 0056 98B2     		uxth	r0, r3
 2613 0058 91B2     		uxth	r1, r2
 2614 005a 8842     		cmp	r0, r1
 2615 005c 00D2     		bcs	.L156
 2616 005e 131C     		add	r3, r2, #0
 2617              	.L156:
 2618 0060 9BB2     		uxth	r3, r3
2396:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 2619              		.loc 1 2396 0
 2620 0062 181C     		mov	r0, r3
 2621 0064 BD46     		mov	sp, r7
 2622 0066 04B0     		add	sp, sp, #16
 2623              		@ sp needed
 2624 0068 80BD     		pop	{r7, pc}
 2625              		.cfi_endproc
 2626              	.LFE64:
 2627              		.size	CapSense_MedianFilter, .-CapSense_MedianFilter
 2628 006a C046     		.section	.text.CapSense_IIR4Filter,"ax",%progbits
 2629              		.align	2
 2630              		.global	CapSense_IIR4Filter
 2631              		.code	16
 2632              		.thumb_func
 2633              		.type	CapSense_IIR4Filter, %function
 2634              	CapSense_IIR4Filter:
 2635              	.LFB65:
2397:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER)) || \
2398:.\Generated_Source\PSoC4/CapSense_CSHL.c ****       (0u != (CapSense_POS_FILTERS_MASK & CapSense_MEDIAN_FILTER)) || \
2399:.\Generated_Source\PSoC4/CapSense_CSHL.c ****       ((CapSense_TUNING_METHOD == CapSense__TUNING_AUTO)) ) */
2400:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2401:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2402:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_AVERAGING_FILTER)) || \
2403:.\Generated_Source\PSoC4/CapSense_CSHL.c ****       (0u != (CapSense_POS_FILTERS_MASK & CapSense_AVERAGING_FILTER)) )
2404:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2405:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_AveragingFilter
2406:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2407:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2408:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2409:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This is the Averaging filter function.
2410:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  The averaging filter looks at the three most recent samples of a position and
2411:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  reports the averaging value.
2412:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2413:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
ARM GAS  C:\Users\IEUser\AppData\Local\Temp\cctak5Pf.s 			page 90


2414:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x1:  Current value.
2415:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x2:  Previous value.
2416:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x3:  Before previous value.
2417:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2418:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2419:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns filtered value.
2420:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
2421:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Global Variables:
2422:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None.
2423:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
2424:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Side Effects:
2425:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
2426:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* 
2427:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2428:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_AveragingFilter(uint16 x1, uint16 x2, uint16 x3)
2429:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
2430:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint32 tmp = ((uint32)x1 + (uint32)x2 + (uint32)x3) / 3u;
2431:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
2432:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         return ((uint16) tmp);
2433:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
2434:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_AVERAGING_FILTER) || \
2435:.\Generated_Source\PSoC4/CapSense_CSHL.c ****       (0u != (CapSense_POS_FILTERS_MASK & CapSense_AVERAGING_FILTER) ) */
2436:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2437:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2438:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR2_FILTER)) || \
2439:.\Generated_Source\PSoC4/CapSense_CSHL.c ****       (0u != (CapSense_POS_FILTERS_MASK & CapSense_IIR2_FILTER)) )
2440:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2441:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_IIR2Filter
2442:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2443:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2444:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2445:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This is the IIR1/2 filter function. IIR1/2 = 1/2current + 1/2previous.
2446:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2447:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2448:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x1:  Current value.
2449:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x2:  Previous value.
2450:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2451:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2452:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns filtered value.
2453:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
2454:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Global Variables:
2455:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None.
2456:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
2457:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Side Effects:
2458:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
2459:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* 
2460:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2461:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_IIR2Filter(uint16 x1, uint16 x2)
2462:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
2463:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint32 tmp;
2464:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
2465:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* IIR = 1/2 Current Value+ 1/2 Previous Value */
2466:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp = (uint32)x1 + (uint32)x2;
2467:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp >>= 1u;
2468:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
2469:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         return ((uint16) tmp);
2470:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
ARM GAS  C:\Users\IEUser\AppData\Local\Temp\cctak5Pf.s 			page 91


2471:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR2_FILTER)) || \
2472:.\Generated_Source\PSoC4/CapSense_CSHL.c ****        *    (0u != (CapSense_POS_FILTERS_MASK & CapSense_IIR2_FILTER)) )
2473:.\Generated_Source\PSoC4/CapSense_CSHL.c ****        */
2474:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2475:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2476:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR4_FILTER)) || \
2477:.\Generated_Source\PSoC4/CapSense_CSHL.c ****       (0u != (CapSense_POS_FILTERS_MASK & CapSense_IIR4_FILTER)) )
2478:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2479:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_IIR4Filter
2480:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2481:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2482:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2483:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This is the IIR1/4 filter function. IIR1/4 = 1/4current + 3/4previous.
2484:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2485:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2486:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x1:  Current value.
2487:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x2:  Previous value.
2488:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2489:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2490:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns a filtered value.
2491:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
2492:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Global Variables:
2493:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None.
2494:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
2495:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Side Effects:
2496:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
2497:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* 
2498:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2499:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_IIR4Filter(uint16 x1, uint16 x2)
2500:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 2636              		.loc 1 2500 0
 2637              		.cfi_startproc
 2638 0000 80B5     		push	{r7, lr}
 2639              		.cfi_def_cfa_offset 8
 2640              		.cfi_offset 7, -8
 2641              		.cfi_offset 14, -4
 2642 0002 84B0     		sub	sp, sp, #16
 2643              		.cfi_def_cfa_offset 24
 2644 0004 00AF     		add	r7, sp, #0
 2645              		.cfi_def_cfa_register 7
 2646 0006 0A1C     		mov	r2, r1
 2647 0008 BB1D     		add	r3, r7, #6
 2648 000a 011C     		add	r1, r0, #0
 2649 000c 1980     		strh	r1, [r3]
 2650 000e 3B1D     		add	r3, r7, #4
 2651 0010 1A80     		strh	r2, [r3]
2501:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint32 tmp;
2502:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
2503:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* IIR = 1/4 Current Value + 3/4 Previous Value */
2504:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp = (uint32)x1 + (uint32)x2;
 2652              		.loc 1 2504 0
 2653 0012 BB1D     		add	r3, r7, #6
 2654 0014 1A88     		ldrh	r2, [r3]
 2655 0016 3B1D     		add	r3, r7, #4
 2656 0018 1B88     		ldrh	r3, [r3]
 2657 001a D318     		add	r3, r2, r3
 2658 001c FB60     		str	r3, [r7, #12]
ARM GAS  C:\Users\IEUser\AppData\Local\Temp\cctak5Pf.s 			page 92


2505:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp += ((uint32)x2 << 1u);
 2659              		.loc 1 2505 0
 2660 001e 3B1D     		add	r3, r7, #4
 2661 0020 1B88     		ldrh	r3, [r3]
 2662 0022 5B00     		lsl	r3, r3, #1
 2663 0024 FA68     		ldr	r2, [r7, #12]
 2664 0026 D318     		add	r3, r2, r3
 2665 0028 FB60     		str	r3, [r7, #12]
2506:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp >>= 2u;
 2666              		.loc 1 2506 0
 2667 002a FB68     		ldr	r3, [r7, #12]
 2668 002c 9B08     		lsr	r3, r3, #2
 2669 002e FB60     		str	r3, [r7, #12]
2507:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
2508:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         return ((uint16) tmp);
 2670              		.loc 1 2508 0
 2671 0030 FB68     		ldr	r3, [r7, #12]
 2672 0032 9BB2     		uxth	r3, r3
2509:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 2673              		.loc 1 2509 0
 2674 0034 181C     		mov	r0, r3
 2675 0036 BD46     		mov	sp, r7
 2676 0038 04B0     		add	sp, sp, #16
 2677              		@ sp needed
 2678 003a 80BD     		pop	{r7, pc}
 2679              		.cfi_endproc
 2680              	.LFE65:
 2681              		.size	CapSense_IIR4Filter, .-CapSense_IIR4Filter
 2682              		.section	.text.CapSense_JitterFilter,"ax",%progbits
 2683              		.align	2
 2684              		.global	CapSense_JitterFilter
 2685              		.code	16
 2686              		.thumb_func
 2687              		.type	CapSense_JitterFilter, %function
 2688              	CapSense_JitterFilter:
 2689              	.LFB66:
2510:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR4_FILTER)) || \
2511:.\Generated_Source\PSoC4/CapSense_CSHL.c ****        *    (0u != (CapSense_POS_FILTERS_MASK & CapSense_IIR4_FILTER)) )
2512:.\Generated_Source\PSoC4/CapSense_CSHL.c ****        */
2513:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2514:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2515:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_JITTER_FILTER)) || \
2516:.\Generated_Source\PSoC4/CapSense_CSHL.c ****       (0u != (CapSense_POS_FILTERS_MASK & CapSense_JITTER_FILTER)) || \
2517:.\Generated_Source\PSoC4/CapSense_CSHL.c ****       (0u != (CapSense_TRACKPAD_GEST_POS_FILTERS_MASK & CapSense_JITTER_FILTER)))  
2518:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2519:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: uint16 CapSense_JitterFilter
2520:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2521:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2522:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2523:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This is the Jitter filter function.
2524:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2525:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2526:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x1:  Current value.
2527:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x2:  Previous value.
2528:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2529:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2530:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns filtered value.
ARM GAS  C:\Users\IEUser\AppData\Local\Temp\cctak5Pf.s 			page 93


2531:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
2532:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Global Variables:
2533:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None.
2534:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
2535:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Side Effects:
2536:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
2537:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* 
2538:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2539:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_JitterFilter(uint16 x1, uint16 x2)
2540:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 2690              		.loc 1 2540 0
 2691              		.cfi_startproc
 2692 0000 80B5     		push	{r7, lr}
 2693              		.cfi_def_cfa_offset 8
 2694              		.cfi_offset 7, -8
 2695              		.cfi_offset 14, -4
 2696 0002 82B0     		sub	sp, sp, #8
 2697              		.cfi_def_cfa_offset 16
 2698 0004 00AF     		add	r7, sp, #0
 2699              		.cfi_def_cfa_register 7
 2700 0006 0A1C     		mov	r2, r1
 2701 0008 BB1D     		add	r3, r7, #6
 2702 000a 011C     		add	r1, r0, #0
 2703 000c 1980     		strh	r1, [r3]
 2704 000e 3B1D     		add	r3, r7, #4
 2705 0010 1A80     		strh	r2, [r3]
2541:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if (x1 > x2)
 2706              		.loc 1 2541 0
 2707 0012 BA1D     		add	r2, r7, #6
 2708 0014 3B1D     		add	r3, r7, #4
 2709 0016 1288     		ldrh	r2, [r2]
 2710 0018 1B88     		ldrh	r3, [r3]
 2711 001a 9A42     		cmp	r2, r3
 2712 001c 05D9     		bls	.L161
2542:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
2543:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             x1--;
 2713              		.loc 1 2543 0
 2714 001e BB1D     		add	r3, r7, #6
 2715 0020 1A88     		ldrh	r2, [r3]
 2716 0022 BB1D     		add	r3, r7, #6
 2717 0024 013A     		sub	r2, r2, #1
 2718 0026 1A80     		strh	r2, [r3]
 2719 0028 0AE0     		b	.L162
 2720              	.L161:
2544:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
2545:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         else
2546:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
2547:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             if (x1 < x2)
 2721              		.loc 1 2547 0
 2722 002a BA1D     		add	r2, r7, #6
 2723 002c 3B1D     		add	r3, r7, #4
 2724 002e 1288     		ldrh	r2, [r2]
 2725 0030 1B88     		ldrh	r3, [r3]
 2726 0032 9A42     		cmp	r2, r3
 2727 0034 04D2     		bcs	.L162
2548:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
2549:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 x1++;
ARM GAS  C:\Users\IEUser\AppData\Local\Temp\cctak5Pf.s 			page 94


 2728              		.loc 1 2549 0
 2729 0036 BB1D     		add	r3, r7, #6
 2730 0038 1A88     		ldrh	r2, [r3]
 2731 003a BB1D     		add	r3, r7, #6
 2732 003c 0132     		add	r2, r2, #1
 2733 003e 1A80     		strh	r2, [r3]
 2734              	.L162:
2550:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
2551:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
2552:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
2553:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         return x1;
 2735              		.loc 1 2553 0
 2736 0040 BB1D     		add	r3, r7, #6
 2737 0042 1B88     		ldrh	r3, [r3]
2554:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 2738              		.loc 1 2554 0
 2739 0044 181C     		mov	r0, r3
 2740 0046 BD46     		mov	sp, r7
 2741 0048 02B0     		add	sp, sp, #8
 2742              		@ sp needed
 2743 004a 80BD     		pop	{r7, pc}
 2744              		.cfi_endproc
 2745              	.LFE66:
 2746              		.size	CapSense_JitterFilter, .-CapSense_JitterFilter
 2747              		.section	.text.CapSense_GetWidgetNumber,"ax",%progbits
 2748              		.align	2
 2749              		.global	CapSense_GetWidgetNumber
 2750              		.code	16
 2751              		.thumb_func
 2752              		.type	CapSense_GetWidgetNumber, %function
 2753              	CapSense_GetWidgetNumber:
 2754              	.LFB67:
2555:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_JITTER_FILTER)) || \
2556:.\Generated_Source\PSoC4/CapSense_CSHL.c ****        *    (0u != (CapSense_POS_FILTERS_MASK & CapSense_JITTER_FILTER)) )
2557:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	   *    (0u != (CapSense_TRACKPAD_GEST_POS_FILTERS_MASK & CapSense_JITTER_FILTER)) )
2558:.\Generated_Source\PSoC4/CapSense_CSHL.c ****        */
2559:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2560:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2561:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR8_FILTER))
2562:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2563:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_IIR8Filter
2564:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2565:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2566:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2567:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This is the IIR1/8 filter function. IIR1/8 = 1/8current + 7/8previous.
2568:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Only applies for raw data.
2569:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2570:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2571:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x1:  Current value.
2572:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x2:  Previous value.
2573:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2574:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2575:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns filtered value.
2576:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
2577:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Global Variables:
2578:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None.
2579:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
ARM GAS  C:\Users\IEUser\AppData\Local\Temp\cctak5Pf.s 			page 95


2580:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Side Effects:
2581:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
2582:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* 
2583:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2584:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_IIR8Filter(uint16 x1, uint16 x2)
2585:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
2586:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint32 tmp;
2587:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
2588:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* IIR = 1/8 Current Value + 7/8 Previous Value */
2589:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp = (uint32)x1;
2590:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp += (((uint32)x2 << 3u) - ((uint32)x2));
2591:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp >>= 3u;
2592:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
2593:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         return ((uint16) tmp);
2594:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
2595:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR8_FILTER)) */
2596:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2597:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2598:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR16_FILTER))
2599:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2600:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_IIR16Filter
2601:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2602:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2603:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2604:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This is the IIR1/16 filter function. IIR1/16 = 1/16current + 15/16previous.
2605:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Only applies for raw data.
2606:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2607:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2608:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x1:  Current value.
2609:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x2:  Previous value.
2610:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2611:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2612:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns filtered value.
2613:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
2614:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Global Variables:
2615:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None.
2616:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
2617:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Side Effects:
2618:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
2619:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* 
2620:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2621:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_IIR16Filter(uint16 x1, uint16 x2)
2622:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
2623:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint32 tmp;
2624:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
2625:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* IIR = 1/16 Current Value + 15/16 Previous Value */
2626:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp = (uint32)x1;
2627:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp += (((uint32)x2 << 4u) - ((uint32)x2));
2628:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp >>= 4u;
2629:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
2630:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         return ((uint16) tmp);
2631:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
2632:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (CapSense_RAW_FILTER_MASK & CapSense_IIR16_FILTER) */
2633:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2634:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2635:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if (0u != (CapSense_TOTAL_MATRIX_BUTTONS_COUNT))
2636:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
ARM GAS  C:\Users\IEUser\AppData\Local\Temp\cctak5Pf.s 			page 96


2637:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2638:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_GetMatrixButtonPos
2639:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2640:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2641:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2642:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Function calculates and returns a touch position (column and row) for the matrix
2643:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  button widget.
2644:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2645:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2646:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  widget:  widget number;
2647:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  pos:     pointer to an array of two uint8, where touch position will be 
2648:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *           stored:
2649:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *           pos[0] - column position;
2650:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *           pos[1] - raw position.
2651:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2652:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2653:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns 1 if row and column sensors of matrix button are active, 0 - in other
2654:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  cases.
2655:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
2656:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Global Variables:
2657:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  CapSense_fingerThreshold[ ] - used to store the finger threshold for all widgets.
2658:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  CapSense_sensorSignal[ ] - used to store a difference between the current value of 
2659:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  raw data and a previous value of the baseline.
2660:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
2661:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Side Effects:
2662:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
2663:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* 
2664:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2665:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 CapSense_GetMatrixButtonPos(uint32 widget, uint8* pos)
2666:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
2667:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 i;
2668:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint32 retVal = 0u;
2669:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint16 row_sig_max = 0u;
2670:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint16 col_sig_max = 0u;
2671:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 row_ind = 0u;
2672:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 col_ind = 0u;
2673:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2674:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if (CapSense_CheckIsWidgetActive(widget) == 1u)
2675:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
2676:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Find row number with maximal signal value */
2677:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             for(i = CapSense_rawDataIndex[widget]; i < (CapSense_rawDataIndex[widget] + \
2678:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                  CapSense_numberOfSensors[widget]); i++)
2679:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
2680:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 if (CapSense_sensorSignal[i] > col_sig_max)
2681:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
2682:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     col_ind = i;
2683:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     col_sig_max = CapSense_sensorSignal[i];
2684:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
2685:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
2686:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2687:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Find row number with maximal signal value */
2688:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             for(i = CapSense_rawDataIndex[widget+1u]; i < (CapSense_rawDataIndex[widget+1u] + \
2689:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                  CapSense_numberOfSensors[widget+1u]); i++)
2690:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
2691:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 if (CapSense_sensorSignal[i] > row_sig_max)
2692:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
2693:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     row_ind = i;
ARM GAS  C:\Users\IEUser\AppData\Local\Temp\cctak5Pf.s 			page 97


2694:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     row_sig_max = CapSense_sensorSignal[i];
2695:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
2696:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
2697:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2698:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             if((col_sig_max >= CapSense_fingerThreshold[widget]) && \
2699:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                (row_sig_max >= CapSense_fingerThreshold[widget+1u]))
2700:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
2701:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 pos[0u] = col_ind - CapSense_rawDataIndex[widget];
2702:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 pos[1u] = row_ind - CapSense_rawDataIndex[widget+1u];
2703:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 retVal = 1u;
2704:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
2705:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
2706:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         return (retVal);
2707:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
2708:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2709:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (0u != (CapSense_TOTAL_MATRIX_BUTTONS_COUNT)) */
2710:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2711:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
2712:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_GetWidgetNumber
2713:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
2714:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
2715:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
2716:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns the widget number for the sensor.
2717:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
2718:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
2719:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor: sensor index. The value of index can be 
2720:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  from 0 to (CapSense_TOTAL_SENSOR_COUNT-1).
2721:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
2722:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
2723:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns the widget number for the sensor. 
2724:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
2725:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
2726:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_widgetNumber[]  - stores widget numbers.
2727:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * 
2728:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
2729:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
2730:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
2731:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
2732:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint32 CapSense_GetWidgetNumber(uint32 sensor)
2733:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 2755              		.loc 1 2733 0
 2756              		.cfi_startproc
 2757 0000 80B5     		push	{r7, lr}
 2758              		.cfi_def_cfa_offset 8
 2759              		.cfi_offset 7, -8
 2760              		.cfi_offset 14, -4
 2761 0002 82B0     		sub	sp, sp, #8
 2762              		.cfi_def_cfa_offset 16
 2763 0004 00AF     		add	r7, sp, #0
 2764              		.cfi_def_cfa_register 7
 2765 0006 7860     		str	r0, [r7, #4]
2734:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	return((uint32)CapSense_widgetNumber[sensor]);
 2766              		.loc 1 2734 0
 2767 0008 034A     		ldr	r2, .L166
 2768 000a 7B68     		ldr	r3, [r7, #4]
 2769 000c D318     		add	r3, r2, r3
 2770 000e 1B78     		ldrb	r3, [r3]
ARM GAS  C:\Users\IEUser\AppData\Local\Temp\cctak5Pf.s 			page 98


2735:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 2771              		.loc 1 2735 0
 2772 0010 181C     		mov	r0, r3
 2773 0012 BD46     		mov	sp, r7
 2774 0014 02B0     		add	sp, sp, #8
 2775              		@ sp needed
 2776 0016 80BD     		pop	{r7, pc}
 2777              	.L167:
 2778              		.align	2
 2779              	.L166:
 2780 0018 00000000 		.word	CapSense_widgetNumber
 2781              		.cfi_endproc
 2782              	.LFE67:
 2783              		.size	CapSense_GetWidgetNumber, .-CapSense_GetWidgetNumber
 2784              		.section	.text.CapSense_GetLowBaselineReset,"ax",%progbits
 2785              		.align	2
 2786              		.global	CapSense_GetLowBaselineReset
 2787              		.code	16
 2788              		.thumb_func
 2789              		.type	CapSense_GetLowBaselineReset, %function
 2790              	CapSense_GetLowBaselineReset:
 2791              	.LFB68:
2736:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2737:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
2738:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_GetLowBaselineReset
2739:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
2740:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
2741:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
2742:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns the low baseline reset threshold value for the  sensor.
2743:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
2744:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
2745:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor: sensor index. The value of index can be 
2746:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  from 0 to (CapSense_TOTAL_SENSOR_COUNT-1).
2747:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
2748:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
2749:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  low baseline reset threshold value a sensor.
2750:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
2751:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
2752:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_lowBaselineReset[]  - stores low baseline reset values.
2753:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * 
2754:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
2755:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
2756:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
2757:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
2758:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_GetLowBaselineReset(uint32 sensor)
2759:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 2792              		.loc 1 2759 0
 2793              		.cfi_startproc
 2794 0000 80B5     		push	{r7, lr}
 2795              		.cfi_def_cfa_offset 8
 2796              		.cfi_offset 7, -8
 2797              		.cfi_offset 14, -4
 2798 0002 82B0     		sub	sp, sp, #8
 2799              		.cfi_def_cfa_offset 16
 2800 0004 00AF     		add	r7, sp, #0
 2801              		.cfi_def_cfa_register 7
 2802 0006 7860     		str	r0, [r7, #4]
ARM GAS  C:\Users\IEUser\AppData\Local\Temp\cctak5Pf.s 			page 99


2760:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	return(CapSense_lowBaselineReset[sensor]);
 2803              		.loc 1 2760 0
 2804 0008 034A     		ldr	r2, .L170
 2805 000a 7B68     		ldr	r3, [r7, #4]
 2806 000c D318     		add	r3, r2, r3
 2807 000e 1B78     		ldrb	r3, [r3]
2761:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 2808              		.loc 1 2761 0
 2809 0010 181C     		mov	r0, r3
 2810 0012 BD46     		mov	sp, r7
 2811 0014 02B0     		add	sp, sp, #8
 2812              		@ sp needed
 2813 0016 80BD     		pop	{r7, pc}
 2814              	.L171:
 2815              		.align	2
 2816              	.L170:
 2817 0018 00000000 		.word	CapSense_lowBaselineReset
 2818              		.cfi_endproc
 2819              	.LFE68:
 2820              		.size	CapSense_GetLowBaselineReset, .-CapSense_GetLowBaselineReset
 2821              		.section	.text.CapSense_GetDebounce,"ax",%progbits
 2822              		.align	2
 2823              		.global	CapSense_GetDebounce
 2824              		.code	16
 2825              		.thumb_func
 2826              		.type	CapSense_GetDebounce, %function
 2827              	CapSense_GetDebounce:
 2828              	.LFB69:
2762:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2763:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
2764:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_GetDebounce
2765:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
2766:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
2767:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
2768:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns a debounce value.
2769:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
2770:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
2771:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor: sensor index. The value of index can be 
2772:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  from 0 to (CapSense_TOTAL_SENSOR_COUNT-1).
2773:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
2774:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
2775:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Debounce value 
2776:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
2777:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
2778:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_debounce[]  - stores the debounce value.
2779:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * 
2780:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
2781:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
2782:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
2783:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
2784:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_GetDebounce(uint32 widget)
2785:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 2829              		.loc 1 2785 0
 2830              		.cfi_startproc
 2831 0000 80B5     		push	{r7, lr}
 2832              		.cfi_def_cfa_offset 8
 2833              		.cfi_offset 7, -8
ARM GAS  C:\Users\IEUser\AppData\Local\Temp\cctak5Pf.s 			page 100


 2834              		.cfi_offset 14, -4
 2835 0002 82B0     		sub	sp, sp, #8
 2836              		.cfi_def_cfa_offset 16
 2837 0004 00AF     		add	r7, sp, #0
 2838              		.cfi_def_cfa_register 7
 2839 0006 7860     		str	r0, [r7, #4]
2786:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	return(CapSense_debounce[widget]);
 2840              		.loc 1 2786 0
 2841 0008 034A     		ldr	r2, .L174
 2842 000a 7B68     		ldr	r3, [r7, #4]
 2843 000c D318     		add	r3, r2, r3
 2844 000e 1B78     		ldrb	r3, [r3]
2787:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 2845              		.loc 1 2787 0
 2846 0010 181C     		mov	r0, r3
 2847 0012 BD46     		mov	sp, r7
 2848 0014 02B0     		add	sp, sp, #8
 2849              		@ sp needed
 2850 0016 80BD     		pop	{r7, pc}
 2851              	.L175:
 2852              		.align	2
 2853              	.L174:
 2854 0018 00000000 		.word	CapSense_debounce
 2855              		.cfi_endproc
 2856              	.LFE69:
 2857              		.size	CapSense_GetDebounce, .-CapSense_GetDebounce
 2858              		.section	.text.CapSense_EnableRawDataFilters,"ax",%progbits
 2859              		.align	2
 2860              		.global	CapSense_EnableRawDataFilters
 2861              		.code	16
 2862              		.thumb_func
 2863              		.type	CapSense_EnableRawDataFilters, %function
 2864              	CapSense_EnableRawDataFilters:
 2865              	.LFB70:
2788:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2789:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if (CapSense_RAW_FILTER_MASK != 0u)
2790:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	/*******************************************************************************
2791:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Function Name: CapSense_EnableRawDataFilters
2792:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	********************************************************************************
2793:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
2794:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Summary:
2795:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  Enables the rawdata filters for the sensor signals.
2796:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
2797:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Parameters:
2798:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
2799:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
2800:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Return:
2801:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
2802:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
2803:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Global Variables:
2804:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  CapSense_enableRawFilters defines if the filters are enabled or not.
2805:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
2806:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Side Effects:
2807:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
2808:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* 
2809:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*******************************************************************************/
2810:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	void CapSense_EnableRawDataFilters(void)
ARM GAS  C:\Users\IEUser\AppData\Local\Temp\cctak5Pf.s 			page 101


2811:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	{
 2866              		.loc 1 2811 0
 2867              		.cfi_startproc
 2868 0000 80B5     		push	{r7, lr}
 2869              		.cfi_def_cfa_offset 8
 2870              		.cfi_offset 7, -8
 2871              		.cfi_offset 14, -4
 2872 0002 00AF     		add	r7, sp, #0
 2873              		.cfi_def_cfa_register 7
2812:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		CapSense_enableRawFilters = CapSense_RAW_FILTERS_ENABLED;
 2874              		.loc 1 2812 0
 2875 0004 024B     		ldr	r3, .L177
 2876 0006 0122     		mov	r2, #1
 2877 0008 1A70     		strb	r2, [r3]
2813:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	}
 2878              		.loc 1 2813 0
 2879 000a BD46     		mov	sp, r7
 2880              		@ sp needed
 2881 000c 80BD     		pop	{r7, pc}
 2882              	.L178:
 2883 000e C046     		.align	2
 2884              	.L177:
 2885 0010 00000000 		.word	CapSense_enableRawFilters
 2886              		.cfi_endproc
 2887              	.LFE70:
 2888              		.size	CapSense_EnableRawDataFilters, .-CapSense_EnableRawDataFilters
 2889              		.section	.text.CapSense_DisableRawDataFilters,"ax",%progbits
 2890              		.align	2
 2891              		.global	CapSense_DisableRawDataFilters
 2892              		.code	16
 2893              		.thumb_func
 2894              		.type	CapSense_DisableRawDataFilters, %function
 2895              	CapSense_DisableRawDataFilters:
 2896              	.LFB71:
2814:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2815:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	/*******************************************************************************
2816:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Function Name: CapSense_DisableRawDataFilters
2817:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	********************************************************************************
2818:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
2819:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Summary:
2820:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  Disables the rawdata filters for the sensor signals.
2821:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
2822:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Parameters:
2823:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
2824:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
2825:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Return:
2826:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
2827:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
2828:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Global Variables:
2829:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  CapSense_enableRawFilters defines if the filters are enabled or not.
2830:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
2831:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Side Effects:
2832:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
2833:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* 
2834:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*******************************************************************************/
2835:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	void CapSense_DisableRawDataFilters(void)
2836:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	{
ARM GAS  C:\Users\IEUser\AppData\Local\Temp\cctak5Pf.s 			page 102


 2897              		.loc 1 2836 0
 2898              		.cfi_startproc
 2899 0000 80B5     		push	{r7, lr}
 2900              		.cfi_def_cfa_offset 8
 2901              		.cfi_offset 7, -8
 2902              		.cfi_offset 14, -4
 2903 0002 00AF     		add	r7, sp, #0
 2904              		.cfi_def_cfa_register 7
2837:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		CapSense_enableRawFilters = CapSense_RAW_FILTERS_DISABLED;
 2905              		.loc 1 2837 0
 2906 0004 024B     		ldr	r3, .L180
 2907 0006 0022     		mov	r2, #0
 2908 0008 1A70     		strb	r2, [r3]
2838:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	}
 2909              		.loc 1 2838 0
 2910 000a BD46     		mov	sp, r7
 2911              		@ sp needed
 2912 000c 80BD     		pop	{r7, pc}
 2913              	.L181:
 2914 000e C046     		.align	2
 2915              	.L180:
 2916 0010 00000000 		.word	CapSense_enableRawFilters
 2917              		.cfi_endproc
 2918              	.LFE71:
 2919              		.size	CapSense_DisableRawDataFilters, .-CapSense_DisableRawDataFilters
 2920              		.bss
 2921 001d 000000   		.align	2
 2922              	CapSense_debounceCounter.5354:
 2923 0020 00       		.space	1
 2924 0021 000000   		.align	2
 2925              	CapSense_centroid.5406:
 2926 0024 000000   		.space	3
 2927 0027 00       		.text
 2928              	.Letext0:
 2929              		.file 2 ".\\Generated_Source\\PSoC4\\cytypes.h"
 2930              		.file 3 ".\\Generated_Source\\PSoC4\\CapSense_PVT.h"
 2931              		.section	.debug_info,"",%progbits
 2932              	.Ldebug_info0:
 2933 0000 F90D0000 		.4byte	0xdf9
 2934 0004 0400     		.2byte	0x4
 2935 0006 00000000 		.4byte	.Ldebug_abbrev0
 2936 000a 04       		.byte	0x4
 2937 000b 01       		.uleb128 0x1
 2938 000c F5060000 		.4byte	.LASF137
 2939 0010 01       		.byte	0x1
 2940 0011 74050000 		.4byte	.LASF138
 2941 0015 B8010000 		.4byte	.LASF139
 2942 0019 00000000 		.4byte	.Ldebug_ranges0+0
 2943 001d 00000000 		.4byte	0
 2944 0021 00000000 		.4byte	.Ldebug_line0
 2945 0025 02       		.uleb128 0x2
 2946 0026 01       		.byte	0x1
 2947 0027 06       		.byte	0x6
 2948 0028 E4090000 		.4byte	.LASF0
 2949 002c 02       		.uleb128 0x2
 2950 002d 01       		.byte	0x1
 2951 002e 08       		.byte	0x8
ARM GAS  C:\Users\IEUser\AppData\Local\Temp\cctak5Pf.s 			page 103


 2952 002f 0B090000 		.4byte	.LASF1
 2953 0033 02       		.uleb128 0x2
 2954 0034 02       		.byte	0x2
 2955 0035 05       		.byte	0x5
 2956 0036 BB070000 		.4byte	.LASF2
 2957 003a 02       		.uleb128 0x2
 2958 003b 02       		.byte	0x2
 2959 003c 07       		.byte	0x7
 2960 003d F0090000 		.4byte	.LASF3
 2961 0041 02       		.uleb128 0x2
 2962 0042 04       		.byte	0x4
 2963 0043 05       		.byte	0x5
 2964 0044 C5070000 		.4byte	.LASF4
 2965 0048 02       		.uleb128 0x2
 2966 0049 04       		.byte	0x4
 2967 004a 07       		.byte	0x7
 2968 004b 72080000 		.4byte	.LASF5
 2969 004f 02       		.uleb128 0x2
 2970 0050 08       		.byte	0x8
 2971 0051 05       		.byte	0x5
 2972 0052 9D050000 		.4byte	.LASF6
 2973 0056 02       		.uleb128 0x2
 2974 0057 08       		.byte	0x8
 2975 0058 07       		.byte	0x7
 2976 0059 2E030000 		.4byte	.LASF7
 2977 005d 03       		.uleb128 0x3
 2978 005e 04       		.byte	0x4
 2979 005f 05       		.byte	0x5
 2980 0060 696E7400 		.ascii	"int\000"
 2981 0064 02       		.uleb128 0x2
 2982 0065 04       		.byte	0x4
 2983 0066 07       		.byte	0x7
 2984 0067 15010000 		.4byte	.LASF8
 2985 006b 04       		.uleb128 0x4
 2986 006c 800A0000 		.4byte	.LASF9
 2987 0070 02       		.byte	0x2
 2988 0071 B3       		.byte	0xb3
 2989 0072 2C000000 		.4byte	0x2c
 2990 0076 04       		.uleb128 0x4
 2991 0077 33050000 		.4byte	.LASF10
 2992 007b 02       		.byte	0x2
 2993 007c B4       		.byte	0xb4
 2994 007d 3A000000 		.4byte	0x3a
 2995 0081 04       		.uleb128 0x4
 2996 0082 98060000 		.4byte	.LASF11
 2997 0086 02       		.byte	0x2
 2998 0087 B5       		.byte	0xb5
 2999 0088 48000000 		.4byte	0x48
 3000 008c 04       		.uleb128 0x4
 3001 008d 3A010000 		.4byte	.LASF12
 3002 0091 02       		.byte	0x2
 3003 0092 B7       		.byte	0xb7
 3004 0093 33000000 		.4byte	0x33
 3005 0097 04       		.uleb128 0x4
 3006 0098 E9020000 		.4byte	.LASF13
 3007 009c 02       		.byte	0x2
 3008 009d B8       		.byte	0xb8
ARM GAS  C:\Users\IEUser\AppData\Local\Temp\cctak5Pf.s 			page 104


 3009 009e 41000000 		.4byte	0x41
 3010 00a2 02       		.uleb128 0x2
 3011 00a3 04       		.byte	0x4
 3012 00a4 04       		.byte	0x4
 3013 00a5 E3020000 		.4byte	.LASF14
 3014 00a9 02       		.uleb128 0x2
 3015 00aa 08       		.byte	0x8
 3016 00ab 04       		.byte	0x4
 3017 00ac 860A0000 		.4byte	.LASF15
 3018 00b0 02       		.uleb128 0x2
 3019 00b1 01       		.byte	0x1
 3020 00b2 08       		.byte	0x8
 3021 00b3 0B050000 		.4byte	.LASF16
 3022 00b7 02       		.uleb128 0x2
 3023 00b8 04       		.byte	0x4
 3024 00b9 07       		.byte	0x7
 3025 00ba 69080000 		.4byte	.LASF17
 3026 00be 05       		.uleb128 0x5
 3027 00bf 38       		.byte	0x38
 3028 00c0 03       		.byte	0x3
 3029 00c1 2F       		.byte	0x2f
 3030 00c2 6F010000 		.4byte	0x16f
 3031 00c6 06       		.uleb128 0x6
 3032 00c7 3F050000 		.4byte	.LASF18
 3033 00cb 03       		.byte	0x3
 3034 00cc 31       		.byte	0x31
 3035 00cd 6F010000 		.4byte	0x16f
 3036 00d1 00       		.byte	0
 3037 00d2 06       		.uleb128 0x6
 3038 00d3 AC070000 		.4byte	.LASF19
 3039 00d7 03       		.byte	0x3
 3040 00d8 32       		.byte	0x32
 3041 00d9 6F010000 		.4byte	0x16f
 3042 00dd 04       		.byte	0x4
 3043 00de 06       		.uleb128 0x6
 3044 00df 95090000 		.4byte	.LASF20
 3045 00e3 03       		.byte	0x3
 3046 00e4 33       		.byte	0x33
 3047 00e5 6F010000 		.4byte	0x16f
 3048 00e9 08       		.byte	0x8
 3049 00ea 06       		.uleb128 0x6
 3050 00eb FE080000 		.4byte	.LASF21
 3051 00ef 03       		.byte	0x3
 3052 00f0 34       		.byte	0x34
 3053 00f1 6F010000 		.4byte	0x16f
 3054 00f5 0C       		.byte	0xc
 3055 00f6 06       		.uleb128 0x6
 3056 00f7 DA090000 		.4byte	.LASF22
 3057 00fb 03       		.byte	0x3
 3058 00fc 35       		.byte	0x35
 3059 00fd 6F010000 		.4byte	0x16f
 3060 0101 10       		.byte	0x10
 3061 0102 06       		.uleb128 0x6
 3062 0103 F4070000 		.4byte	.LASF23
 3063 0107 03       		.byte	0x3
 3064 0108 36       		.byte	0x36
 3065 0109 75010000 		.4byte	0x175
ARM GAS  C:\Users\IEUser\AppData\Local\Temp\cctak5Pf.s 			page 105


 3066 010d 14       		.byte	0x14
 3067 010e 06       		.uleb128 0x6
 3068 010f F5020000 		.4byte	.LASF24
 3069 0113 03       		.byte	0x3
 3070 0114 37       		.byte	0x37
 3071 0115 80010000 		.4byte	0x180
 3072 0119 18       		.byte	0x18
 3073 011a 06       		.uleb128 0x6
 3074 011b 16020000 		.4byte	.LASF25
 3075 011f 03       		.byte	0x3
 3076 0120 38       		.byte	0x38
 3077 0121 75010000 		.4byte	0x175
 3078 0125 1C       		.byte	0x1c
 3079 0126 06       		.uleb128 0x6
 3080 0127 89000000 		.4byte	.LASF26
 3081 012b 03       		.byte	0x3
 3082 012c 39       		.byte	0x39
 3083 012d 75010000 		.4byte	0x175
 3084 0131 20       		.byte	0x20
 3085 0132 06       		.uleb128 0x6
 3086 0133 F5050000 		.4byte	.LASF27
 3087 0137 03       		.byte	0x3
 3088 0138 3A       		.byte	0x3a
 3089 0139 95010000 		.4byte	0x195
 3090 013d 24       		.byte	0x24
 3091 013e 06       		.uleb128 0x6
 3092 013f CD050000 		.4byte	.LASF28
 3093 0143 03       		.byte	0x3
 3094 0144 3B       		.byte	0x3b
 3095 0145 A6010000 		.4byte	0x1a6
 3096 0149 28       		.byte	0x28
 3097 014a 06       		.uleb128 0x6
 3098 014b 36040000 		.4byte	.LASF29
 3099 014f 03       		.byte	0x3
 3100 0150 3C       		.byte	0x3c
 3101 0151 95010000 		.4byte	0x195
 3102 0155 2C       		.byte	0x2c
 3103 0156 06       		.uleb128 0x6
 3104 0157 99000000 		.4byte	.LASF30
 3105 015b 03       		.byte	0x3
 3106 015c 3D       		.byte	0x3d
 3107 015d C0010000 		.4byte	0x1c0
 3108 0161 30       		.byte	0x30
 3109 0162 06       		.uleb128 0x6
 3110 0163 210A0000 		.4byte	.LASF31
 3111 0167 03       		.byte	0x3
 3112 0168 3E       		.byte	0x3e
 3113 0169 DB010000 		.4byte	0x1db
 3114 016d 34       		.byte	0x34
 3115 016e 00       		.byte	0
 3116 016f 07       		.uleb128 0x7
 3117 0170 04       		.byte	0x4
 3118 0171 6B000000 		.4byte	0x6b
 3119 0175 07       		.uleb128 0x7
 3120 0176 04       		.byte	0x4
 3121 0177 7B010000 		.4byte	0x17b
 3122 017b 08       		.uleb128 0x8
ARM GAS  C:\Users\IEUser\AppData\Local\Temp\cctak5Pf.s 			page 106


 3123 017c 6B000000 		.4byte	0x6b
 3124 0180 07       		.uleb128 0x7
 3125 0181 04       		.byte	0x4
 3126 0182 81000000 		.4byte	0x81
 3127 0186 09       		.uleb128 0x9
 3128 0187 76000000 		.4byte	0x76
 3129 018b 95010000 		.4byte	0x195
 3130 018f 0A       		.uleb128 0xa
 3131 0190 81000000 		.4byte	0x81
 3132 0194 00       		.byte	0
 3133 0195 07       		.uleb128 0x7
 3134 0196 04       		.byte	0x4
 3135 0197 86010000 		.4byte	0x186
 3136 019b 0B       		.uleb128 0xb
 3137 019c A6010000 		.4byte	0x1a6
 3138 01a0 0A       		.uleb128 0xa
 3139 01a1 81000000 		.4byte	0x81
 3140 01a5 00       		.byte	0
 3141 01a6 07       		.uleb128 0x7
 3142 01a7 04       		.byte	0x4
 3143 01a8 9B010000 		.4byte	0x19b
 3144 01ac 09       		.uleb128 0x9
 3145 01ad 81000000 		.4byte	0x81
 3146 01b1 C0010000 		.4byte	0x1c0
 3147 01b5 0A       		.uleb128 0xa
 3148 01b6 75010000 		.4byte	0x175
 3149 01ba 0A       		.uleb128 0xa
 3150 01bb 81000000 		.4byte	0x81
 3151 01bf 00       		.byte	0
 3152 01c0 07       		.uleb128 0x7
 3153 01c1 04       		.byte	0x4
 3154 01c2 AC010000 		.4byte	0x1ac
 3155 01c6 0B       		.uleb128 0xb
 3156 01c7 DB010000 		.4byte	0x1db
 3157 01cb 0A       		.uleb128 0xa
 3158 01cc 6F010000 		.4byte	0x16f
 3159 01d0 0A       		.uleb128 0xa
 3160 01d1 81000000 		.4byte	0x81
 3161 01d5 0A       		.uleb128 0xa
 3162 01d6 81000000 		.4byte	0x81
 3163 01da 00       		.byte	0
 3164 01db 07       		.uleb128 0x7
 3165 01dc 04       		.byte	0x4
 3166 01dd C6010000 		.4byte	0x1c6
 3167 01e1 04       		.uleb128 0x4
 3168 01e2 9C080000 		.4byte	.LASF32
 3169 01e6 03       		.byte	0x3
 3170 01e7 3F       		.byte	0x3f
 3171 01e8 BE000000 		.4byte	0xbe
 3172 01ec 05       		.uleb128 0x5
 3173 01ed 0C       		.byte	0xc
 3174 01ee 03       		.byte	0x3
 3175 01ef 41       		.byte	0x41
 3176 01f0 3D020000 		.4byte	0x23d
 3177 01f4 06       		.uleb128 0x6
 3178 01f5 CC040000 		.4byte	.LASF33
 3179 01f9 03       		.byte	0x3
ARM GAS  C:\Users\IEUser\AppData\Local\Temp\cctak5Pf.s 			page 107


 3180 01fa 43       		.byte	0x43
 3181 01fb 6B000000 		.4byte	0x6b
 3182 01ff 00       		.byte	0
 3183 0200 06       		.uleb128 0x6
 3184 0201 23020000 		.4byte	.LASF34
 3185 0205 03       		.byte	0x3
 3186 0206 44       		.byte	0x44
 3187 0207 6B000000 		.4byte	0x6b
 3188 020b 01       		.byte	0x1
 3189 020c 06       		.uleb128 0x6
 3190 020d 22010000 		.4byte	.LASF35
 3191 0211 03       		.byte	0x3
 3192 0212 45       		.byte	0x45
 3193 0213 6B000000 		.4byte	0x6b
 3194 0217 02       		.byte	0x2
 3195 0218 06       		.uleb128 0x6
 3196 0219 E5040000 		.4byte	.LASF36
 3197 021d 03       		.byte	0x3
 3198 021e 46       		.byte	0x46
 3199 021f 76000000 		.4byte	0x76
 3200 0223 04       		.byte	0x4
 3201 0224 06       		.uleb128 0x6
 3202 0225 86070000 		.4byte	.LASF37
 3203 0229 03       		.byte	0x3
 3204 022a 47       		.byte	0x47
 3205 022b 76000000 		.4byte	0x76
 3206 022f 06       		.byte	0x6
 3207 0230 06       		.uleb128 0x6
 3208 0231 84080000 		.4byte	.LASF38
 3209 0235 03       		.byte	0x3
 3210 0236 48       		.byte	0x48
 3211 0237 3D020000 		.4byte	0x23d
 3212 023b 08       		.byte	0x8
 3213 023c 00       		.byte	0
 3214 023d 07       		.uleb128 0x7
 3215 023e 04       		.byte	0x4
 3216 023f 43020000 		.4byte	0x243
 3217 0243 08       		.uleb128 0x8
 3218 0244 E1010000 		.4byte	0x1e1
 3219 0248 04       		.uleb128 0x4
 3220 0249 48000000 		.4byte	.LASF39
 3221 024d 03       		.byte	0x3
 3222 024e 49       		.byte	0x49
 3223 024f EC010000 		.4byte	0x1ec
 3224 0253 0C       		.uleb128 0xc
 3225 0254 1D060000 		.4byte	.LASF40
 3226 0258 01       		.byte	0x1
 3227 0259 8E       		.byte	0x8e
 3228 025a 00000000 		.4byte	.LFB33
 3229 025e 58000000 		.4byte	.LFE33-.LFB33
 3230 0262 01       		.uleb128 0x1
 3231 0263 9C       		.byte	0x9c
 3232 0264 77020000 		.4byte	0x277
 3233 0268 0D       		.uleb128 0xd
 3234 0269 DE040000 		.4byte	.LASF42
 3235 026d 01       		.byte	0x1
 3236 026e 8E       		.byte	0x8e
ARM GAS  C:\Users\IEUser\AppData\Local\Temp\cctak5Pf.s 			page 108


 3237 026f 81000000 		.4byte	0x81
 3238 0273 02       		.uleb128 0x2
 3239 0274 91       		.byte	0x91
 3240 0275 74       		.sleb128 -12
 3241 0276 00       		.byte	0
 3242 0277 0E       		.uleb128 0xe
 3243 0278 8E010000 		.4byte	.LASF41
 3244 027c 01       		.byte	0x1
 3245 027d D9       		.byte	0xd9
 3246 027e 00000000 		.4byte	.LFB34
 3247 0282 2A000000 		.4byte	.LFE34-.LFB34
 3248 0286 01       		.uleb128 0x1
 3249 0287 9C       		.byte	0x9c
 3250 0288 9B020000 		.4byte	0x29b
 3251 028c 0D       		.uleb128 0xd
 3252 028d DE040000 		.4byte	.LASF42
 3253 0291 01       		.byte	0x1
 3254 0292 D9       		.byte	0xd9
 3255 0293 81000000 		.4byte	0x81
 3256 0297 02       		.uleb128 0x2
 3257 0298 91       		.byte	0x91
 3258 0299 74       		.sleb128 -12
 3259 029a 00       		.byte	0
 3260 029b 0E       		.uleb128 0xe
 3261 029c 3F090000 		.4byte	.LASF43
 3262 02a0 01       		.byte	0x1
 3263 02a1 FE       		.byte	0xfe
 3264 02a2 00000000 		.4byte	.LFB35
 3265 02a6 26000000 		.4byte	.LFE35-.LFB35
 3266 02aa 01       		.uleb128 0x1
 3267 02ab 9C       		.byte	0x9c
 3268 02ac BE020000 		.4byte	0x2be
 3269 02b0 0F       		.uleb128 0xf
 3270 02b1 6900     		.ascii	"i\000"
 3271 02b3 01       		.byte	0x1
 3272 02b4 0001     		.2byte	0x100
 3273 02b6 81000000 		.4byte	0x81
 3274 02ba 02       		.uleb128 0x2
 3275 02bb 91       		.byte	0x91
 3276 02bc 74       		.sleb128 -12
 3277 02bd 00       		.byte	0
 3278 02be 10       		.uleb128 0x10
 3279 02bf 40010000 		.4byte	.LASF44
 3280 02c3 01       		.byte	0x1
 3281 02c4 2101     		.2byte	0x121
 3282 02c6 00000000 		.4byte	.LFB36
 3283 02ca 50000000 		.4byte	.LFE36-.LFB36
 3284 02ce 01       		.uleb128 0x1
 3285 02cf 9C       		.byte	0x9c
 3286 02d0 F1020000 		.4byte	0x2f1
 3287 02d4 0F       		.uleb128 0xf
 3288 02d5 6900     		.ascii	"i\000"
 3289 02d7 01       		.byte	0x1
 3290 02d8 2301     		.2byte	0x123
 3291 02da 81000000 		.4byte	0x81
 3292 02de 02       		.uleb128 0x2
 3293 02df 91       		.byte	0x91
ARM GAS  C:\Users\IEUser\AppData\Local\Temp\cctak5Pf.s 			page 109


 3294 02e0 74       		.sleb128 -12
 3295 02e1 11       		.uleb128 0x11
 3296 02e2 F8000000 		.4byte	.LASF45
 3297 02e6 01       		.byte	0x1
 3298 02e7 2401     		.2byte	0x124
 3299 02e9 81000000 		.4byte	0x81
 3300 02ed 02       		.uleb128 0x2
 3301 02ee 91       		.byte	0x91
 3302 02ef 70       		.sleb128 -16
 3303 02f0 00       		.byte	0
 3304 02f1 10       		.uleb128 0x10
 3305 02f2 66000000 		.4byte	.LASF46
 3306 02f6 01       		.byte	0x1
 3307 02f7 6201     		.2byte	0x162
 3308 02f9 00000000 		.4byte	.LFB37
 3309 02fd 28020000 		.4byte	.LFE37-.LFB37
 3310 0301 01       		.uleb128 0x1
 3311 0302 9C       		.byte	0x9c
 3312 0303 71030000 		.4byte	0x371
 3313 0307 12       		.uleb128 0x12
 3314 0308 DE040000 		.4byte	.LASF42
 3315 030c 01       		.byte	0x1
 3316 030d 6201     		.2byte	0x162
 3317 030f 81000000 		.4byte	0x81
 3318 0313 02       		.uleb128 0x2
 3319 0314 91       		.byte	0x91
 3320 0315 5C       		.sleb128 -36
 3321 0316 11       		.uleb128 0x11
 3322 0317 31040000 		.4byte	.LASF47
 3323 031b 01       		.byte	0x1
 3324 031c 6401     		.2byte	0x164
 3325 031e 81000000 		.4byte	0x81
 3326 0322 02       		.uleb128 0x2
 3327 0323 91       		.byte	0x91
 3328 0324 60       		.sleb128 -32
 3329 0325 11       		.uleb128 0x11
 3330 0326 25040000 		.4byte	.LASF48
 3331 032a 01       		.byte	0x1
 3332 032b 6501     		.2byte	0x165
 3333 032d 81000000 		.4byte	0x81
 3334 0331 02       		.uleb128 0x2
 3335 0332 91       		.byte	0x91
 3336 0333 6C       		.sleb128 -20
 3337 0334 11       		.uleb128 0x11
 3338 0335 460A0000 		.4byte	.LASF49
 3339 0339 01       		.byte	0x1
 3340 033a 6601     		.2byte	0x166
 3341 033c 76000000 		.4byte	0x76
 3342 0340 02       		.uleb128 0x2
 3343 0341 91       		.byte	0x91
 3344 0342 6A       		.sleb128 -22
 3345 0343 11       		.uleb128 0x11
 3346 0344 52040000 		.4byte	.LASF50
 3347 0348 01       		.byte	0x1
 3348 0349 6701     		.2byte	0x167
 3349 034b 76000000 		.4byte	0x76
 3350 034f 02       		.uleb128 0x2
ARM GAS  C:\Users\IEUser\AppData\Local\Temp\cctak5Pf.s 			page 110


 3351 0350 91       		.byte	0x91
 3352 0351 68       		.sleb128 -24
 3353 0352 11       		.uleb128 0x11
 3354 0353 5F030000 		.4byte	.LASF51
 3355 0357 01       		.byte	0x1
 3356 0358 6801     		.2byte	0x168
 3357 035a 6B000000 		.4byte	0x6b
 3358 035e 02       		.uleb128 0x2
 3359 035f 91       		.byte	0x91
 3360 0360 67       		.sleb128 -25
 3361 0361 11       		.uleb128 0x11
 3362 0362 8D080000 		.4byte	.LASF52
 3363 0366 01       		.byte	0x1
 3364 0367 6901     		.2byte	0x169
 3365 0369 6B000000 		.4byte	0x6b
 3366 036d 02       		.uleb128 0x2
 3367 036e 91       		.byte	0x91
 3368 036f 66       		.sleb128 -26
 3369 0370 00       		.byte	0
 3370 0371 10       		.uleb128 0x10
 3371 0372 FF050000 		.4byte	.LASF53
 3372 0376 01       		.byte	0x1
 3373 0377 2102     		.2byte	0x221
 3374 0379 00000000 		.4byte	.LFB38
 3375 037d 1E000000 		.4byte	.LFE38-.LFB38
 3376 0381 01       		.uleb128 0x1
 3377 0382 9C       		.byte	0x9c
 3378 0383 97030000 		.4byte	0x397
 3379 0387 12       		.uleb128 0x12
 3380 0388 DE040000 		.4byte	.LASF42
 3381 038c 01       		.byte	0x1
 3382 038d 2102     		.2byte	0x221
 3383 038f 81000000 		.4byte	0x81
 3384 0393 02       		.uleb128 0x2
 3385 0394 91       		.byte	0x91
 3386 0395 74       		.sleb128 -12
 3387 0396 00       		.byte	0
 3388 0397 10       		.uleb128 0x10
 3389 0398 BF000000 		.4byte	.LASF54
 3390 039c 01       		.byte	0x1
 3391 039d 5702     		.2byte	0x257
 3392 039f 00000000 		.4byte	.LFB39
 3393 03a3 40000000 		.4byte	.LFE39-.LFB39
 3394 03a7 01       		.uleb128 0x1
 3395 03a8 9C       		.byte	0x9c
 3396 03a9 CA030000 		.4byte	0x3ca
 3397 03ad 0F       		.uleb128 0xf
 3398 03ae 6900     		.ascii	"i\000"
 3399 03b0 01       		.byte	0x1
 3400 03b1 5902     		.2byte	0x259
 3401 03b3 81000000 		.4byte	0x81
 3402 03b7 02       		.uleb128 0x2
 3403 03b8 91       		.byte	0x91
 3404 03b9 74       		.sleb128 -12
 3405 03ba 11       		.uleb128 0x11
 3406 03bb F8000000 		.4byte	.LASF45
 3407 03bf 01       		.byte	0x1
ARM GAS  C:\Users\IEUser\AppData\Local\Temp\cctak5Pf.s 			page 111


 3408 03c0 5A02     		.2byte	0x25a
 3409 03c2 81000000 		.4byte	0x81
 3410 03c6 02       		.uleb128 0x2
 3411 03c7 91       		.byte	0x91
 3412 03c8 70       		.sleb128 -16
 3413 03c9 00       		.byte	0
 3414 03ca 10       		.uleb128 0x10
 3415 03cb B1020000 		.4byte	.LASF55
 3416 03cf 01       		.byte	0x1
 3417 03d0 8402     		.2byte	0x284
 3418 03d2 00000000 		.4byte	.LFB40
 3419 03d6 58000000 		.4byte	.LFE40-.LFB40
 3420 03da 01       		.uleb128 0x1
 3421 03db 9C       		.byte	0x9c
 3422 03dc 39040000 		.4byte	0x439
 3423 03e0 12       		.uleb128 0x12
 3424 03e1 5F030000 		.4byte	.LASF51
 3425 03e5 01       		.byte	0x1
 3426 03e6 8402     		.2byte	0x284
 3427 03e8 81000000 		.4byte	0x81
 3428 03ec 02       		.uleb128 0x2
 3429 03ed 91       		.byte	0x91
 3430 03ee 5C       		.sleb128 -36
 3431 03ef 11       		.uleb128 0x11
 3432 03f0 62040000 		.4byte	.LASF56
 3433 03f4 01       		.byte	0x1
 3434 03f5 8602     		.2byte	0x286
 3435 03f7 81000000 		.4byte	0x81
 3436 03fb 02       		.uleb128 0x2
 3437 03fc 91       		.byte	0x91
 3438 03fd 70       		.sleb128 -16
 3439 03fe 11       		.uleb128 0x11
 3440 03ff CE070000 		.4byte	.LASF57
 3441 0403 01       		.byte	0x1
 3442 0404 8702     		.2byte	0x287
 3443 0406 81000000 		.4byte	0x81
 3444 040a 02       		.uleb128 0x2
 3445 040b 91       		.byte	0x91
 3446 040c 6C       		.sleb128 -20
 3447 040d 11       		.uleb128 0x11
 3448 040e 7B070000 		.4byte	.LASF58
 3449 0412 01       		.byte	0x1
 3450 0413 8802     		.2byte	0x288
 3451 0415 81000000 		.4byte	0x81
 3452 0419 02       		.uleb128 0x2
 3453 041a 91       		.byte	0x91
 3454 041b 68       		.sleb128 -24
 3455 041c 0F       		.uleb128 0xf
 3456 041d 6900     		.ascii	"i\000"
 3457 041f 01       		.byte	0x1
 3458 0420 8902     		.2byte	0x289
 3459 0422 81000000 		.4byte	0x81
 3460 0426 02       		.uleb128 0x2
 3461 0427 91       		.byte	0x91
 3462 0428 74       		.sleb128 -12
 3463 0429 11       		.uleb128 0x11
 3464 042a F8000000 		.4byte	.LASF45
ARM GAS  C:\Users\IEUser\AppData\Local\Temp\cctak5Pf.s 			page 112


 3465 042e 01       		.byte	0x1
 3466 042f 8A02     		.2byte	0x28a
 3467 0431 81000000 		.4byte	0x81
 3468 0435 02       		.uleb128 0x2
 3469 0436 91       		.byte	0x91
 3470 0437 64       		.sleb128 -28
 3471 0438 00       		.byte	0
 3472 0439 13       		.uleb128 0x13
 3473 043a 5F090000 		.4byte	.LASF61
 3474 043e 01       		.byte	0x1
 3475 043f B502     		.2byte	0x2b5
 3476 0441 76000000 		.4byte	0x76
 3477 0445 00000000 		.4byte	.LFB41
 3478 0449 1C000000 		.4byte	.LFE41-.LFB41
 3479 044d 01       		.uleb128 0x1
 3480 044e 9C       		.byte	0x9c
 3481 044f 63040000 		.4byte	0x463
 3482 0453 12       		.uleb128 0x12
 3483 0454 DE040000 		.4byte	.LASF42
 3484 0458 01       		.byte	0x1
 3485 0459 B502     		.2byte	0x2b5
 3486 045b 81000000 		.4byte	0x81
 3487 045f 02       		.uleb128 0x2
 3488 0460 91       		.byte	0x91
 3489 0461 74       		.sleb128 -12
 3490 0462 00       		.byte	0
 3491 0463 14       		.uleb128 0x14
 3492 0464 FD010000 		.4byte	.LASF59
 3493 0468 01       		.byte	0x1
 3494 0469 D002     		.2byte	0x2d0
 3495 046b 00000000 		.4byte	.LFB42
 3496 046f 24000000 		.4byte	.LFE42-.LFB42
 3497 0473 01       		.uleb128 0x1
 3498 0474 9C       		.byte	0x9c
 3499 0475 98040000 		.4byte	0x498
 3500 0479 12       		.uleb128 0x12
 3501 047a DE040000 		.4byte	.LASF42
 3502 047e 01       		.byte	0x1
 3503 047f D002     		.2byte	0x2d0
 3504 0481 81000000 		.4byte	0x81
 3505 0485 02       		.uleb128 0x2
 3506 0486 91       		.byte	0x91
 3507 0487 74       		.sleb128 -12
 3508 0488 12       		.uleb128 0x12
 3509 0489 3A050000 		.4byte	.LASF60
 3510 048d 01       		.byte	0x1
 3511 048e D002     		.2byte	0x2d0
 3512 0490 76000000 		.4byte	0x76
 3513 0494 02       		.uleb128 0x2
 3514 0495 91       		.byte	0x91
 3515 0496 72       		.sleb128 -14
 3516 0497 00       		.byte	0
 3517 0498 13       		.uleb128 0x13
 3518 0499 0B040000 		.4byte	.LASF62
 3519 049d 01       		.byte	0x1
 3520 049e EB02     		.2byte	0x2eb
 3521 04a0 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\IEUser\AppData\Local\Temp\cctak5Pf.s 			page 113


 3522 04a4 00000000 		.4byte	.LFB43
 3523 04a8 1C000000 		.4byte	.LFE43-.LFB43
 3524 04ac 01       		.uleb128 0x1
 3525 04ad 9C       		.byte	0x9c
 3526 04ae C2040000 		.4byte	0x4c2
 3527 04b2 12       		.uleb128 0x12
 3528 04b3 DE040000 		.4byte	.LASF42
 3529 04b7 01       		.byte	0x1
 3530 04b8 EB02     		.2byte	0x2eb
 3531 04ba 81000000 		.4byte	0x81
 3532 04be 02       		.uleb128 0x2
 3533 04bf 91       		.byte	0x91
 3534 04c0 74       		.sleb128 -12
 3535 04c1 00       		.byte	0
 3536 04c2 14       		.uleb128 0x14
 3537 04c3 33020000 		.4byte	.LASF63
 3538 04c7 01       		.byte	0x1
 3539 04c8 0603     		.2byte	0x306
 3540 04ca 00000000 		.4byte	.LFB44
 3541 04ce 24000000 		.4byte	.LFE44-.LFB44
 3542 04d2 01       		.uleb128 0x1
 3543 04d3 9C       		.byte	0x9c
 3544 04d4 F7040000 		.4byte	0x4f7
 3545 04d8 12       		.uleb128 0x12
 3546 04d9 DE040000 		.4byte	.LASF42
 3547 04dd 01       		.byte	0x1
 3548 04de 0603     		.2byte	0x306
 3549 04e0 81000000 		.4byte	0x81
 3550 04e4 02       		.uleb128 0x2
 3551 04e5 91       		.byte	0x91
 3552 04e6 74       		.sleb128 -12
 3553 04e7 12       		.uleb128 0x12
 3554 04e8 E8030000 		.4byte	.LASF64
 3555 04ec 01       		.byte	0x1
 3556 04ed 0603     		.2byte	0x306
 3557 04ef 6B000000 		.4byte	0x6b
 3558 04f3 02       		.uleb128 0x2
 3559 04f4 91       		.byte	0x91
 3560 04f5 73       		.sleb128 -13
 3561 04f6 00       		.byte	0
 3562 04f7 13       		.uleb128 0x13
 3563 04f8 D9060000 		.4byte	.LASF65
 3564 04fc 01       		.byte	0x1
 3565 04fd 2103     		.2byte	0x321
 3566 04ff 6B000000 		.4byte	0x6b
 3567 0503 00000000 		.4byte	.LFB45
 3568 0507 1C000000 		.4byte	.LFE45-.LFB45
 3569 050b 01       		.uleb128 0x1
 3570 050c 9C       		.byte	0x9c
 3571 050d 21050000 		.4byte	0x521
 3572 0511 12       		.uleb128 0x12
 3573 0512 5F030000 		.4byte	.LASF51
 3574 0516 01       		.byte	0x1
 3575 0517 2103     		.2byte	0x321
 3576 0519 81000000 		.4byte	0x81
 3577 051d 02       		.uleb128 0x2
 3578 051e 91       		.byte	0x91
ARM GAS  C:\Users\IEUser\AppData\Local\Temp\cctak5Pf.s 			page 114


 3579 051f 74       		.sleb128 -12
 3580 0520 00       		.byte	0
 3581 0521 13       		.uleb128 0x13
 3582 0522 13030000 		.4byte	.LASF66
 3583 0526 01       		.byte	0x1
 3584 0527 3C03     		.2byte	0x33c
 3585 0529 6B000000 		.4byte	0x6b
 3586 052d 00000000 		.4byte	.LFB46
 3587 0531 1C000000 		.4byte	.LFE46-.LFB46
 3588 0535 01       		.uleb128 0x1
 3589 0536 9C       		.byte	0x9c
 3590 0537 4B050000 		.4byte	0x54b
 3591 053b 12       		.uleb128 0x12
 3592 053c 5F030000 		.4byte	.LASF51
 3593 0540 01       		.byte	0x1
 3594 0541 3C03     		.2byte	0x33c
 3595 0543 81000000 		.4byte	0x81
 3596 0547 02       		.uleb128 0x2
 3597 0548 91       		.byte	0x91
 3598 0549 74       		.sleb128 -12
 3599 054a 00       		.byte	0
 3600 054b 13       		.uleb128 0x13
 3601 054c EE030000 		.4byte	.LASF67
 3602 0550 01       		.byte	0x1
 3603 0551 5803     		.2byte	0x358
 3604 0553 6B000000 		.4byte	0x6b
 3605 0557 00000000 		.4byte	.LFB47
 3606 055b 1C000000 		.4byte	.LFE47-.LFB47
 3607 055f 01       		.uleb128 0x1
 3608 0560 9C       		.byte	0x9c
 3609 0561 75050000 		.4byte	0x575
 3610 0565 12       		.uleb128 0x12
 3611 0566 5F030000 		.4byte	.LASF51
 3612 056a 01       		.byte	0x1
 3613 056b 5803     		.2byte	0x358
 3614 056d 81000000 		.4byte	0x81
 3615 0571 02       		.uleb128 0x2
 3616 0572 91       		.byte	0x91
 3617 0573 74       		.sleb128 -12
 3618 0574 00       		.byte	0
 3619 0575 13       		.uleb128 0x13
 3620 0576 10050000 		.4byte	.LASF68
 3621 057a 01       		.byte	0x1
 3622 057b 7403     		.2byte	0x374
 3623 057d 6B000000 		.4byte	0x6b
 3624 0581 00000000 		.4byte	.LFB48
 3625 0585 1C000000 		.4byte	.LFE48-.LFB48
 3626 0589 01       		.uleb128 0x1
 3627 058a 9C       		.byte	0x9c
 3628 058b 9F050000 		.4byte	0x59f
 3629 058f 12       		.uleb128 0x12
 3630 0590 5F030000 		.4byte	.LASF51
 3631 0594 01       		.byte	0x1
 3632 0595 7403     		.2byte	0x374
 3633 0597 81000000 		.4byte	0x81
 3634 059b 02       		.uleb128 0x2
 3635 059c 91       		.byte	0x91
ARM GAS  C:\Users\IEUser\AppData\Local\Temp\cctak5Pf.s 			page 115


 3636 059d 74       		.sleb128 -12
 3637 059e 00       		.byte	0
 3638 059f 14       		.uleb128 0x14
 3639 05a0 AD030000 		.4byte	.LASF69
 3640 05a4 01       		.byte	0x1
 3641 05a5 9503     		.2byte	0x395
 3642 05a7 00000000 		.4byte	.LFB49
 3643 05ab 24000000 		.4byte	.LFE49-.LFB49
 3644 05af 01       		.uleb128 0x1
 3645 05b0 9C       		.byte	0x9c
 3646 05b1 D4050000 		.4byte	0x5d4
 3647 05b5 12       		.uleb128 0x12
 3648 05b6 5F030000 		.4byte	.LASF51
 3649 05ba 01       		.byte	0x1
 3650 05bb 9503     		.2byte	0x395
 3651 05bd 81000000 		.4byte	0x81
 3652 05c1 02       		.uleb128 0x2
 3653 05c2 91       		.byte	0x91
 3654 05c3 74       		.sleb128 -12
 3655 05c4 12       		.uleb128 0x12
 3656 05c5 E8030000 		.4byte	.LASF64
 3657 05c9 01       		.byte	0x1
 3658 05ca 9503     		.2byte	0x395
 3659 05cc 6B000000 		.4byte	0x6b
 3660 05d0 02       		.uleb128 0x2
 3661 05d1 91       		.byte	0x91
 3662 05d2 73       		.sleb128 -13
 3663 05d3 00       		.byte	0
 3664 05d4 14       		.uleb128 0x14
 3665 05d5 96020000 		.4byte	.LASF70
 3666 05d9 01       		.byte	0x1
 3667 05da B103     		.2byte	0x3b1
 3668 05dc 00000000 		.4byte	.LFB50
 3669 05e0 24000000 		.4byte	.LFE50-.LFB50
 3670 05e4 01       		.uleb128 0x1
 3671 05e5 9C       		.byte	0x9c
 3672 05e6 09060000 		.4byte	0x609
 3673 05ea 12       		.uleb128 0x12
 3674 05eb 5F030000 		.4byte	.LASF51
 3675 05ef 01       		.byte	0x1
 3676 05f0 B103     		.2byte	0x3b1
 3677 05f2 81000000 		.4byte	0x81
 3678 05f6 02       		.uleb128 0x2
 3679 05f7 91       		.byte	0x91
 3680 05f8 74       		.sleb128 -12
 3681 05f9 12       		.uleb128 0x12
 3682 05fa E8030000 		.4byte	.LASF64
 3683 05fe 01       		.byte	0x1
 3684 05ff B103     		.2byte	0x3b1
 3685 0601 6B000000 		.4byte	0x6b
 3686 0605 02       		.uleb128 0x2
 3687 0606 91       		.byte	0x91
 3688 0607 73       		.sleb128 -13
 3689 0608 00       		.byte	0
 3690 0609 14       		.uleb128 0x14
 3691 060a BC060000 		.4byte	.LASF71
 3692 060e 01       		.byte	0x1
ARM GAS  C:\Users\IEUser\AppData\Local\Temp\cctak5Pf.s 			page 116


 3693 060f CD03     		.2byte	0x3cd
 3694 0611 00000000 		.4byte	.LFB51
 3695 0615 24000000 		.4byte	.LFE51-.LFB51
 3696 0619 01       		.uleb128 0x1
 3697 061a 9C       		.byte	0x9c
 3698 061b 3E060000 		.4byte	0x63e
 3699 061f 12       		.uleb128 0x12
 3700 0620 5F030000 		.4byte	.LASF51
 3701 0624 01       		.byte	0x1
 3702 0625 CD03     		.2byte	0x3cd
 3703 0627 81000000 		.4byte	0x81
 3704 062b 02       		.uleb128 0x2
 3705 062c 91       		.byte	0x91
 3706 062d 74       		.sleb128 -12
 3707 062e 12       		.uleb128 0x12
 3708 062f E8030000 		.4byte	.LASF64
 3709 0633 01       		.byte	0x1
 3710 0634 CD03     		.2byte	0x3cd
 3711 0636 6B000000 		.4byte	0x6b
 3712 063a 02       		.uleb128 0x2
 3713 063b 91       		.byte	0x91
 3714 063c 73       		.sleb128 -13
 3715 063d 00       		.byte	0
 3716 063e 14       		.uleb128 0x14
 3717 063f 75060000 		.4byte	.LASF72
 3718 0643 01       		.byte	0x1
 3719 0644 EA03     		.2byte	0x3ea
 3720 0646 00000000 		.4byte	.LFB52
 3721 064a 24000000 		.4byte	.LFE52-.LFB52
 3722 064e 01       		.uleb128 0x1
 3723 064f 9C       		.byte	0x9c
 3724 0650 73060000 		.4byte	0x673
 3725 0654 12       		.uleb128 0x12
 3726 0655 5F030000 		.4byte	.LASF51
 3727 0659 01       		.byte	0x1
 3728 065a EA03     		.2byte	0x3ea
 3729 065c 81000000 		.4byte	0x81
 3730 0660 02       		.uleb128 0x2
 3731 0661 91       		.byte	0x91
 3732 0662 74       		.sleb128 -12
 3733 0663 12       		.uleb128 0x12
 3734 0664 E8030000 		.4byte	.LASF64
 3735 0668 01       		.byte	0x1
 3736 0669 EA03     		.2byte	0x3ea
 3737 066b 6B000000 		.4byte	0x6b
 3738 066f 02       		.uleb128 0x2
 3739 0670 91       		.byte	0x91
 3740 0671 73       		.sleb128 -13
 3741 0672 00       		.byte	0
 3742 0673 14       		.uleb128 0x14
 3743 0674 D9080000 		.4byte	.LASF73
 3744 0678 01       		.byte	0x1
 3745 0679 0604     		.2byte	0x406
 3746 067b 00000000 		.4byte	.LFB53
 3747 067f 24000000 		.4byte	.LFE53-.LFB53
 3748 0683 01       		.uleb128 0x1
 3749 0684 9C       		.byte	0x9c
ARM GAS  C:\Users\IEUser\AppData\Local\Temp\cctak5Pf.s 			page 117


 3750 0685 A8060000 		.4byte	0x6a8
 3751 0689 12       		.uleb128 0x12
 3752 068a 5F030000 		.4byte	.LASF51
 3753 068e 01       		.byte	0x1
 3754 068f 0604     		.2byte	0x406
 3755 0691 81000000 		.4byte	0x81
 3756 0695 02       		.uleb128 0x2
 3757 0696 91       		.byte	0x91
 3758 0697 74       		.sleb128 -12
 3759 0698 12       		.uleb128 0x12
 3760 0699 E8030000 		.4byte	.LASF64
 3761 069d 01       		.byte	0x1
 3762 069e 0604     		.2byte	0x406
 3763 06a0 6B000000 		.4byte	0x6b
 3764 06a4 02       		.uleb128 0x2
 3765 06a5 91       		.byte	0x91
 3766 06a6 73       		.sleb128 -13
 3767 06a7 00       		.byte	0
 3768 06a8 14       		.uleb128 0x14
 3769 06a9 78090000 		.4byte	.LASF74
 3770 06ad 01       		.byte	0x1
 3771 06ae 2204     		.2byte	0x422
 3772 06b0 00000000 		.4byte	.LFB54
 3773 06b4 24000000 		.4byte	.LFE54-.LFB54
 3774 06b8 01       		.uleb128 0x1
 3775 06b9 9C       		.byte	0x9c
 3776 06ba DD060000 		.4byte	0x6dd
 3777 06be 12       		.uleb128 0x12
 3778 06bf DE040000 		.4byte	.LASF42
 3779 06c3 01       		.byte	0x1
 3780 06c4 2204     		.2byte	0x422
 3781 06c6 81000000 		.4byte	0x81
 3782 06ca 02       		.uleb128 0x2
 3783 06cb 91       		.byte	0x91
 3784 06cc 74       		.sleb128 -12
 3785 06cd 12       		.uleb128 0x12
 3786 06ce E8030000 		.4byte	.LASF64
 3787 06d2 01       		.byte	0x1
 3788 06d3 2204     		.2byte	0x422
 3789 06d5 6B000000 		.4byte	0x6b
 3790 06d9 02       		.uleb128 0x2
 3791 06da 91       		.byte	0x91
 3792 06db 73       		.sleb128 -13
 3793 06dc 00       		.byte	0
 3794 06dd 15       		.uleb128 0x15
 3795 06de D8050000 		.4byte	.LASF75
 3796 06e2 01       		.byte	0x1
 3797 06e3 5004     		.2byte	0x450
 3798 06e5 81000000 		.4byte	0x81
 3799 06e9 00000000 		.4byte	.LFB55
 3800 06ed 40010000 		.4byte	.LFE55-.LFB55
 3801 06f1 01       		.uleb128 0x1
 3802 06f2 9C       		.byte	0x9c
 3803 06f3 64070000 		.4byte	0x764
 3804 06f7 12       		.uleb128 0x12
 3805 06f8 DE040000 		.4byte	.LASF42
 3806 06fc 01       		.byte	0x1
ARM GAS  C:\Users\IEUser\AppData\Local\Temp\cctak5Pf.s 			page 118


 3807 06fd 5004     		.2byte	0x450
 3808 06ff 81000000 		.4byte	0x81
 3809 0703 02       		.uleb128 0x2
 3810 0704 91       		.byte	0x91
 3811 0705 6C       		.sleb128 -20
 3812 0706 11       		.uleb128 0x11
 3813 0707 5F030000 		.4byte	.LASF51
 3814 070b 01       		.byte	0x1
 3815 070c 5204     		.2byte	0x452
 3816 070e 6B000000 		.4byte	0x6b
 3817 0712 02       		.uleb128 0x2
 3818 0713 91       		.byte	0x91
 3819 0714 77       		.sleb128 -9
 3820 0715 11       		.uleb128 0x11
 3821 0716 C4050000 		.4byte	.LASF76
 3822 071a 01       		.byte	0x1
 3823 071b 5304     		.2byte	0x453
 3824 071d 6B000000 		.4byte	0x6b
 3825 0721 02       		.uleb128 0x2
 3826 0722 91       		.byte	0x91
 3827 0723 74       		.sleb128 -12
 3828 0724 11       		.uleb128 0x11
 3829 0725 31090000 		.4byte	.LASF77
 3830 0729 01       		.byte	0x1
 3831 072a 5404     		.2byte	0x454
 3832 072c 6B000000 		.4byte	0x6b
 3833 0730 02       		.uleb128 0x2
 3834 0731 91       		.byte	0x91
 3835 0732 73       		.sleb128 -13
 3836 0733 11       		.uleb128 0x11
 3837 0734 EE080000 		.4byte	.LASF78
 3838 0738 01       		.byte	0x1
 3839 0739 5604     		.2byte	0x456
 3840 073b 6B000000 		.4byte	0x6b
 3841 073f 02       		.uleb128 0x2
 3842 0740 91       		.byte	0x91
 3843 0741 76       		.sleb128 -10
 3844 0742 11       		.uleb128 0x11
 3845 0743 47040000 		.4byte	.LASF79
 3846 0747 01       		.byte	0x1
 3847 0748 5704     		.2byte	0x457
 3848 074a 6B000000 		.4byte	0x6b
 3849 074e 02       		.uleb128 0x2
 3850 074f 91       		.byte	0x91
 3851 0750 75       		.sleb128 -11
 3852 0751 11       		.uleb128 0x11
 3853 0752 2F000000 		.4byte	.LASF80
 3854 0756 01       		.byte	0x1
 3855 0757 5804     		.2byte	0x458
 3856 0759 64070000 		.4byte	0x764
 3857 075d 05       		.uleb128 0x5
 3858 075e 03       		.byte	0x3
 3859 075f 20000000 		.4byte	CapSense_debounceCounter.5354
 3860 0763 00       		.byte	0
 3861 0764 16       		.uleb128 0x16
 3862 0765 6B000000 		.4byte	0x6b
 3863 0769 74070000 		.4byte	0x774
ARM GAS  C:\Users\IEUser\AppData\Local\Temp\cctak5Pf.s 			page 119


 3864 076d 17       		.uleb128 0x17
 3865 076e B7000000 		.4byte	0xb7
 3866 0772 00       		.byte	0
 3867 0773 00       		.byte	0
 3868 0774 15       		.uleb128 0x15
 3869 0775 630A0000 		.4byte	.LASF81
 3870 0779 01       		.byte	0x1
 3871 077a A704     		.2byte	0x4a7
 3872 077c 81000000 		.4byte	0x81
 3873 0780 00000000 		.4byte	.LFB56
 3874 0784 44000000 		.4byte	.LFE56-.LFB56
 3875 0788 01       		.uleb128 0x1
 3876 0789 9C       		.byte	0x9c
 3877 078a CB070000 		.4byte	0x7cb
 3878 078e 12       		.uleb128 0x12
 3879 078f 5F030000 		.4byte	.LASF51
 3880 0793 01       		.byte	0x1
 3881 0794 A704     		.2byte	0x4a7
 3882 0796 81000000 		.4byte	0x81
 3883 079a 02       		.uleb128 0x2
 3884 079b 91       		.byte	0x91
 3885 079c 64       		.sleb128 -28
 3886 079d 11       		.uleb128 0x11
 3887 079e 59050000 		.4byte	.LASF82
 3888 07a2 01       		.byte	0x1
 3889 07a3 A904     		.2byte	0x4a9
 3890 07a5 81000000 		.4byte	0x81
 3891 07a9 02       		.uleb128 0x2
 3892 07aa 91       		.byte	0x91
 3893 07ab 74       		.sleb128 -12
 3894 07ac 11       		.uleb128 0x11
 3895 07ad 08010000 		.4byte	.LASF83
 3896 07b1 01       		.byte	0x1
 3897 07b2 AA04     		.2byte	0x4aa
 3898 07b4 81000000 		.4byte	0x81
 3899 07b8 02       		.uleb128 0x2
 3900 07b9 91       		.byte	0x91
 3901 07ba 6C       		.sleb128 -20
 3902 07bb 11       		.uleb128 0x11
 3903 07bc BA090000 		.4byte	.LASF84
 3904 07c0 01       		.byte	0x1
 3905 07c1 AB04     		.2byte	0x4ab
 3906 07c3 81000000 		.4byte	0x81
 3907 07c7 02       		.uleb128 0x2
 3908 07c8 91       		.byte	0x91
 3909 07c9 70       		.sleb128 -16
 3910 07ca 00       		.byte	0
 3911 07cb 15       		.uleb128 0x15
 3912 07cc 73040000 		.4byte	.LASF85
 3913 07d0 01       		.byte	0x1
 3914 07d1 D504     		.2byte	0x4d5
 3915 07d3 81000000 		.4byte	0x81
 3916 07d7 00000000 		.4byte	.LFB57
 3917 07db 38000000 		.4byte	.LFE57-.LFB57
 3918 07df 01       		.uleb128 0x1
 3919 07e0 9C       		.byte	0x9c
 3920 07e1 02080000 		.4byte	0x802
ARM GAS  C:\Users\IEUser\AppData\Local\Temp\cctak5Pf.s 			page 120


 3921 07e5 0F       		.uleb128 0xf
 3922 07e6 6900     		.ascii	"i\000"
 3923 07e8 01       		.byte	0x1
 3924 07e9 D804     		.2byte	0x4d8
 3925 07eb 81000000 		.4byte	0x81
 3926 07ef 02       		.uleb128 0x2
 3927 07f0 91       		.byte	0x91
 3928 07f1 74       		.sleb128 -12
 3929 07f2 11       		.uleb128 0x11
 3930 07f3 BA090000 		.4byte	.LASF84
 3931 07f7 01       		.byte	0x1
 3932 07f8 D904     		.2byte	0x4d9
 3933 07fa 81000000 		.4byte	0x81
 3934 07fe 02       		.uleb128 0x2
 3935 07ff 91       		.byte	0x91
 3936 0800 70       		.sleb128 -16
 3937 0801 00       		.byte	0
 3938 0802 10       		.uleb128 0x10
 3939 0803 F5040000 		.4byte	.LASF86
 3940 0807 01       		.byte	0x1
 3941 0808 0405     		.2byte	0x504
 3942 080a 00000000 		.4byte	.LFB58
 3943 080e 5C000000 		.4byte	.LFE58-.LFB58
 3944 0812 01       		.uleb128 0x1
 3945 0813 9C       		.byte	0x9c
 3946 0814 46080000 		.4byte	0x846
 3947 0818 12       		.uleb128 0x12
 3948 0819 5F030000 		.4byte	.LASF51
 3949 081d 01       		.byte	0x1
 3950 081e 0405     		.2byte	0x504
 3951 0820 81000000 		.4byte	0x81
 3952 0824 02       		.uleb128 0x2
 3953 0825 91       		.byte	0x91
 3954 0826 6C       		.sleb128 -20
 3955 0827 11       		.uleb128 0x11
 3956 0828 59050000 		.4byte	.LASF82
 3957 082c 01       		.byte	0x1
 3958 082d 0705     		.2byte	0x507
 3959 082f 6B000000 		.4byte	0x6b
 3960 0833 02       		.uleb128 0x2
 3961 0834 91       		.byte	0x91
 3962 0835 77       		.sleb128 -9
 3963 0836 11       		.uleb128 0x11
 3964 0837 08010000 		.4byte	.LASF83
 3965 083b 01       		.byte	0x1
 3966 083c 0805     		.2byte	0x508
 3967 083e 6B000000 		.4byte	0x6b
 3968 0842 02       		.uleb128 0x2
 3969 0843 91       		.byte	0x91
 3970 0844 76       		.sleb128 -10
 3971 0845 00       		.byte	0
 3972 0846 10       		.uleb128 0x10
 3973 0847 A8000000 		.4byte	.LASF87
 3974 084b 01       		.byte	0x1
 3975 084c 2F05     		.2byte	0x52f
 3976 084e 00000000 		.4byte	.LFB59
 3977 0852 5C000000 		.4byte	.LFE59-.LFB59
ARM GAS  C:\Users\IEUser\AppData\Local\Temp\cctak5Pf.s 			page 121


 3978 0856 01       		.uleb128 0x1
 3979 0857 9C       		.byte	0x9c
 3980 0858 8A080000 		.4byte	0x88a
 3981 085c 12       		.uleb128 0x12
 3982 085d 5F030000 		.4byte	.LASF51
 3983 0861 01       		.byte	0x1
 3984 0862 2F05     		.2byte	0x52f
 3985 0864 81000000 		.4byte	0x81
 3986 0868 02       		.uleb128 0x2
 3987 0869 91       		.byte	0x91
 3988 086a 6C       		.sleb128 -20
 3989 086b 11       		.uleb128 0x11
 3990 086c 59050000 		.4byte	.LASF82
 3991 0870 01       		.byte	0x1
 3992 0871 3105     		.2byte	0x531
 3993 0873 6B000000 		.4byte	0x6b
 3994 0877 02       		.uleb128 0x2
 3995 0878 91       		.byte	0x91
 3996 0879 77       		.sleb128 -9
 3997 087a 11       		.uleb128 0x11
 3998 087b 08010000 		.4byte	.LASF83
 3999 087f 01       		.byte	0x1
 4000 0880 3205     		.2byte	0x532
 4001 0882 6B000000 		.4byte	0x6b
 4002 0886 02       		.uleb128 0x2
 4003 0887 91       		.byte	0x91
 4004 0888 76       		.sleb128 -10
 4005 0889 00       		.byte	0
 4006 088a 13       		.uleb128 0x13
 4007 088b DF070000 		.4byte	.LASF88
 4008 088f 01       		.byte	0x1
 4009 0890 6105     		.2byte	0x561
 4010 0892 6B000000 		.4byte	0x6b
 4011 0896 00000000 		.4byte	.LFB60
 4012 089a AC000000 		.4byte	.LFE60-.LFB60
 4013 089e 01       		.uleb128 0x1
 4014 089f 9C       		.byte	0x9c
 4015 08a0 0C090000 		.4byte	0x90c
 4016 08a4 12       		.uleb128 0x12
 4017 08a5 2A040000 		.4byte	.LASF89
 4018 08a9 01       		.byte	0x1
 4019 08aa 6105     		.2byte	0x561
 4020 08ac 6B000000 		.4byte	0x6b
 4021 08b0 02       		.uleb128 0x2
 4022 08b1 91       		.byte	0x91
 4023 08b2 6F       		.sleb128 -17
 4024 08b3 12       		.uleb128 0x12
 4025 08b4 EF020000 		.4byte	.LASF90
 4026 08b8 01       		.byte	0x1
 4027 08b9 6105     		.2byte	0x561
 4028 08bb 6B000000 		.4byte	0x6b
 4029 08bf 02       		.uleb128 0x2
 4030 08c0 91       		.byte	0x91
 4031 08c1 6E       		.sleb128 -18
 4032 08c2 12       		.uleb128 0x12
 4033 08c3 EE080000 		.4byte	.LASF78
 4034 08c7 01       		.byte	0x1
ARM GAS  C:\Users\IEUser\AppData\Local\Temp\cctak5Pf.s 			page 122


 4035 08c8 6105     		.2byte	0x561
 4036 08ca 6B000000 		.4byte	0x6b
 4037 08ce 02       		.uleb128 0x2
 4038 08cf 91       		.byte	0x91
 4039 08d0 6D       		.sleb128 -19
 4040 08d1 0F       		.uleb128 0xf
 4041 08d2 6900     		.ascii	"i\000"
 4042 08d4 01       		.byte	0x1
 4043 08d5 6405     		.2byte	0x564
 4044 08d7 6B000000 		.4byte	0x6b
 4045 08db 02       		.uleb128 0x2
 4046 08dc 91       		.byte	0x91
 4047 08dd 77       		.sleb128 -9
 4048 08de 11       		.uleb128 0x11
 4049 08df 61080000 		.4byte	.LASF91
 4050 08e3 01       		.byte	0x1
 4051 08e4 6E05     		.2byte	0x56e
 4052 08e6 6B000000 		.4byte	0x6b
 4053 08ea 02       		.uleb128 0x2
 4054 08eb 91       		.byte	0x91
 4055 08ec 76       		.sleb128 -10
 4056 08ed 11       		.uleb128 0x11
 4057 08ee DA070000 		.4byte	.LASF92
 4058 08f2 01       		.byte	0x1
 4059 08f3 7005     		.2byte	0x570
 4060 08f5 6B000000 		.4byte	0x6b
 4061 08f9 02       		.uleb128 0x2
 4062 08fa 91       		.byte	0x91
 4063 08fb 75       		.sleb128 -11
 4064 08fc 11       		.uleb128 0x11
 4065 08fd AE060000 		.4byte	.LASF93
 4066 0901 01       		.byte	0x1
 4067 0902 7105     		.2byte	0x571
 4068 0904 6F010000 		.4byte	0x16f
 4069 0908 02       		.uleb128 0x2
 4070 0909 91       		.byte	0x91
 4071 090a 70       		.sleb128 -16
 4072 090b 00       		.byte	0
 4073 090c 15       		.uleb128 0x15
 4074 090d 2F060000 		.4byte	.LASF94
 4075 0911 01       		.byte	0x1
 4076 0912 0006     		.2byte	0x600
 4077 0914 6B000000 		.4byte	0x6b
 4078 0918 00000000 		.4byte	.LFB61
 4079 091c 94010000 		.4byte	.LFE61-.LFB61
 4080 0920 01       		.uleb128 0x1
 4081 0921 9C       		.byte	0x9c
 4082 0922 DE090000 		.4byte	0x9de
 4083 0926 12       		.uleb128 0x12
 4084 0927 61080000 		.4byte	.LASF91
 4085 092b 01       		.byte	0x1
 4086 092c 0006     		.2byte	0x600
 4087 092e 6B000000 		.4byte	0x6b
 4088 0932 02       		.uleb128 0x2
 4089 0933 91       		.byte	0x91
 4090 0934 57       		.sleb128 -41
 4091 0935 12       		.uleb128 0x12
ARM GAS  C:\Users\IEUser\AppData\Local\Temp\cctak5Pf.s 			page 123


 4092 0936 2A040000 		.4byte	.LASF89
 4093 093a 01       		.byte	0x1
 4094 093b 0006     		.2byte	0x600
 4095 093d 6B000000 		.4byte	0x6b
 4096 0941 02       		.uleb128 0x2
 4097 0942 91       		.byte	0x91
 4098 0943 56       		.sleb128 -42
 4099 0944 12       		.uleb128 0x12
 4100 0945 EF020000 		.4byte	.LASF90
 4101 0949 01       		.byte	0x1
 4102 094a 0106     		.2byte	0x601
 4103 094c 6B000000 		.4byte	0x6b
 4104 0950 02       		.uleb128 0x2
 4105 0951 91       		.byte	0x91
 4106 0952 55       		.sleb128 -43
 4107 0953 12       		.uleb128 0x12
 4108 0954 4E050000 		.4byte	.LASF95
 4109 0958 01       		.byte	0x1
 4110 0959 0106     		.2byte	0x601
 4111 095b 76000000 		.4byte	0x76
 4112 095f 02       		.uleb128 0x2
 4113 0960 91       		.byte	0x91
 4114 0961 52       		.sleb128 -46
 4115 0962 12       		.uleb128 0x12
 4116 0963 8D080000 		.4byte	.LASF52
 4117 0967 01       		.byte	0x1
 4118 0968 0106     		.2byte	0x601
 4119 096a 6B000000 		.4byte	0x6b
 4120 096e 02       		.uleb128 0x2
 4121 096f 91       		.byte	0x91
 4122 0970 00       		.sleb128 0
 4123 0971 11       		.uleb128 0x11
 4124 0972 B0010000 		.4byte	.LASF96
 4125 0976 01       		.byte	0x1
 4126 0977 0506     		.2byte	0x605
 4127 0979 6B000000 		.4byte	0x6b
 4128 097d 02       		.uleb128 0x2
 4129 097e 91       		.byte	0x91
 4130 097f 6F       		.sleb128 -17
 4131 0980 11       		.uleb128 0x11
 4132 0981 32010000 		.4byte	.LASF97
 4133 0985 01       		.byte	0x1
 4134 0986 0606     		.2byte	0x606
 4135 0988 6B000000 		.4byte	0x6b
 4136 098c 02       		.uleb128 0x2
 4137 098d 91       		.byte	0x91
 4138 098e 67       		.sleb128 -25
 4139 098f 11       		.uleb128 0x11
 4140 0990 62050000 		.4byte	.LASF98
 4141 0994 01       		.byte	0x1
 4142 0995 0B06     		.2byte	0x60b
 4143 0997 DE090000 		.4byte	0x9de
 4144 099b 05       		.uleb128 0x5
 4145 099c 03       		.byte	0x3
 4146 099d 24000000 		.4byte	CapSense_centroid.5406
 4147 09a1 11       		.uleb128 0x11
 4148 09a2 A50A0000 		.4byte	.LASF99
ARM GAS  C:\Users\IEUser\AppData\Local\Temp\cctak5Pf.s 			page 124


 4149 09a6 01       		.byte	0x1
 4150 09a7 1206     		.2byte	0x612
 4151 09a9 6B000000 		.4byte	0x6b
 4152 09ad 02       		.uleb128 0x2
 4153 09ae 91       		.byte	0x91
 4154 09af 5B       		.sleb128 -37
 4155 09b0 11       		.uleb128 0x11
 4156 09b1 71070000 		.4byte	.LASF100
 4157 09b5 01       		.byte	0x1
 4158 09b6 1306     		.2byte	0x613
 4159 09b8 81000000 		.4byte	0x81
 4160 09bc 02       		.uleb128 0x2
 4161 09bd 91       		.byte	0x91
 4162 09be 60       		.sleb128 -32
 4163 09bf 11       		.uleb128 0x11
 4164 09c0 3D080000 		.4byte	.LASF101
 4165 09c4 01       		.byte	0x1
 4166 09c5 1406     		.2byte	0x614
 4167 09c7 97000000 		.4byte	0x97
 4168 09cb 02       		.uleb128 0x2
 4169 09cc 91       		.byte	0x91
 4170 09cd 5C       		.sleb128 -36
 4171 09ce 11       		.uleb128 0x11
 4172 09cf AE060000 		.4byte	.LASF93
 4173 09d3 01       		.byte	0x1
 4174 09d4 1606     		.2byte	0x616
 4175 09d6 6F010000 		.4byte	0x16f
 4176 09da 02       		.uleb128 0x2
 4177 09db 91       		.byte	0x91
 4178 09dc 68       		.sleb128 -24
 4179 09dd 00       		.byte	0
 4180 09de 16       		.uleb128 0x16
 4181 09df 6B000000 		.4byte	0x6b
 4182 09e3 EE090000 		.4byte	0x9ee
 4183 09e7 17       		.uleb128 0x17
 4184 09e8 B7000000 		.4byte	0xb7
 4185 09ec 02       		.byte	0x2
 4186 09ed 00       		.byte	0
 4187 09ee 15       		.uleb128 0x15
 4188 09ef 94070000 		.4byte	.LASF102
 4189 09f3 01       		.byte	0x1
 4190 09f4 D306     		.2byte	0x6d3
 4191 09f6 76000000 		.4byte	0x76
 4192 09fa 00000000 		.4byte	.LFB62
 4193 09fe 5C010000 		.4byte	.LFE62-.LFB62
 4194 0a02 01       		.uleb128 0x1
 4195 0a03 9C       		.byte	0x9c
 4196 0a04 810A0000 		.4byte	0xa81
 4197 0a08 12       		.uleb128 0x12
 4198 0a09 5F030000 		.4byte	.LASF51
 4199 0a0d 01       		.byte	0x1
 4200 0a0e D306     		.2byte	0x6d3
 4201 0a10 81000000 		.4byte	0x81
 4202 0a14 02       		.uleb128 0x2
 4203 0a15 91       		.byte	0x91
 4204 0a16 64       		.sleb128 -28
 4205 0a17 11       		.uleb128 0x11
ARM GAS  C:\Users\IEUser\AppData\Local\Temp\cctak5Pf.s 			page 125


 4206 0a18 DF000000 		.4byte	.LASF103
 4207 0a1c 01       		.byte	0x1
 4208 0a1d DA06     		.2byte	0x6da
 4209 0a1f 6B000000 		.4byte	0x6b
 4210 0a23 02       		.uleb128 0x2
 4211 0a24 91       		.byte	0x91
 4212 0a25 68       		.sleb128 -24
 4213 0a26 11       		.uleb128 0x11
 4214 0a27 9F060000 		.4byte	.LASF104
 4215 0a2b 01       		.byte	0x1
 4216 0a2c DB06     		.2byte	0x6db
 4217 0a2e 6B000000 		.4byte	0x6b
 4218 0a32 02       		.uleb128 0x2
 4219 0a33 91       		.byte	0x91
 4220 0a34 6D       		.sleb128 -19
 4221 0a35 11       		.uleb128 0x11
 4222 0a36 04030000 		.4byte	.LASF105
 4223 0a3a 01       		.byte	0x1
 4224 0a3b DC06     		.2byte	0x6dc
 4225 0a3d 6B000000 		.4byte	0x6b
 4226 0a41 02       		.uleb128 0x2
 4227 0a42 91       		.byte	0x91
 4228 0a43 6C       		.sleb128 -20
 4229 0a44 11       		.uleb128 0x11
 4230 0a45 61080000 		.4byte	.LASF91
 4231 0a49 01       		.byte	0x1
 4232 0a4a E606     		.2byte	0x6e6
 4233 0a4c 6B000000 		.4byte	0x6b
 4234 0a50 02       		.uleb128 0x2
 4235 0a51 91       		.byte	0x91
 4236 0a52 69       		.sleb128 -23
 4237 0a53 11       		.uleb128 0x11
 4238 0a54 A50A0000 		.4byte	.LASF99
 4239 0a58 01       		.byte	0x1
 4240 0a59 E706     		.2byte	0x6e7
 4241 0a5b 76000000 		.4byte	0x76
 4242 0a5f 02       		.uleb128 0x2
 4243 0a60 91       		.byte	0x91
 4244 0a61 6E       		.sleb128 -18
 4245 0a62 11       		.uleb128 0x11
 4246 0a63 2A040000 		.4byte	.LASF89
 4247 0a67 01       		.byte	0x1
 4248 0a68 E806     		.2byte	0x6e8
 4249 0a6a 6B000000 		.4byte	0x6b
 4250 0a6e 02       		.uleb128 0x2
 4251 0a6f 91       		.byte	0x91
 4252 0a70 6B       		.sleb128 -21
 4253 0a71 11       		.uleb128 0x11
 4254 0a72 EF020000 		.4byte	.LASF90
 4255 0a76 01       		.byte	0x1
 4256 0a77 E906     		.2byte	0x6e9
 4257 0a79 6B000000 		.4byte	0x6b
 4258 0a7d 02       		.uleb128 0x2
 4259 0a7e 91       		.byte	0x91
 4260 0a7f 6A       		.sleb128 -22
 4261 0a80 00       		.byte	0
 4262 0a81 15       		.uleb128 0x15
ARM GAS  C:\Users\IEUser\AppData\Local\Temp\cctak5Pf.s 			page 126


 4263 0a82 030A0000 		.4byte	.LASF106
 4264 0a86 01       		.byte	0x1
 4265 0a87 9E07     		.2byte	0x79e
 4266 0a89 76000000 		.4byte	0x76
 4267 0a8d 00000000 		.4byte	.LFB63
 4268 0a91 98000000 		.4byte	.LFE63-.LFB63
 4269 0a95 01       		.uleb128 0x1
 4270 0a96 9C       		.byte	0x9c
 4271 0a97 E70A0000 		.4byte	0xae7
 4272 0a9b 12       		.uleb128 0x12
 4273 0a9c 5F030000 		.4byte	.LASF51
 4274 0aa0 01       		.byte	0x1
 4275 0aa1 9E07     		.2byte	0x79e
 4276 0aa3 81000000 		.4byte	0x81
 4277 0aa7 02       		.uleb128 0x2
 4278 0aa8 91       		.byte	0x91
 4279 0aa9 64       		.sleb128 -28
 4280 0aaa 11       		.uleb128 0x11
 4281 0aab 61080000 		.4byte	.LASF91
 4282 0aaf 01       		.byte	0x1
 4283 0ab0 AD07     		.2byte	0x7ad
 4284 0ab2 6B000000 		.4byte	0x6b
 4285 0ab6 02       		.uleb128 0x2
 4286 0ab7 91       		.byte	0x91
 4287 0ab8 6B       		.sleb128 -21
 4288 0ab9 11       		.uleb128 0x11
 4289 0aba A50A0000 		.4byte	.LASF99
 4290 0abe 01       		.byte	0x1
 4291 0abf AE07     		.2byte	0x7ae
 4292 0ac1 76000000 		.4byte	0x76
 4293 0ac5 02       		.uleb128 0x2
 4294 0ac6 91       		.byte	0x91
 4295 0ac7 6E       		.sleb128 -18
 4296 0ac8 11       		.uleb128 0x11
 4297 0ac9 2A040000 		.4byte	.LASF89
 4298 0acd 01       		.byte	0x1
 4299 0ace AF07     		.2byte	0x7af
 4300 0ad0 6B000000 		.4byte	0x6b
 4301 0ad4 02       		.uleb128 0x2
 4302 0ad5 91       		.byte	0x91
 4303 0ad6 6D       		.sleb128 -19
 4304 0ad7 11       		.uleb128 0x11
 4305 0ad8 EF020000 		.4byte	.LASF90
 4306 0adc 01       		.byte	0x1
 4307 0add B007     		.2byte	0x7b0
 4308 0adf 6B000000 		.4byte	0x6b
 4309 0ae3 02       		.uleb128 0x2
 4310 0ae4 91       		.byte	0x91
 4311 0ae5 6C       		.sleb128 -20
 4312 0ae6 00       		.byte	0
 4313 0ae7 13       		.uleb128 0x13
 4314 0ae8 300A0000 		.4byte	.LASF107
 4315 0aec 01       		.byte	0x1
 4316 0aed 4B09     		.2byte	0x94b
 4317 0aef 76000000 		.4byte	0x76
 4318 0af3 00000000 		.4byte	.LFB64
 4319 0af7 6A000000 		.4byte	.LFE64-.LFB64
ARM GAS  C:\Users\IEUser\AppData\Local\Temp\cctak5Pf.s 			page 127


 4320 0afb 01       		.uleb128 0x1
 4321 0afc 9C       		.byte	0x9c
 4322 0afd 3B0B0000 		.4byte	0xb3b
 4323 0b01 18       		.uleb128 0x18
 4324 0b02 783100   		.ascii	"x1\000"
 4325 0b05 01       		.byte	0x1
 4326 0b06 4B09     		.2byte	0x94b
 4327 0b08 76000000 		.4byte	0x76
 4328 0b0c 02       		.uleb128 0x2
 4329 0b0d 91       		.byte	0x91
 4330 0b0e 6E       		.sleb128 -18
 4331 0b0f 18       		.uleb128 0x18
 4332 0b10 783200   		.ascii	"x2\000"
 4333 0b13 01       		.byte	0x1
 4334 0b14 4B09     		.2byte	0x94b
 4335 0b16 76000000 		.4byte	0x76
 4336 0b1a 02       		.uleb128 0x2
 4337 0b1b 91       		.byte	0x91
 4338 0b1c 6C       		.sleb128 -20
 4339 0b1d 18       		.uleb128 0x18
 4340 0b1e 783300   		.ascii	"x3\000"
 4341 0b21 01       		.byte	0x1
 4342 0b22 4B09     		.2byte	0x94b
 4343 0b24 76000000 		.4byte	0x76
 4344 0b28 02       		.uleb128 0x2
 4345 0b29 91       		.byte	0x91
 4346 0b2a 6A       		.sleb128 -22
 4347 0b2b 0F       		.uleb128 0xf
 4348 0b2c 746D7000 		.ascii	"tmp\000"
 4349 0b30 01       		.byte	0x1
 4350 0b31 4D09     		.2byte	0x94d
 4351 0b33 76000000 		.4byte	0x76
 4352 0b37 02       		.uleb128 0x2
 4353 0b38 91       		.byte	0x91
 4354 0b39 76       		.sleb128 -10
 4355 0b3a 00       		.byte	0
 4356 0b3b 13       		.uleb128 0x13
 4357 0b3c 1B000000 		.4byte	.LASF108
 4358 0b40 01       		.byte	0x1
 4359 0b41 C309     		.2byte	0x9c3
 4360 0b43 76000000 		.4byte	0x76
 4361 0b47 00000000 		.4byte	.LFB65
 4362 0b4b 3C000000 		.4byte	.LFE65-.LFB65
 4363 0b4f 01       		.uleb128 0x1
 4364 0b50 9C       		.byte	0x9c
 4365 0b51 810B0000 		.4byte	0xb81
 4366 0b55 18       		.uleb128 0x18
 4367 0b56 783100   		.ascii	"x1\000"
 4368 0b59 01       		.byte	0x1
 4369 0b5a C309     		.2byte	0x9c3
 4370 0b5c 76000000 		.4byte	0x76
 4371 0b60 02       		.uleb128 0x2
 4372 0b61 91       		.byte	0x91
 4373 0b62 6E       		.sleb128 -18
 4374 0b63 18       		.uleb128 0x18
 4375 0b64 783200   		.ascii	"x2\000"
 4376 0b67 01       		.byte	0x1
ARM GAS  C:\Users\IEUser\AppData\Local\Temp\cctak5Pf.s 			page 128


 4377 0b68 C309     		.2byte	0x9c3
 4378 0b6a 76000000 		.4byte	0x76
 4379 0b6e 02       		.uleb128 0x2
 4380 0b6f 91       		.byte	0x91
 4381 0b70 6C       		.sleb128 -20
 4382 0b71 0F       		.uleb128 0xf
 4383 0b72 746D7000 		.ascii	"tmp\000"
 4384 0b76 01       		.byte	0x1
 4385 0b77 C509     		.2byte	0x9c5
 4386 0b79 81000000 		.4byte	0x81
 4387 0b7d 02       		.uleb128 0x2
 4388 0b7e 91       		.byte	0x91
 4389 0b7f 74       		.sleb128 -12
 4390 0b80 00       		.byte	0
 4391 0b81 13       		.uleb128 0x13
 4392 0b82 C3080000 		.4byte	.LASF109
 4393 0b86 01       		.byte	0x1
 4394 0b87 EB09     		.2byte	0x9eb
 4395 0b89 76000000 		.4byte	0x76
 4396 0b8d 00000000 		.4byte	.LFB66
 4397 0b91 4C000000 		.4byte	.LFE66-.LFB66
 4398 0b95 01       		.uleb128 0x1
 4399 0b96 9C       		.byte	0x9c
 4400 0b97 B80B0000 		.4byte	0xbb8
 4401 0b9b 18       		.uleb128 0x18
 4402 0b9c 783100   		.ascii	"x1\000"
 4403 0b9f 01       		.byte	0x1
 4404 0ba0 EB09     		.2byte	0x9eb
 4405 0ba2 76000000 		.4byte	0x76
 4406 0ba6 02       		.uleb128 0x2
 4407 0ba7 91       		.byte	0x91
 4408 0ba8 76       		.sleb128 -10
 4409 0ba9 18       		.uleb128 0x18
 4410 0baa 783200   		.ascii	"x2\000"
 4411 0bad 01       		.byte	0x1
 4412 0bae EB09     		.2byte	0x9eb
 4413 0bb0 76000000 		.4byte	0x76
 4414 0bb4 02       		.uleb128 0x2
 4415 0bb5 91       		.byte	0x91
 4416 0bb6 74       		.sleb128 -12
 4417 0bb7 00       		.byte	0
 4418 0bb8 13       		.uleb128 0x13
 4419 0bb9 AB050000 		.4byte	.LASF110
 4420 0bbd 01       		.byte	0x1
 4421 0bbe AC0A     		.2byte	0xaac
 4422 0bc0 81000000 		.4byte	0x81
 4423 0bc4 00000000 		.4byte	.LFB67
 4424 0bc8 1C000000 		.4byte	.LFE67-.LFB67
 4425 0bcc 01       		.uleb128 0x1
 4426 0bcd 9C       		.byte	0x9c
 4427 0bce E20B0000 		.4byte	0xbe2
 4428 0bd2 12       		.uleb128 0x12
 4429 0bd3 DE040000 		.4byte	.LASF42
 4430 0bd7 01       		.byte	0x1
 4431 0bd8 AC0A     		.2byte	0xaac
 4432 0bda 81000000 		.4byte	0x81
 4433 0bde 02       		.uleb128 0x2
ARM GAS  C:\Users\IEUser\AppData\Local\Temp\cctak5Pf.s 			page 129


 4434 0bdf 91       		.byte	0x91
 4435 0be0 74       		.sleb128 -12
 4436 0be1 00       		.byte	0
 4437 0be2 13       		.uleb128 0x13
 4438 0be3 58060000 		.4byte	.LASF111
 4439 0be7 01       		.byte	0x1
 4440 0be8 C60A     		.2byte	0xac6
 4441 0bea 6B000000 		.4byte	0x6b
 4442 0bee 00000000 		.4byte	.LFB68
 4443 0bf2 1C000000 		.4byte	.LFE68-.LFB68
 4444 0bf6 01       		.uleb128 0x1
 4445 0bf7 9C       		.byte	0x9c
 4446 0bf8 0C0C0000 		.4byte	0xc0c
 4447 0bfc 12       		.uleb128 0x12
 4448 0bfd DE040000 		.4byte	.LASF42
 4449 0c01 01       		.byte	0x1
 4450 0c02 C60A     		.2byte	0xac6
 4451 0c04 81000000 		.4byte	0x81
 4452 0c08 02       		.uleb128 0x2
 4453 0c09 91       		.byte	0x91
 4454 0c0a 74       		.sleb128 -12
 4455 0c0b 00       		.byte	0
 4456 0c0c 13       		.uleb128 0x13
 4457 0c0d 4E0A0000 		.4byte	.LASF112
 4458 0c11 01       		.byte	0x1
 4459 0c12 E00A     		.2byte	0xae0
 4460 0c14 6B000000 		.4byte	0x6b
 4461 0c18 00000000 		.4byte	.LFB69
 4462 0c1c 1C000000 		.4byte	.LFE69-.LFB69
 4463 0c20 01       		.uleb128 0x1
 4464 0c21 9C       		.byte	0x9c
 4465 0c22 360C0000 		.4byte	0xc36
 4466 0c26 12       		.uleb128 0x12
 4467 0c27 5F030000 		.4byte	.LASF51
 4468 0c2b 01       		.byte	0x1
 4469 0c2c E00A     		.2byte	0xae0
 4470 0c2e 81000000 		.4byte	0x81
 4471 0c32 02       		.uleb128 0x2
 4472 0c33 91       		.byte	0x91
 4473 0c34 74       		.sleb128 -12
 4474 0c35 00       		.byte	0
 4475 0c36 19       		.uleb128 0x19
 4476 0c37 05080000 		.4byte	.LASF113
 4477 0c3b 01       		.byte	0x1
 4478 0c3c FA0A     		.2byte	0xafa
 4479 0c3e 00000000 		.4byte	.LFB70
 4480 0c42 14000000 		.4byte	.LFE70-.LFB70
 4481 0c46 01       		.uleb128 0x1
 4482 0c47 9C       		.byte	0x9c
 4483 0c48 19       		.uleb128 0x19
 4484 0c49 C9030000 		.4byte	.LASF114
 4485 0c4d 01       		.byte	0x1
 4486 0c4e 130B     		.2byte	0xb13
 4487 0c50 00000000 		.4byte	.LFB71
 4488 0c54 14000000 		.4byte	.LFE71-.LFB71
 4489 0c58 01       		.uleb128 0x1
 4490 0c59 9C       		.byte	0x9c
ARM GAS  C:\Users\IEUser\AppData\Local\Temp\cctak5Pf.s 			page 130


 4491 0c5a 16       		.uleb128 0x16
 4492 0c5b 76000000 		.4byte	0x76
 4493 0c5f 6A0C0000 		.4byte	0xc6a
 4494 0c63 17       		.uleb128 0x17
 4495 0c64 B7000000 		.4byte	0xb7
 4496 0c68 00       		.byte	0
 4497 0c69 00       		.byte	0
 4498 0c6a 1A       		.uleb128 0x1a
 4499 0c6b A4090000 		.4byte	.LASF115
 4500 0c6f 01       		.byte	0x1
 4501 0c70 5D       		.byte	0x5d
 4502 0c71 7B0C0000 		.4byte	0xc7b
 4503 0c75 05       		.uleb128 0x5
 4504 0c76 03       		.byte	0x3
 4505 0c77 08000000 		.4byte	CapSense_centroidMult
 4506 0c7b 08       		.uleb128 0x8
 4507 0c7c 5A0C0000 		.4byte	0xc5a
 4508 0c80 1A       		.uleb128 0x1a
 4509 0c81 66030000 		.4byte	.LASF116
 4510 0c85 01       		.byte	0x1
 4511 0c86 61       		.byte	0x61
 4512 0c87 64070000 		.4byte	0x764
 4513 0c8b 05       		.uleb128 0x5
 4514 0c8c 03       		.byte	0x3
 4515 0c8d 0C000000 		.4byte	CapSense_posFiltersMask
 4516 0c91 1A       		.uleb128 0x1a
 4517 0c92 64010000 		.4byte	.LASF117
 4518 0c96 01       		.byte	0x1
 4519 0c97 65       		.byte	0x65
 4520 0c98 DE090000 		.4byte	0x9de
 4521 0c9c 05       		.uleb128 0x5
 4522 0c9d 03       		.byte	0x3
 4523 0c9e 10000000 		.4byte	CapSense_posFiltersData
 4524 0ca2 16       		.uleb128 0x16
 4525 0ca3 76000000 		.4byte	0x76
 4526 0ca7 B20C0000 		.4byte	0xcb2
 4527 0cab 17       		.uleb128 0x17
 4528 0cac B7000000 		.4byte	0xb7
 4529 0cb0 04       		.byte	0x4
 4530 0cb1 00       		.byte	0
 4531 0cb2 1B       		.uleb128 0x1b
 4532 0cb3 45060000 		.4byte	.LASF118
 4533 0cb7 01       		.byte	0x1
 4534 0cb8 2C       		.byte	0x2c
 4535 0cb9 A20C0000 		.4byte	0xca2
 4536 0cbd 1B       		.uleb128 0x1b
 4537 0cbe 45030000 		.4byte	.LASF119
 4538 0cc2 01       		.byte	0x1
 4539 0cc3 2D       		.byte	0x2d
 4540 0cc4 64070000 		.4byte	0x764
 4541 0cc8 16       		.uleb128 0x16
 4542 0cc9 6B000000 		.4byte	0x6b
 4543 0ccd D80C0000 		.4byte	0xcd8
 4544 0cd1 17       		.uleb128 0x17
 4545 0cd2 B7000000 		.4byte	0xb7
 4546 0cd6 04       		.byte	0x4
 4547 0cd7 00       		.byte	0
ARM GAS  C:\Users\IEUser\AppData\Local\Temp\cctak5Pf.s 			page 131


 4548 0cd8 1B       		.uleb128 0x1b
 4549 0cd9 97030000 		.4byte	.LASF120
 4550 0cdd 01       		.byte	0x1
 4551 0cde 2E       		.byte	0x2e
 4552 0cdf E30C0000 		.4byte	0xce3
 4553 0ce3 08       		.uleb128 0x8
 4554 0ce4 C80C0000 		.4byte	0xcc8
 4555 0ce8 1C       		.uleb128 0x1c
 4556 0ce9 49080000 		.4byte	.LASF121
 4557 0ced 01       		.byte	0x1
 4558 0cee 34       		.byte	0x34
 4559 0cef A20C0000 		.4byte	0xca2
 4560 0cf3 05       		.uleb128 0x5
 4561 0cf4 03       		.byte	0x3
 4562 0cf5 00000000 		.4byte	CapSense_sensorBaseline
 4563 0cf9 1C       		.uleb128 0x1c
 4564 0cfa 00000000 		.4byte	.LASF122
 4565 0cfe 01       		.byte	0x1
 4566 0cff 35       		.byte	0x35
 4567 0d00 C80C0000 		.4byte	0xcc8
 4568 0d04 05       		.uleb128 0x5
 4569 0d05 03       		.byte	0x3
 4570 0d06 00000000 		.4byte	CapSense_sensorBaselineLow
 4571 0d0a 1C       		.uleb128 0x1c
 4572 0d0b 4D020000 		.4byte	.LASF123
 4573 0d0f 01       		.byte	0x1
 4574 0d10 36       		.byte	0x36
 4575 0d11 C80C0000 		.4byte	0xcc8
 4576 0d15 05       		.uleb128 0x5
 4577 0d16 03       		.byte	0x3
 4578 0d17 00000000 		.4byte	CapSense_sensorSignal
 4579 0d1b 1C       		.uleb128 0x1c
 4580 0d1c AE0A0000 		.4byte	.LASF124
 4581 0d20 01       		.byte	0x1
 4582 0d21 37       		.byte	0x37
 4583 0d22 64070000 		.4byte	0x764
 4584 0d26 05       		.uleb128 0x5
 4585 0d27 03       		.byte	0x3
 4586 0d28 00000000 		.4byte	CapSense_sensorOnMask
 4587 0d2c 1C       		.uleb128 0x1c
 4588 0d2d 63020000 		.4byte	.LASF125
 4589 0d31 01       		.byte	0x1
 4590 0d32 39       		.byte	0x39
 4591 0d33 C80C0000 		.4byte	0xcc8
 4592 0d37 05       		.uleb128 0x5
 4593 0d38 03       		.byte	0x3
 4594 0d39 00000000 		.4byte	CapSense_lowBaselineResetCnt
 4595 0d3d 1C       		.uleb128 0x1c
 4596 0d3e 23080000 		.4byte	.LASF126
 4597 0d42 01       		.byte	0x1
 4598 0d43 3A       		.byte	0x3a
 4599 0d44 C80C0000 		.4byte	0xcc8
 4600 0d48 05       		.uleb128 0x5
 4601 0d49 03       		.byte	0x3
 4602 0d4a 00000000 		.4byte	CapSense_lowBaselineReset
 4603 0d4e 1C       		.uleb128 0x1c
 4604 0d4f 7E030000 		.4byte	.LASF127
ARM GAS  C:\Users\IEUser\AppData\Local\Temp\cctak5Pf.s 			page 132


 4605 0d53 01       		.byte	0x1
 4606 0d54 49       		.byte	0x49
 4607 0d55 64070000 		.4byte	0x764
 4608 0d59 05       		.uleb128 0x5
 4609 0d5a 03       		.byte	0x3
 4610 0d5b 00000000 		.4byte	CapSense_fingerThreshold
 4611 0d5f 1C       		.uleb128 0x1c
 4612 0d60 19090000 		.4byte	.LASF128
 4613 0d64 01       		.byte	0x1
 4614 0d65 4B       		.byte	0x4b
 4615 0d66 64070000 		.4byte	0x764
 4616 0d6a 05       		.uleb128 0x5
 4617 0d6b 03       		.byte	0x3
 4618 0d6c 00000000 		.4byte	CapSense_noiseThreshold
 4619 0d70 1C       		.uleb128 0x1c
 4620 0d71 AC040000 		.4byte	.LASF129
 4621 0d75 01       		.byte	0x1
 4622 0d76 4D       		.byte	0x4d
 4623 0d77 64070000 		.4byte	0x764
 4624 0d7b 05       		.uleb128 0x5
 4625 0d7c 03       		.byte	0x3
 4626 0d7d 00000000 		.4byte	CapSense_negativeNoiseThreshold
 4627 0d81 1C       		.uleb128 0x1c
 4628 0d82 CF020000 		.4byte	.LASF130
 4629 0d86 01       		.byte	0x1
 4630 0d87 4F       		.byte	0x4f
 4631 0d88 64070000 		.4byte	0x764
 4632 0d8c 05       		.uleb128 0x5
 4633 0d8d 03       		.byte	0x3
 4634 0d8e 00000000 		.4byte	CapSense_hysteresis
 4635 0d92 1C       		.uleb128 0x1c
 4636 0d93 7C010000 		.4byte	.LASF131
 4637 0d97 01       		.byte	0x1
 4638 0d98 51       		.byte	0x51
 4639 0d99 64070000 		.4byte	0x764
 4640 0d9d 05       		.uleb128 0x5
 4641 0d9e 03       		.byte	0x3
 4642 0d9f 00000000 		.4byte	CapSense_debounce
 4643 0da3 1C       		.uleb128 0x1c
 4644 0da4 80020000 		.4byte	.LASF132
 4645 0da8 01       		.byte	0x1
 4646 0da9 55       		.byte	0x55
 4647 0daa B40D0000 		.4byte	0xdb4
 4648 0dae 05       		.uleb128 0x5
 4649 0daf 03       		.byte	0x3
 4650 0db0 00000000 		.4byte	CapSense_rawDataIndex
 4651 0db4 08       		.uleb128 0x8
 4652 0db5 64070000 		.4byte	0x764
 4653 0db9 1C       		.uleb128 0x1c
 4654 0dba 93040000 		.4byte	.LASF133
 4655 0dbe 01       		.byte	0x1
 4656 0dbf 59       		.byte	0x59
 4657 0dc0 CA0D0000 		.4byte	0xdca
 4658 0dc4 05       		.uleb128 0x5
 4659 0dc5 03       		.byte	0x3
 4660 0dc6 00000000 		.4byte	CapSense_numberOfSensors
 4661 0dca 08       		.uleb128 0x8
ARM GAS  C:\Users\IEUser\AppData\Local\Temp\cctak5Pf.s 			page 133


 4662 0dcb 64070000 		.4byte	0x764
 4663 0dcf 1C       		.uleb128 0x1c
 4664 0dd0 8D0A0000 		.4byte	.LASF134
 4665 0dd4 01       		.byte	0x1
 4666 0dd5 27       		.byte	0x27
 4667 0dd6 A20C0000 		.4byte	0xca2
 4668 0dda 05       		.uleb128 0x5
 4669 0ddb 03       		.byte	0x3
 4670 0ddc 00000000 		.4byte	CapSense_rawFilterData1
 4671 0de0 1B       		.uleb128 0x1b
 4672 0de1 E8000000 		.4byte	.LASF135
 4673 0de5 01       		.byte	0x1
 4674 0de6 41       		.byte	0x41
 4675 0de7 48020000 		.4byte	0x248
 4676 0deb 1C       		.uleb128 0x1c
 4677 0dec C0090000 		.4byte	.LASF136
 4678 0df0 01       		.byte	0x1
 4679 0df1 45       		.byte	0x45
 4680 0df2 6B000000 		.4byte	0x6b
 4681 0df6 05       		.uleb128 0x5
 4682 0df7 03       		.byte	0x3
 4683 0df8 00000000 		.4byte	CapSense_enableRawFilters
 4684 0dfc 00       		.byte	0
 4685              		.section	.debug_abbrev,"",%progbits
 4686              	.Ldebug_abbrev0:
 4687 0000 01       		.uleb128 0x1
 4688 0001 11       		.uleb128 0x11
 4689 0002 01       		.byte	0x1
 4690 0003 25       		.uleb128 0x25
 4691 0004 0E       		.uleb128 0xe
 4692 0005 13       		.uleb128 0x13
 4693 0006 0B       		.uleb128 0xb
 4694 0007 03       		.uleb128 0x3
 4695 0008 0E       		.uleb128 0xe
 4696 0009 1B       		.uleb128 0x1b
 4697 000a 0E       		.uleb128 0xe
 4698 000b 55       		.uleb128 0x55
 4699 000c 17       		.uleb128 0x17
 4700 000d 11       		.uleb128 0x11
 4701 000e 01       		.uleb128 0x1
 4702 000f 10       		.uleb128 0x10
 4703 0010 17       		.uleb128 0x17
 4704 0011 00       		.byte	0
 4705 0012 00       		.byte	0
 4706 0013 02       		.uleb128 0x2
 4707 0014 24       		.uleb128 0x24
 4708 0015 00       		.byte	0
 4709 0016 0B       		.uleb128 0xb
 4710 0017 0B       		.uleb128 0xb
 4711 0018 3E       		.uleb128 0x3e
 4712 0019 0B       		.uleb128 0xb
 4713 001a 03       		.uleb128 0x3
 4714 001b 0E       		.uleb128 0xe
 4715 001c 00       		.byte	0
 4716 001d 00       		.byte	0
 4717 001e 03       		.uleb128 0x3
 4718 001f 24       		.uleb128 0x24
ARM GAS  C:\Users\IEUser\AppData\Local\Temp\cctak5Pf.s 			page 134


 4719 0020 00       		.byte	0
 4720 0021 0B       		.uleb128 0xb
 4721 0022 0B       		.uleb128 0xb
 4722 0023 3E       		.uleb128 0x3e
 4723 0024 0B       		.uleb128 0xb
 4724 0025 03       		.uleb128 0x3
 4725 0026 08       		.uleb128 0x8
 4726 0027 00       		.byte	0
 4727 0028 00       		.byte	0
 4728 0029 04       		.uleb128 0x4
 4729 002a 16       		.uleb128 0x16
 4730 002b 00       		.byte	0
 4731 002c 03       		.uleb128 0x3
 4732 002d 0E       		.uleb128 0xe
 4733 002e 3A       		.uleb128 0x3a
 4734 002f 0B       		.uleb128 0xb
 4735 0030 3B       		.uleb128 0x3b
 4736 0031 0B       		.uleb128 0xb
 4737 0032 49       		.uleb128 0x49
 4738 0033 13       		.uleb128 0x13
 4739 0034 00       		.byte	0
 4740 0035 00       		.byte	0
 4741 0036 05       		.uleb128 0x5
 4742 0037 13       		.uleb128 0x13
 4743 0038 01       		.byte	0x1
 4744 0039 0B       		.uleb128 0xb
 4745 003a 0B       		.uleb128 0xb
 4746 003b 3A       		.uleb128 0x3a
 4747 003c 0B       		.uleb128 0xb
 4748 003d 3B       		.uleb128 0x3b
 4749 003e 0B       		.uleb128 0xb
 4750 003f 01       		.uleb128 0x1
 4751 0040 13       		.uleb128 0x13
 4752 0041 00       		.byte	0
 4753 0042 00       		.byte	0
 4754 0043 06       		.uleb128 0x6
 4755 0044 0D       		.uleb128 0xd
 4756 0045 00       		.byte	0
 4757 0046 03       		.uleb128 0x3
 4758 0047 0E       		.uleb128 0xe
 4759 0048 3A       		.uleb128 0x3a
 4760 0049 0B       		.uleb128 0xb
 4761 004a 3B       		.uleb128 0x3b
 4762 004b 0B       		.uleb128 0xb
 4763 004c 49       		.uleb128 0x49
 4764 004d 13       		.uleb128 0x13
 4765 004e 38       		.uleb128 0x38
 4766 004f 0B       		.uleb128 0xb
 4767 0050 00       		.byte	0
 4768 0051 00       		.byte	0
 4769 0052 07       		.uleb128 0x7
 4770 0053 0F       		.uleb128 0xf
 4771 0054 00       		.byte	0
 4772 0055 0B       		.uleb128 0xb
 4773 0056 0B       		.uleb128 0xb
 4774 0057 49       		.uleb128 0x49
 4775 0058 13       		.uleb128 0x13
ARM GAS  C:\Users\IEUser\AppData\Local\Temp\cctak5Pf.s 			page 135


 4776 0059 00       		.byte	0
 4777 005a 00       		.byte	0
 4778 005b 08       		.uleb128 0x8
 4779 005c 26       		.uleb128 0x26
 4780 005d 00       		.byte	0
 4781 005e 49       		.uleb128 0x49
 4782 005f 13       		.uleb128 0x13
 4783 0060 00       		.byte	0
 4784 0061 00       		.byte	0
 4785 0062 09       		.uleb128 0x9
 4786 0063 15       		.uleb128 0x15
 4787 0064 01       		.byte	0x1
 4788 0065 27       		.uleb128 0x27
 4789 0066 19       		.uleb128 0x19
 4790 0067 49       		.uleb128 0x49
 4791 0068 13       		.uleb128 0x13
 4792 0069 01       		.uleb128 0x1
 4793 006a 13       		.uleb128 0x13
 4794 006b 00       		.byte	0
 4795 006c 00       		.byte	0
 4796 006d 0A       		.uleb128 0xa
 4797 006e 05       		.uleb128 0x5
 4798 006f 00       		.byte	0
 4799 0070 49       		.uleb128 0x49
 4800 0071 13       		.uleb128 0x13
 4801 0072 00       		.byte	0
 4802 0073 00       		.byte	0
 4803 0074 0B       		.uleb128 0xb
 4804 0075 15       		.uleb128 0x15
 4805 0076 01       		.byte	0x1
 4806 0077 27       		.uleb128 0x27
 4807 0078 19       		.uleb128 0x19
 4808 0079 01       		.uleb128 0x1
 4809 007a 13       		.uleb128 0x13
 4810 007b 00       		.byte	0
 4811 007c 00       		.byte	0
 4812 007d 0C       		.uleb128 0xc
 4813 007e 2E       		.uleb128 0x2e
 4814 007f 01       		.byte	0x1
 4815 0080 3F       		.uleb128 0x3f
 4816 0081 19       		.uleb128 0x19
 4817 0082 03       		.uleb128 0x3
 4818 0083 0E       		.uleb128 0xe
 4819 0084 3A       		.uleb128 0x3a
 4820 0085 0B       		.uleb128 0xb
 4821 0086 3B       		.uleb128 0x3b
 4822 0087 0B       		.uleb128 0xb
 4823 0088 27       		.uleb128 0x27
 4824 0089 19       		.uleb128 0x19
 4825 008a 11       		.uleb128 0x11
 4826 008b 01       		.uleb128 0x1
 4827 008c 12       		.uleb128 0x12
 4828 008d 06       		.uleb128 0x6
 4829 008e 40       		.uleb128 0x40
 4830 008f 18       		.uleb128 0x18
 4831 0090 9742     		.uleb128 0x2117
 4832 0092 19       		.uleb128 0x19
ARM GAS  C:\Users\IEUser\AppData\Local\Temp\cctak5Pf.s 			page 136


 4833 0093 01       		.uleb128 0x1
 4834 0094 13       		.uleb128 0x13
 4835 0095 00       		.byte	0
 4836 0096 00       		.byte	0
 4837 0097 0D       		.uleb128 0xd
 4838 0098 05       		.uleb128 0x5
 4839 0099 00       		.byte	0
 4840 009a 03       		.uleb128 0x3
 4841 009b 0E       		.uleb128 0xe
 4842 009c 3A       		.uleb128 0x3a
 4843 009d 0B       		.uleb128 0xb
 4844 009e 3B       		.uleb128 0x3b
 4845 009f 0B       		.uleb128 0xb
 4846 00a0 49       		.uleb128 0x49
 4847 00a1 13       		.uleb128 0x13
 4848 00a2 02       		.uleb128 0x2
 4849 00a3 18       		.uleb128 0x18
 4850 00a4 00       		.byte	0
 4851 00a5 00       		.byte	0
 4852 00a6 0E       		.uleb128 0xe
 4853 00a7 2E       		.uleb128 0x2e
 4854 00a8 01       		.byte	0x1
 4855 00a9 3F       		.uleb128 0x3f
 4856 00aa 19       		.uleb128 0x19
 4857 00ab 03       		.uleb128 0x3
 4858 00ac 0E       		.uleb128 0xe
 4859 00ad 3A       		.uleb128 0x3a
 4860 00ae 0B       		.uleb128 0xb
 4861 00af 3B       		.uleb128 0x3b
 4862 00b0 0B       		.uleb128 0xb
 4863 00b1 27       		.uleb128 0x27
 4864 00b2 19       		.uleb128 0x19
 4865 00b3 11       		.uleb128 0x11
 4866 00b4 01       		.uleb128 0x1
 4867 00b5 12       		.uleb128 0x12
 4868 00b6 06       		.uleb128 0x6
 4869 00b7 40       		.uleb128 0x40
 4870 00b8 18       		.uleb128 0x18
 4871 00b9 9642     		.uleb128 0x2116
 4872 00bb 19       		.uleb128 0x19
 4873 00bc 01       		.uleb128 0x1
 4874 00bd 13       		.uleb128 0x13
 4875 00be 00       		.byte	0
 4876 00bf 00       		.byte	0
 4877 00c0 0F       		.uleb128 0xf
 4878 00c1 34       		.uleb128 0x34
 4879 00c2 00       		.byte	0
 4880 00c3 03       		.uleb128 0x3
 4881 00c4 08       		.uleb128 0x8
 4882 00c5 3A       		.uleb128 0x3a
 4883 00c6 0B       		.uleb128 0xb
 4884 00c7 3B       		.uleb128 0x3b
 4885 00c8 05       		.uleb128 0x5
 4886 00c9 49       		.uleb128 0x49
 4887 00ca 13       		.uleb128 0x13
 4888 00cb 02       		.uleb128 0x2
 4889 00cc 18       		.uleb128 0x18
ARM GAS  C:\Users\IEUser\AppData\Local\Temp\cctak5Pf.s 			page 137


 4890 00cd 00       		.byte	0
 4891 00ce 00       		.byte	0
 4892 00cf 10       		.uleb128 0x10
 4893 00d0 2E       		.uleb128 0x2e
 4894 00d1 01       		.byte	0x1
 4895 00d2 3F       		.uleb128 0x3f
 4896 00d3 19       		.uleb128 0x19
 4897 00d4 03       		.uleb128 0x3
 4898 00d5 0E       		.uleb128 0xe
 4899 00d6 3A       		.uleb128 0x3a
 4900 00d7 0B       		.uleb128 0xb
 4901 00d8 3B       		.uleb128 0x3b
 4902 00d9 05       		.uleb128 0x5
 4903 00da 27       		.uleb128 0x27
 4904 00db 19       		.uleb128 0x19
 4905 00dc 11       		.uleb128 0x11
 4906 00dd 01       		.uleb128 0x1
 4907 00de 12       		.uleb128 0x12
 4908 00df 06       		.uleb128 0x6
 4909 00e0 40       		.uleb128 0x40
 4910 00e1 18       		.uleb128 0x18
 4911 00e2 9642     		.uleb128 0x2116
 4912 00e4 19       		.uleb128 0x19
 4913 00e5 01       		.uleb128 0x1
 4914 00e6 13       		.uleb128 0x13
 4915 00e7 00       		.byte	0
 4916 00e8 00       		.byte	0
 4917 00e9 11       		.uleb128 0x11
 4918 00ea 34       		.uleb128 0x34
 4919 00eb 00       		.byte	0
 4920 00ec 03       		.uleb128 0x3
 4921 00ed 0E       		.uleb128 0xe
 4922 00ee 3A       		.uleb128 0x3a
 4923 00ef 0B       		.uleb128 0xb
 4924 00f0 3B       		.uleb128 0x3b
 4925 00f1 05       		.uleb128 0x5
 4926 00f2 49       		.uleb128 0x49
 4927 00f3 13       		.uleb128 0x13
 4928 00f4 02       		.uleb128 0x2
 4929 00f5 18       		.uleb128 0x18
 4930 00f6 00       		.byte	0
 4931 00f7 00       		.byte	0
 4932 00f8 12       		.uleb128 0x12
 4933 00f9 05       		.uleb128 0x5
 4934 00fa 00       		.byte	0
 4935 00fb 03       		.uleb128 0x3
 4936 00fc 0E       		.uleb128 0xe
 4937 00fd 3A       		.uleb128 0x3a
 4938 00fe 0B       		.uleb128 0xb
 4939 00ff 3B       		.uleb128 0x3b
 4940 0100 05       		.uleb128 0x5
 4941 0101 49       		.uleb128 0x49
 4942 0102 13       		.uleb128 0x13
 4943 0103 02       		.uleb128 0x2
 4944 0104 18       		.uleb128 0x18
 4945 0105 00       		.byte	0
 4946 0106 00       		.byte	0
ARM GAS  C:\Users\IEUser\AppData\Local\Temp\cctak5Pf.s 			page 138


 4947 0107 13       		.uleb128 0x13
 4948 0108 2E       		.uleb128 0x2e
 4949 0109 01       		.byte	0x1
 4950 010a 3F       		.uleb128 0x3f
 4951 010b 19       		.uleb128 0x19
 4952 010c 03       		.uleb128 0x3
 4953 010d 0E       		.uleb128 0xe
 4954 010e 3A       		.uleb128 0x3a
 4955 010f 0B       		.uleb128 0xb
 4956 0110 3B       		.uleb128 0x3b
 4957 0111 05       		.uleb128 0x5
 4958 0112 27       		.uleb128 0x27
 4959 0113 19       		.uleb128 0x19
 4960 0114 49       		.uleb128 0x49
 4961 0115 13       		.uleb128 0x13
 4962 0116 11       		.uleb128 0x11
 4963 0117 01       		.uleb128 0x1
 4964 0118 12       		.uleb128 0x12
 4965 0119 06       		.uleb128 0x6
 4966 011a 40       		.uleb128 0x40
 4967 011b 18       		.uleb128 0x18
 4968 011c 9742     		.uleb128 0x2117
 4969 011e 19       		.uleb128 0x19
 4970 011f 01       		.uleb128 0x1
 4971 0120 13       		.uleb128 0x13
 4972 0121 00       		.byte	0
 4973 0122 00       		.byte	0
 4974 0123 14       		.uleb128 0x14
 4975 0124 2E       		.uleb128 0x2e
 4976 0125 01       		.byte	0x1
 4977 0126 3F       		.uleb128 0x3f
 4978 0127 19       		.uleb128 0x19
 4979 0128 03       		.uleb128 0x3
 4980 0129 0E       		.uleb128 0xe
 4981 012a 3A       		.uleb128 0x3a
 4982 012b 0B       		.uleb128 0xb
 4983 012c 3B       		.uleb128 0x3b
 4984 012d 05       		.uleb128 0x5
 4985 012e 27       		.uleb128 0x27
 4986 012f 19       		.uleb128 0x19
 4987 0130 11       		.uleb128 0x11
 4988 0131 01       		.uleb128 0x1
 4989 0132 12       		.uleb128 0x12
 4990 0133 06       		.uleb128 0x6
 4991 0134 40       		.uleb128 0x40
 4992 0135 18       		.uleb128 0x18
 4993 0136 9742     		.uleb128 0x2117
 4994 0138 19       		.uleb128 0x19
 4995 0139 01       		.uleb128 0x1
 4996 013a 13       		.uleb128 0x13
 4997 013b 00       		.byte	0
 4998 013c 00       		.byte	0
 4999 013d 15       		.uleb128 0x15
 5000 013e 2E       		.uleb128 0x2e
 5001 013f 01       		.byte	0x1
 5002 0140 3F       		.uleb128 0x3f
 5003 0141 19       		.uleb128 0x19
ARM GAS  C:\Users\IEUser\AppData\Local\Temp\cctak5Pf.s 			page 139


 5004 0142 03       		.uleb128 0x3
 5005 0143 0E       		.uleb128 0xe
 5006 0144 3A       		.uleb128 0x3a
 5007 0145 0B       		.uleb128 0xb
 5008 0146 3B       		.uleb128 0x3b
 5009 0147 05       		.uleb128 0x5
 5010 0148 27       		.uleb128 0x27
 5011 0149 19       		.uleb128 0x19
 5012 014a 49       		.uleb128 0x49
 5013 014b 13       		.uleb128 0x13
 5014 014c 11       		.uleb128 0x11
 5015 014d 01       		.uleb128 0x1
 5016 014e 12       		.uleb128 0x12
 5017 014f 06       		.uleb128 0x6
 5018 0150 40       		.uleb128 0x40
 5019 0151 18       		.uleb128 0x18
 5020 0152 9642     		.uleb128 0x2116
 5021 0154 19       		.uleb128 0x19
 5022 0155 01       		.uleb128 0x1
 5023 0156 13       		.uleb128 0x13
 5024 0157 00       		.byte	0
 5025 0158 00       		.byte	0
 5026 0159 16       		.uleb128 0x16
 5027 015a 01       		.uleb128 0x1
 5028 015b 01       		.byte	0x1
 5029 015c 49       		.uleb128 0x49
 5030 015d 13       		.uleb128 0x13
 5031 015e 01       		.uleb128 0x1
 5032 015f 13       		.uleb128 0x13
 5033 0160 00       		.byte	0
 5034 0161 00       		.byte	0
 5035 0162 17       		.uleb128 0x17
 5036 0163 21       		.uleb128 0x21
 5037 0164 00       		.byte	0
 5038 0165 49       		.uleb128 0x49
 5039 0166 13       		.uleb128 0x13
 5040 0167 2F       		.uleb128 0x2f
 5041 0168 0B       		.uleb128 0xb
 5042 0169 00       		.byte	0
 5043 016a 00       		.byte	0
 5044 016b 18       		.uleb128 0x18
 5045 016c 05       		.uleb128 0x5
 5046 016d 00       		.byte	0
 5047 016e 03       		.uleb128 0x3
 5048 016f 08       		.uleb128 0x8
 5049 0170 3A       		.uleb128 0x3a
 5050 0171 0B       		.uleb128 0xb
 5051 0172 3B       		.uleb128 0x3b
 5052 0173 05       		.uleb128 0x5
 5053 0174 49       		.uleb128 0x49
 5054 0175 13       		.uleb128 0x13
 5055 0176 02       		.uleb128 0x2
 5056 0177 18       		.uleb128 0x18
 5057 0178 00       		.byte	0
 5058 0179 00       		.byte	0
 5059 017a 19       		.uleb128 0x19
 5060 017b 2E       		.uleb128 0x2e
ARM GAS  C:\Users\IEUser\AppData\Local\Temp\cctak5Pf.s 			page 140


 5061 017c 00       		.byte	0
 5062 017d 3F       		.uleb128 0x3f
 5063 017e 19       		.uleb128 0x19
 5064 017f 03       		.uleb128 0x3
 5065 0180 0E       		.uleb128 0xe
 5066 0181 3A       		.uleb128 0x3a
 5067 0182 0B       		.uleb128 0xb
 5068 0183 3B       		.uleb128 0x3b
 5069 0184 05       		.uleb128 0x5
 5070 0185 27       		.uleb128 0x27
 5071 0186 19       		.uleb128 0x19
 5072 0187 11       		.uleb128 0x11
 5073 0188 01       		.uleb128 0x1
 5074 0189 12       		.uleb128 0x12
 5075 018a 06       		.uleb128 0x6
 5076 018b 40       		.uleb128 0x40
 5077 018c 18       		.uleb128 0x18
 5078 018d 9742     		.uleb128 0x2117
 5079 018f 19       		.uleb128 0x19
 5080 0190 00       		.byte	0
 5081 0191 00       		.byte	0
 5082 0192 1A       		.uleb128 0x1a
 5083 0193 34       		.uleb128 0x34
 5084 0194 00       		.byte	0
 5085 0195 03       		.uleb128 0x3
 5086 0196 0E       		.uleb128 0xe
 5087 0197 3A       		.uleb128 0x3a
 5088 0198 0B       		.uleb128 0xb
 5089 0199 3B       		.uleb128 0x3b
 5090 019a 0B       		.uleb128 0xb
 5091 019b 49       		.uleb128 0x49
 5092 019c 13       		.uleb128 0x13
 5093 019d 02       		.uleb128 0x2
 5094 019e 18       		.uleb128 0x18
 5095 019f 00       		.byte	0
 5096 01a0 00       		.byte	0
 5097 01a1 1B       		.uleb128 0x1b
 5098 01a2 34       		.uleb128 0x34
 5099 01a3 00       		.byte	0
 5100 01a4 03       		.uleb128 0x3
 5101 01a5 0E       		.uleb128 0xe
 5102 01a6 3A       		.uleb128 0x3a
 5103 01a7 0B       		.uleb128 0xb
 5104 01a8 3B       		.uleb128 0x3b
 5105 01a9 0B       		.uleb128 0xb
 5106 01aa 49       		.uleb128 0x49
 5107 01ab 13       		.uleb128 0x13
 5108 01ac 3F       		.uleb128 0x3f
 5109 01ad 19       		.uleb128 0x19
 5110 01ae 3C       		.uleb128 0x3c
 5111 01af 19       		.uleb128 0x19
 5112 01b0 00       		.byte	0
 5113 01b1 00       		.byte	0
 5114 01b2 1C       		.uleb128 0x1c
 5115 01b3 34       		.uleb128 0x34
 5116 01b4 00       		.byte	0
 5117 01b5 03       		.uleb128 0x3
ARM GAS  C:\Users\IEUser\AppData\Local\Temp\cctak5Pf.s 			page 141


 5118 01b6 0E       		.uleb128 0xe
 5119 01b7 3A       		.uleb128 0x3a
 5120 01b8 0B       		.uleb128 0xb
 5121 01b9 3B       		.uleb128 0x3b
 5122 01ba 0B       		.uleb128 0xb
 5123 01bb 49       		.uleb128 0x49
 5124 01bc 13       		.uleb128 0x13
 5125 01bd 3F       		.uleb128 0x3f
 5126 01be 19       		.uleb128 0x19
 5127 01bf 02       		.uleb128 0x2
 5128 01c0 18       		.uleb128 0x18
 5129 01c1 00       		.byte	0
 5130 01c2 00       		.byte	0
 5131 01c3 00       		.byte	0
 5132              		.section	.debug_aranges,"",%progbits
 5133 0000 4C010000 		.4byte	0x14c
 5134 0004 0200     		.2byte	0x2
 5135 0006 00000000 		.4byte	.Ldebug_info0
 5136 000a 04       		.byte	0x4
 5137 000b 00       		.byte	0
 5138 000c 0000     		.2byte	0
 5139 000e 0000     		.2byte	0
 5140 0010 00000000 		.4byte	.LFB33
 5141 0014 58000000 		.4byte	.LFE33-.LFB33
 5142 0018 00000000 		.4byte	.LFB34
 5143 001c 2A000000 		.4byte	.LFE34-.LFB34
 5144 0020 00000000 		.4byte	.LFB35
 5145 0024 26000000 		.4byte	.LFE35-.LFB35
 5146 0028 00000000 		.4byte	.LFB36
 5147 002c 50000000 		.4byte	.LFE36-.LFB36
 5148 0030 00000000 		.4byte	.LFB37
 5149 0034 28020000 		.4byte	.LFE37-.LFB37
 5150 0038 00000000 		.4byte	.LFB38
 5151 003c 1E000000 		.4byte	.LFE38-.LFB38
 5152 0040 00000000 		.4byte	.LFB39
 5153 0044 40000000 		.4byte	.LFE39-.LFB39
 5154 0048 00000000 		.4byte	.LFB40
 5155 004c 58000000 		.4byte	.LFE40-.LFB40
 5156 0050 00000000 		.4byte	.LFB41
 5157 0054 1C000000 		.4byte	.LFE41-.LFB41
 5158 0058 00000000 		.4byte	.LFB42
 5159 005c 24000000 		.4byte	.LFE42-.LFB42
 5160 0060 00000000 		.4byte	.LFB43
 5161 0064 1C000000 		.4byte	.LFE43-.LFB43
 5162 0068 00000000 		.4byte	.LFB44
 5163 006c 24000000 		.4byte	.LFE44-.LFB44
 5164 0070 00000000 		.4byte	.LFB45
 5165 0074 1C000000 		.4byte	.LFE45-.LFB45
 5166 0078 00000000 		.4byte	.LFB46
 5167 007c 1C000000 		.4byte	.LFE46-.LFB46
 5168 0080 00000000 		.4byte	.LFB47
 5169 0084 1C000000 		.4byte	.LFE47-.LFB47
 5170 0088 00000000 		.4byte	.LFB48
 5171 008c 1C000000 		.4byte	.LFE48-.LFB48
 5172 0090 00000000 		.4byte	.LFB49
 5173 0094 24000000 		.4byte	.LFE49-.LFB49
 5174 0098 00000000 		.4byte	.LFB50
ARM GAS  C:\Users\IEUser\AppData\Local\Temp\cctak5Pf.s 			page 142


 5175 009c 24000000 		.4byte	.LFE50-.LFB50
 5176 00a0 00000000 		.4byte	.LFB51
 5177 00a4 24000000 		.4byte	.LFE51-.LFB51
 5178 00a8 00000000 		.4byte	.LFB52
 5179 00ac 24000000 		.4byte	.LFE52-.LFB52
 5180 00b0 00000000 		.4byte	.LFB53
 5181 00b4 24000000 		.4byte	.LFE53-.LFB53
 5182 00b8 00000000 		.4byte	.LFB54
 5183 00bc 24000000 		.4byte	.LFE54-.LFB54
 5184 00c0 00000000 		.4byte	.LFB55
 5185 00c4 40010000 		.4byte	.LFE55-.LFB55
 5186 00c8 00000000 		.4byte	.LFB56
 5187 00cc 44000000 		.4byte	.LFE56-.LFB56
 5188 00d0 00000000 		.4byte	.LFB57
 5189 00d4 38000000 		.4byte	.LFE57-.LFB57
 5190 00d8 00000000 		.4byte	.LFB58
 5191 00dc 5C000000 		.4byte	.LFE58-.LFB58
 5192 00e0 00000000 		.4byte	.LFB59
 5193 00e4 5C000000 		.4byte	.LFE59-.LFB59
 5194 00e8 00000000 		.4byte	.LFB60
 5195 00ec AC000000 		.4byte	.LFE60-.LFB60
 5196 00f0 00000000 		.4byte	.LFB61
 5197 00f4 94010000 		.4byte	.LFE61-.LFB61
 5198 00f8 00000000 		.4byte	.LFB62
 5199 00fc 5C010000 		.4byte	.LFE62-.LFB62
 5200 0100 00000000 		.4byte	.LFB63
 5201 0104 98000000 		.4byte	.LFE63-.LFB63
 5202 0108 00000000 		.4byte	.LFB64
 5203 010c 6A000000 		.4byte	.LFE64-.LFB64
 5204 0110 00000000 		.4byte	.LFB65
 5205 0114 3C000000 		.4byte	.LFE65-.LFB65
 5206 0118 00000000 		.4byte	.LFB66
 5207 011c 4C000000 		.4byte	.LFE66-.LFB66
 5208 0120 00000000 		.4byte	.LFB67
 5209 0124 1C000000 		.4byte	.LFE67-.LFB67
 5210 0128 00000000 		.4byte	.LFB68
 5211 012c 1C000000 		.4byte	.LFE68-.LFB68
 5212 0130 00000000 		.4byte	.LFB69
 5213 0134 1C000000 		.4byte	.LFE69-.LFB69
 5214 0138 00000000 		.4byte	.LFB70
 5215 013c 14000000 		.4byte	.LFE70-.LFB70
 5216 0140 00000000 		.4byte	.LFB71
 5217 0144 14000000 		.4byte	.LFE71-.LFB71
 5218 0148 00000000 		.4byte	0
 5219 014c 00000000 		.4byte	0
 5220              		.section	.debug_ranges,"",%progbits
 5221              	.Ldebug_ranges0:
 5222 0000 00000000 		.4byte	.LFB33
 5223 0004 58000000 		.4byte	.LFE33
 5224 0008 00000000 		.4byte	.LFB34
 5225 000c 2A000000 		.4byte	.LFE34
 5226 0010 00000000 		.4byte	.LFB35
 5227 0014 26000000 		.4byte	.LFE35
 5228 0018 00000000 		.4byte	.LFB36
 5229 001c 50000000 		.4byte	.LFE36
 5230 0020 00000000 		.4byte	.LFB37
 5231 0024 28020000 		.4byte	.LFE37
ARM GAS  C:\Users\IEUser\AppData\Local\Temp\cctak5Pf.s 			page 143


 5232 0028 00000000 		.4byte	.LFB38
 5233 002c 1E000000 		.4byte	.LFE38
 5234 0030 00000000 		.4byte	.LFB39
 5235 0034 40000000 		.4byte	.LFE39
 5236 0038 00000000 		.4byte	.LFB40
 5237 003c 58000000 		.4byte	.LFE40
 5238 0040 00000000 		.4byte	.LFB41
 5239 0044 1C000000 		.4byte	.LFE41
 5240 0048 00000000 		.4byte	.LFB42
 5241 004c 24000000 		.4byte	.LFE42
 5242 0050 00000000 		.4byte	.LFB43
 5243 0054 1C000000 		.4byte	.LFE43
 5244 0058 00000000 		.4byte	.LFB44
 5245 005c 24000000 		.4byte	.LFE44
 5246 0060 00000000 		.4byte	.LFB45
 5247 0064 1C000000 		.4byte	.LFE45
 5248 0068 00000000 		.4byte	.LFB46
 5249 006c 1C000000 		.4byte	.LFE46
 5250 0070 00000000 		.4byte	.LFB47
 5251 0074 1C000000 		.4byte	.LFE47
 5252 0078 00000000 		.4byte	.LFB48
 5253 007c 1C000000 		.4byte	.LFE48
 5254 0080 00000000 		.4byte	.LFB49
 5255 0084 24000000 		.4byte	.LFE49
 5256 0088 00000000 		.4byte	.LFB50
 5257 008c 24000000 		.4byte	.LFE50
 5258 0090 00000000 		.4byte	.LFB51
 5259 0094 24000000 		.4byte	.LFE51
 5260 0098 00000000 		.4byte	.LFB52
 5261 009c 24000000 		.4byte	.LFE52
 5262 00a0 00000000 		.4byte	.LFB53
 5263 00a4 24000000 		.4byte	.LFE53
 5264 00a8 00000000 		.4byte	.LFB54
 5265 00ac 24000000 		.4byte	.LFE54
 5266 00b0 00000000 		.4byte	.LFB55
 5267 00b4 40010000 		.4byte	.LFE55
 5268 00b8 00000000 		.4byte	.LFB56
 5269 00bc 44000000 		.4byte	.LFE56
 5270 00c0 00000000 		.4byte	.LFB57
 5271 00c4 38000000 		.4byte	.LFE57
 5272 00c8 00000000 		.4byte	.LFB58
 5273 00cc 5C000000 		.4byte	.LFE58
 5274 00d0 00000000 		.4byte	.LFB59
 5275 00d4 5C000000 		.4byte	.LFE59
 5276 00d8 00000000 		.4byte	.LFB60
 5277 00dc AC000000 		.4byte	.LFE60
 5278 00e0 00000000 		.4byte	.LFB61
 5279 00e4 94010000 		.4byte	.LFE61
 5280 00e8 00000000 		.4byte	.LFB62
 5281 00ec 5C010000 		.4byte	.LFE62
 5282 00f0 00000000 		.4byte	.LFB63
 5283 00f4 98000000 		.4byte	.LFE63
 5284 00f8 00000000 		.4byte	.LFB64
 5285 00fc 6A000000 		.4byte	.LFE64
 5286 0100 00000000 		.4byte	.LFB65
 5287 0104 3C000000 		.4byte	.LFE65
 5288 0108 00000000 		.4byte	.LFB66
ARM GAS  C:\Users\IEUser\AppData\Local\Temp\cctak5Pf.s 			page 144


 5289 010c 4C000000 		.4byte	.LFE66
 5290 0110 00000000 		.4byte	.LFB67
 5291 0114 1C000000 		.4byte	.LFE67
 5292 0118 00000000 		.4byte	.LFB68
 5293 011c 1C000000 		.4byte	.LFE68
 5294 0120 00000000 		.4byte	.LFB69
 5295 0124 1C000000 		.4byte	.LFE69
 5296 0128 00000000 		.4byte	.LFB70
 5297 012c 14000000 		.4byte	.LFE70
 5298 0130 00000000 		.4byte	.LFB71
 5299 0134 14000000 		.4byte	.LFE71
 5300 0138 00000000 		.4byte	0
 5301 013c 00000000 		.4byte	0
 5302              		.section	.debug_line,"",%progbits
 5303              	.Ldebug_line0:
 5304 0000 9C040000 		.section	.debug_str,"MS",%progbits,1
 5304      02005E00 
 5304      00000201 
 5304      FB0E0D00 
 5304      01010101 
 5305              	.LASF122:
 5306 0000 43617053 		.ascii	"CapSense_sensorBaselineLow\000"
 5306      656E7365 
 5306      5F73656E 
 5306      736F7242 
 5306      6173656C 
 5307              	.LASF108:
 5308 001b 43617053 		.ascii	"CapSense_IIR4Filter\000"
 5308      656E7365 
 5308      5F494952 
 5308      3446696C 
 5308      74657200 
 5309              	.LASF80:
 5310 002f 43617053 		.ascii	"CapSense_debounceCounter\000"
 5310      656E7365 
 5310      5F646562 
 5310      6F756E63 
 5310      65436F75 
 5311              	.LASF39:
 5312 0048 43617053 		.ascii	"CapSense_CONFIG_TYPE_P4_v2_20\000"
 5312      656E7365 
 5312      5F434F4E 
 5312      4649475F 
 5312      54595045 
 5313              	.LASF46:
 5314 0066 43617053 		.ascii	"CapSense_UpdateBaselineNoThreshold\000"
 5314      656E7365 
 5314      5F557064 
 5314      61746542 
 5314      6173656C 
 5315              	.LASF26:
 5316 0089 6E756D62 		.ascii	"numberOfSensors\000"
 5316      65724F66 
 5316      53656E73 
 5316      6F727300 
 5317              	.LASF30:
 5318 0099 70747247 		.ascii	"ptrGetBitValue\000"
ARM GAS  C:\Users\IEUser\AppData\Local\Temp\cctak5Pf.s 			page 145


 5318      65744269 
 5318      7456616C 
 5318      756500
 5319              	.LASF87:
 5320 00a8 43617053 		.ascii	"CapSense_DisableWidget\000"
 5320      656E7365 
 5320      5F446973 
 5320      61626C65 
 5320      57696467 
 5321              	.LASF54:
 5322 00bf 43617053 		.ascii	"CapSense_UpdateEnabledBaselines\000"
 5322      656E7365 
 5322      5F557064 
 5322      61746545 
 5322      6E61626C 
 5323              	.LASF103:
 5324 00df 706F7349 		.ascii	"posIndex\000"
 5324      6E646578 
 5324      00
 5325              	.LASF135:
 5326 00e8 43617053 		.ascii	"CapSense_config\000"
 5326      656E7365 
 5326      5F636F6E 
 5326      66696700 
 5327              	.LASF45:
 5328 00f8 69735365 		.ascii	"isSensorEnabled\000"
 5328      6E736F72 
 5328      456E6162 
 5328      6C656400 
 5329              	.LASF83:
 5330 0108 6E756D4F 		.ascii	"numOfSensors\000"
 5330      6653656E 
 5330      736F7273 
 5330      00
 5331              	.LASF8:
 5332 0115 756E7369 		.ascii	"unsigned int\000"
 5332      676E6564 
 5332      20696E74 
 5332      00
 5333              	.LASF35:
 5334 0122 746F7461 		.ascii	"totalSensorsNum\000"
 5334      6C53656E 
 5334      736F7273 
 5334      4E756D00 
 5335              	.LASF97:
 5336 0132 706F734E 		.ascii	"posNext\000"
 5336      65787400 
 5337              	.LASF12:
 5338 013a 696E7431 		.ascii	"int16\000"
 5338      3600
 5339              	.LASF44:
 5340 0140 43617053 		.ascii	"CapSense_InitializeEnabledBaselines\000"
 5340      656E7365 
 5340      5F496E69 
 5340      7469616C 
 5340      697A6545 
 5341              	.LASF117:
ARM GAS  C:\Users\IEUser\AppData\Local\Temp\cctak5Pf.s 			page 146


 5342 0164 43617053 		.ascii	"CapSense_posFiltersData\000"
 5342      656E7365 
 5342      5F706F73 
 5342      46696C74 
 5342      65727344 
 5343              	.LASF131:
 5344 017c 43617053 		.ascii	"CapSense_debounce\000"
 5344      656E7365 
 5344      5F646562 
 5344      6F756E63 
 5344      6500
 5345              	.LASF41:
 5346 018e 43617053 		.ascii	"CapSense_InitializeSensorBaseline\000"
 5346      656E7365 
 5346      5F496E69 
 5346      7469616C 
 5346      697A6553 
 5347              	.LASF96:
 5348 01b0 706F7350 		.ascii	"posPrev\000"
 5348      72657600 
 5349              	.LASF139:
 5350 01b8 433A5C55 		.ascii	"C:\\Users\\IEUser\\Documents\\GitHub\\piezo-sensor\\"
 5350      73657273 
 5350      5C494555 
 5350      7365725C 
 5350      446F6375 
 5351 01e6 4D792046 		.ascii	"My First Project.cydsn\000"
 5351      69727374 
 5351      2050726F 
 5351      6A656374 
 5351      2E637964 
 5352              	.LASF59:
 5353 01fd 43617053 		.ascii	"CapSense_SetBaselineData\000"
 5353      656E7365 
 5353      5F536574 
 5353      42617365 
 5353      6C696E65 
 5354              	.LASF25:
 5355 0216 72617744 		.ascii	"rawDataIndex\000"
 5355      61746149 
 5355      6E646578 
 5355      00
 5356              	.LASF34:
 5357 0223 746F7461 		.ascii	"totalWidgetsNum\000"
 5357      6C576964 
 5357      67657473 
 5357      4E756D00 
 5358              	.LASF63:
 5359 0233 43617053 		.ascii	"CapSense_SetDiffCountData\000"
 5359      656E7365 
 5359      5F536574 
 5359      44696666 
 5359      436F756E 
 5360              	.LASF123:
 5361 024d 43617053 		.ascii	"CapSense_sensorSignal\000"
 5361      656E7365 
 5361      5F73656E 
ARM GAS  C:\Users\IEUser\AppData\Local\Temp\cctak5Pf.s 			page 147


 5361      736F7253 
 5361      69676E61 
 5362              	.LASF125:
 5363 0263 43617053 		.ascii	"CapSense_lowBaselineResetCnt\000"
 5363      656E7365 
 5363      5F6C6F77 
 5363      42617365 
 5363      6C696E65 
 5364              	.LASF132:
 5365 0280 43617053 		.ascii	"CapSense_rawDataIndex\000"
 5365      656E7365 
 5365      5F726177 
 5365      44617461 
 5365      496E6465 
 5366              	.LASF70:
 5367 0296 43617053 		.ascii	"CapSense_SetNoiseThreshold\000"
 5367      656E7365 
 5367      5F536574 
 5367      4E6F6973 
 5367      65546872 
 5368              	.LASF55:
 5369 02b1 43617053 		.ascii	"CapSense_UpdateWidgetBaseline\000"
 5369      656E7365 
 5369      5F557064 
 5369      61746557 
 5369      69646765 
 5370              	.LASF130:
 5371 02cf 43617053 		.ascii	"CapSense_hysteresis\000"
 5371      656E7365 
 5371      5F687973 
 5371      74657265 
 5371      73697300 
 5372              	.LASF14:
 5373 02e3 666C6F61 		.ascii	"float\000"
 5373      7400
 5374              	.LASF13:
 5375 02e9 696E7433 		.ascii	"int32\000"
 5375      3200
 5376              	.LASF90:
 5377 02ef 636F756E 		.ascii	"count\000"
 5377      7400
 5378              	.LASF24:
 5379 02f5 7265736F 		.ascii	"resolutionsTbl\000"
 5379      6C757469 
 5379      6F6E7354 
 5379      626C00
 5380              	.LASF105:
 5381 0304 706F7346 		.ascii	"posFiltersMask\000"
 5381      696C7465 
 5381      72734D61 
 5381      736B00
 5382              	.LASF66:
 5383 0313 43617053 		.ascii	"CapSense_GetNoiseThreshold\000"
 5383      656E7365 
 5383      5F476574 
 5383      4E6F6973 
 5383      65546872 
ARM GAS  C:\Users\IEUser\AppData\Local\Temp\cctak5Pf.s 			page 148


 5384              	.LASF7:
 5385 032e 6C6F6E67 		.ascii	"long long unsigned int\000"
 5385      206C6F6E 
 5385      6720756E 
 5385      7369676E 
 5385      65642069 
 5386              	.LASF119:
 5387 0345 43617053 		.ascii	"CapSense_sensorEnableMask\000"
 5387      656E7365 
 5387      5F73656E 
 5387      736F7245 
 5387      6E61626C 
 5388              	.LASF51:
 5389 035f 77696467 		.ascii	"widget\000"
 5389      657400
 5390              	.LASF116:
 5391 0366 43617053 		.ascii	"CapSense_posFiltersMask\000"
 5391      656E7365 
 5391      5F706F73 
 5391      46696C74 
 5391      6572734D 
 5392              	.LASF127:
 5393 037e 43617053 		.ascii	"CapSense_fingerThreshold\000"
 5393      656E7365 
 5393      5F66696E 
 5393      67657254 
 5393      68726573 
 5394              	.LASF120:
 5395 0397 43617053 		.ascii	"CapSense_widgetNumber\000"
 5395      656E7365 
 5395      5F776964 
 5395      6765744E 
 5395      756D6265 
 5396              	.LASF69:
 5397 03ad 43617053 		.ascii	"CapSense_SetFingerThreshold\000"
 5397      656E7365 
 5397      5F536574 
 5397      46696E67 
 5397      65725468 
 5398              	.LASF114:
 5399 03c9 43617053 		.ascii	"CapSense_DisableRawDataFilters\000"
 5399      656E7365 
 5399      5F446973 
 5399      61626C65 
 5399      52617744 
 5400              	.LASF64:
 5401 03e8 76616C75 		.ascii	"value\000"
 5401      6500
 5402              	.LASF67:
 5403 03ee 43617053 		.ascii	"CapSense_GetFingerHysteresis\000"
 5403      656E7365 
 5403      5F476574 
 5403      46696E67 
 5403      65724879 
 5404              	.LASF62:
 5405 040b 43617053 		.ascii	"CapSense_GetDiffCountData\000"
 5405      656E7365 
ARM GAS  C:\Users\IEUser\AppData\Local\Temp\cctak5Pf.s 			page 149


 5405      5F476574 
 5405      44696666 
 5405      436F756E 
 5406              	.LASF48:
 5407 0425 7369676E 		.ascii	"sign\000"
 5407      00
 5408              	.LASF89:
 5409 042a 6F666673 		.ascii	"offset\000"
 5409      657400
 5410              	.LASF47:
 5411 0431 63616C63 		.ascii	"calc\000"
 5411      00
 5412              	.LASF29:
 5413 0436 70747252 		.ascii	"ptrReadSensorRaw\000"
 5413      65616453 
 5413      656E736F 
 5413      72526177 
 5413      00
 5414              	.LASF79:
 5415 0447 68797374 		.ascii	"hysteresis\000"
 5415      65726573 
 5415      697300
 5416              	.LASF50:
 5417 0452 66696C74 		.ascii	"filteredRawData\000"
 5417      65726564 
 5417      52617744 
 5417      61746100 
 5418              	.LASF56:
 5419 0462 73656E73 		.ascii	"sensorsPerWidget\000"
 5419      6F727350 
 5419      65725769 
 5419      64676574 
 5419      00
 5420              	.LASF85:
 5421 0473 43617053 		.ascii	"CapSense_CheckIsAnyWidgetActive\000"
 5421      656E7365 
 5421      5F436865 
 5421      636B4973 
 5421      416E7957 
 5422              	.LASF133:
 5423 0493 43617053 		.ascii	"CapSense_numberOfSensors\000"
 5423      656E7365 
 5423      5F6E756D 
 5423      6265724F 
 5423      6653656E 
 5424              	.LASF129:
 5425 04ac 43617053 		.ascii	"CapSense_negativeNoiseThreshold\000"
 5425      656E7365 
 5425      5F6E6567 
 5425      61746976 
 5425      654E6F69 
 5426              	.LASF33:
 5427 04cc 746F7461 		.ascii	"totalScanslotsNum\000"
 5427      6C536361 
 5427      6E736C6F 
 5427      74734E75 
 5427      6D00
ARM GAS  C:\Users\IEUser\AppData\Local\Temp\cctak5Pf.s 			page 150


 5428              	.LASF42:
 5429 04de 73656E73 		.ascii	"sensor\000"
 5429      6F7200
 5430              	.LASF36:
 5431 04e5 73656E73 		.ascii	"sensetivitySeed\000"
 5431      65746976 
 5431      69747953 
 5431      65656400 
 5432              	.LASF86:
 5433 04f5 43617053 		.ascii	"CapSense_EnableWidget\000"
 5433      656E7365 
 5433      5F456E61 
 5433      626C6557 
 5433      69646765 
 5434              	.LASF16:
 5435 050b 63686172 		.ascii	"char\000"
 5435      00
 5436              	.LASF68:
 5437 0510 43617053 		.ascii	"CapSense_GetNegativeNoiseThreshold\000"
 5437      656E7365 
 5437      5F476574 
 5437      4E656761 
 5437      74697665 
 5438              	.LASF10:
 5439 0533 75696E74 		.ascii	"uint16\000"
 5439      313600
 5440              	.LASF60:
 5441 053a 64617461 		.ascii	"data\000"
 5441      00
 5442              	.LASF18:
 5443 053f 69646163 		.ascii	"idac1LevelsTbl\000"
 5443      314C6576 
 5443      656C7354 
 5443      626C00
 5444              	.LASF95:
 5445 054e 7265736F 		.ascii	"resolution\000"
 5445      6C757469 
 5445      6F6E00
 5446              	.LASF82:
 5447 0559 72617749 		.ascii	"rawIndex\000"
 5447      6E646578 
 5447      00
 5448              	.LASF98:
 5449 0562 43617053 		.ascii	"CapSense_centroid\000"
 5449      656E7365 
 5449      5F63656E 
 5449      74726F69 
 5449      6400
 5450              	.LASF138:
 5451 0574 2E5C4765 		.ascii	".\\Generated_Source\\PSoC4\\CapSense_CSHL.c\000"
 5451      6E657261 
 5451      7465645F 
 5451      536F7572 
 5451      63655C50 
 5452              	.LASF6:
 5453 059d 6C6F6E67 		.ascii	"long long int\000"
 5453      206C6F6E 
ARM GAS  C:\Users\IEUser\AppData\Local\Temp\cctak5Pf.s 			page 151


 5453      6720696E 
 5453      7400
 5454              	.LASF110:
 5455 05ab 43617053 		.ascii	"CapSense_GetWidgetNumber\000"
 5455      656E7365 
 5455      5F476574 
 5455      57696467 
 5455      65744E75 
 5456              	.LASF76:
 5457 05c4 6465626F 		.ascii	"debounce\000"
 5457      756E6365 
 5457      00
 5458              	.LASF28:
 5459 05cd 70747250 		.ascii	"ptrPreScan\000"
 5459      72655363 
 5459      616E00
 5460              	.LASF75:
 5461 05d8 43617053 		.ascii	"CapSense_CheckIsSensorActive\000"
 5461      656E7365 
 5461      5F436865 
 5461      636B4973 
 5461      53656E73 
 5462              	.LASF27:
 5463 05f5 70747247 		.ascii	"ptrGetRaw\000"
 5463      65745261 
 5463      7700
 5464              	.LASF53:
 5465 05ff 43617053 		.ascii	"CapSense_UpdateSensorBaseline\000"
 5465      656E7365 
 5465      5F557064 
 5465      61746553 
 5465      656E736F 
 5466              	.LASF40:
 5467 061d 43617053 		.ascii	"CapSense_BaseInit\000"
 5467      656E7365 
 5467      5F426173 
 5467      65496E69 
 5467      7400
 5468              	.LASF94:
 5469 062f 43617053 		.ascii	"CapSense_CalcCentroid\000"
 5469      656E7365 
 5469      5F43616C 
 5469      6343656E 
 5469      74726F69 
 5470              	.LASF118:
 5471 0645 43617053 		.ascii	"CapSense_sensorRaw\000"
 5471      656E7365 
 5471      5F73656E 
 5471      736F7252 
 5471      617700
 5472              	.LASF111:
 5473 0658 43617053 		.ascii	"CapSense_GetLowBaselineReset\000"
 5473      656E7365 
 5473      5F476574 
 5473      4C6F7742 
 5473      6173656C 
 5474              	.LASF72:
ARM GAS  C:\Users\IEUser\AppData\Local\Temp\cctak5Pf.s 			page 152


 5475 0675 43617053 		.ascii	"CapSense_SetNegativeNoiseThreshold\000"
 5475      656E7365 
 5475      5F536574 
 5475      4E656761 
 5475      74697665 
 5476              	.LASF11:
 5477 0698 75696E74 		.ascii	"uint32\000"
 5477      333200
 5478              	.LASF104:
 5479 069f 66697273 		.ascii	"firstTimeIndex\000"
 5479      7454696D 
 5479      65496E64 
 5479      657800
 5480              	.LASF93:
 5481 06ae 73746172 		.ascii	"startOfSlider\000"
 5481      744F6653 
 5481      6C696465 
 5481      7200
 5482              	.LASF71:
 5483 06bc 43617053 		.ascii	"CapSense_SetFingerHysteresis\000"
 5483      656E7365 
 5483      5F536574 
 5483      46696E67 
 5483      65724879 
 5484              	.LASF65:
 5485 06d9 43617053 		.ascii	"CapSense_GetFingerThreshold\000"
 5485      656E7365 
 5485      5F476574 
 5485      46696E67 
 5485      65725468 
 5486              	.LASF137:
 5487 06f5 474E5520 		.ascii	"GNU C 4.8.4 20140526 (release) [ARM/embedded-4_8-br"
 5487      4320342E 
 5487      382E3420 
 5487      32303134 
 5487      30353236 
 5488 0728 616E6368 		.ascii	"anch revision 211358] -mcpu=cortex-m0 -mthumb -g -O"
 5488      20726576 
 5488      6973696F 
 5488      6E203231 
 5488      31333538 
 5489 075b 30202D66 		.ascii	"0 -ffunction-sections\000"
 5489      66756E63 
 5489      74696F6E 
 5489      2D736563 
 5489      74696F6E 
 5490              	.LASF100:
 5491 0771 6E756D65 		.ascii	"numerator\000"
 5491      7261746F 
 5491      7200
 5492              	.LASF58:
 5493 077b 6C617374 		.ascii	"lastSensor\000"
 5493      53656E73 
 5493      6F7200
 5494              	.LASF37:
 5495 0786 6866636C 		.ascii	"hfclkFreq_MHz\000"
 5495      6B467265 
ARM GAS  C:\Users\IEUser\AppData\Local\Temp\cctak5Pf.s 			page 153


 5495      715F4D48 
 5495      7A00
 5496              	.LASF102:
 5497 0794 43617053 		.ascii	"CapSense_GetCentroidPos\000"
 5497      656E7365 
 5497      5F476574 
 5497      43656E74 
 5497      726F6964 
 5498              	.LASF19:
 5499 07ac 69646163 		.ascii	"idac2LevelsTbl\000"
 5499      324C6576 
 5499      656C7354 
 5499      626C00
 5500              	.LASF2:
 5501 07bb 73686F72 		.ascii	"short int\000"
 5501      7420696E 
 5501      7400
 5502              	.LASF4:
 5503 07c5 6C6F6E67 		.ascii	"long int\000"
 5503      20696E74 
 5503      00
 5504              	.LASF57:
 5505 07ce 66697273 		.ascii	"firstSensor\000"
 5505      7453656E 
 5505      736F7200 
 5506              	.LASF92:
 5507 07da 74656D70 		.ascii	"temp\000"
 5507      00
 5508              	.LASF88:
 5509 07df 43617053 		.ascii	"CapSense_FindMaximum\000"
 5509      656E7365 
 5509      5F46696E 
 5509      644D6178 
 5509      696D756D 
 5510              	.LASF23:
 5511 07f4 77696467 		.ascii	"widgetNubmersTbl\000"
 5511      65744E75 
 5511      626D6572 
 5511      7354626C 
 5511      00
 5512              	.LASF113:
 5513 0805 43617053 		.ascii	"CapSense_EnableRawDataFilters\000"
 5513      656E7365 
 5513      5F456E61 
 5513      626C6552 
 5513      61774461 
 5514              	.LASF126:
 5515 0823 43617053 		.ascii	"CapSense_lowBaselineReset\000"
 5515      656E7365 
 5515      5F6C6F77 
 5515      42617365 
 5515      6C696E65 
 5516              	.LASF101:
 5517 083d 64656E6F 		.ascii	"denominator\000"
 5517      6D696E61 
 5517      746F7200 
 5518              	.LASF121:
ARM GAS  C:\Users\IEUser\AppData\Local\Temp\cctak5Pf.s 			page 154


 5519 0849 43617053 		.ascii	"CapSense_sensorBaseline\000"
 5519      656E7365 
 5519      5F73656E 
 5519      736F7242 
 5519      6173656C 
 5520              	.LASF91:
 5521 0861 6D617869 		.ascii	"maximum\000"
 5521      6D756D00 
 5522              	.LASF17:
 5523 0869 73697A65 		.ascii	"sizetype\000"
 5523      74797065 
 5523      00
 5524              	.LASF5:
 5525 0872 6C6F6E67 		.ascii	"long unsigned int\000"
 5525      20756E73 
 5525      69676E65 
 5525      6420696E 
 5525      7400
 5526              	.LASF38:
 5527 0884 706F696E 		.ascii	"pointers\000"
 5527      74657273 
 5527      00
 5528              	.LASF52:
 5529 088d 6E6F6973 		.ascii	"noiseThreshold\000"
 5529      65546872 
 5529      6573686F 
 5529      6C6400
 5530              	.LASF32:
 5531 089c 43617053 		.ascii	"CapSense_CONFIG_TYPE_POINTERS_P4_v2_20\000"
 5531      656E7365 
 5531      5F434F4E 
 5531      4649475F 
 5531      54595045 
 5532              	.LASF109:
 5533 08c3 43617053 		.ascii	"CapSense_JitterFilter\000"
 5533      656E7365 
 5533      5F4A6974 
 5533      74657246 
 5533      696C7465 
 5534              	.LASF73:
 5535 08d9 43617053 		.ascii	"CapSense_SetDebounce\000"
 5535      656E7365 
 5535      5F536574 
 5535      4465626F 
 5535      756E6365 
 5536              	.LASF78:
 5537 08ee 66696E67 		.ascii	"fingerThreshold\000"
 5537      65725468 
 5537      72657368 
 5537      6F6C6400 
 5538              	.LASF21:
 5539 08fe 63686172 		.ascii	"chargeDivTbl\000"
 5539      67654469 
 5539      7654626C 
 5539      00
 5540              	.LASF1:
 5541 090b 756E7369 		.ascii	"unsigned char\000"
ARM GAS  C:\Users\IEUser\AppData\Local\Temp\cctak5Pf.s 			page 155


 5541      676E6564 
 5541      20636861 
 5541      7200
 5542              	.LASF128:
 5543 0919 43617053 		.ascii	"CapSense_noiseThreshold\000"
 5543      656E7365 
 5543      5F6E6F69 
 5543      73655468 
 5543      72657368 
 5544              	.LASF77:
 5545 0931 6465626F 		.ascii	"debounceIndex\000"
 5545      756E6365 
 5545      496E6465 
 5545      7800
 5546              	.LASF43:
 5547 093f 43617053 		.ascii	"CapSense_InitializeAllBaselines\000"
 5547      656E7365 
 5547      5F496E69 
 5547      7469616C 
 5547      697A6541 
 5548              	.LASF61:
 5549 095f 43617053 		.ascii	"CapSense_GetBaselineData\000"
 5549      656E7365 
 5549      5F476574 
 5549      42617365 
 5549      6C696E65 
 5550              	.LASF74:
 5551 0978 43617053 		.ascii	"CapSense_SetLowBaselineReset\000"
 5551      656E7365 
 5551      5F536574 
 5551      4C6F7742 
 5551      6173656C 
 5552              	.LASF20:
 5553 0995 73656E73 		.ascii	"sensetivityTbl\000"
 5553      65746976 
 5553      69747954 
 5553      626C00
 5554              	.LASF115:
 5555 09a4 43617053 		.ascii	"CapSense_centroidMult\000"
 5555      656E7365 
 5555      5F63656E 
 5555      74726F69 
 5555      644D756C 
 5556              	.LASF84:
 5557 09ba 73746174 		.ascii	"state\000"
 5557      6500
 5558              	.LASF136:
 5559 09c0 43617053 		.ascii	"CapSense_enableRawFilters\000"
 5559      656E7365 
 5559      5F656E61 
 5559      626C6552 
 5559      61774669 
 5560              	.LASF22:
 5561 09da 6D6F6444 		.ascii	"modDivTbl\000"
 5561      69765462 
 5561      6C00
 5562              	.LASF0:
ARM GAS  C:\Users\IEUser\AppData\Local\Temp\cctak5Pf.s 			page 156


 5563 09e4 7369676E 		.ascii	"signed char\000"
 5563      65642063 
 5563      68617200 
 5564              	.LASF3:
 5565 09f0 73686F72 		.ascii	"short unsigned int\000"
 5565      7420756E 
 5565      7369676E 
 5565      65642069 
 5565      6E7400
 5566              	.LASF106:
 5567 0a03 43617053 		.ascii	"CapSense_GetRadialCentroidPos\000"
 5567      656E7365 
 5567      5F476574 
 5567      52616469 
 5567      616C4365 
 5568              	.LASF31:
 5569 0a21 70747253 		.ascii	"ptrSetBitValue\000"
 5569      65744269 
 5569      7456616C 
 5569      756500
 5570              	.LASF107:
 5571 0a30 43617053 		.ascii	"CapSense_MedianFilter\000"
 5571      656E7365 
 5571      5F4D6564 
 5571      69616E46 
 5571      696C7465 
 5572              	.LASF49:
 5573 0a46 74656D70 		.ascii	"tempRaw\000"
 5573      52617700 
 5574              	.LASF112:
 5575 0a4e 43617053 		.ascii	"CapSense_GetDebounce\000"
 5575      656E7365 
 5575      5F476574 
 5575      4465626F 
 5575      756E6365 
 5576              	.LASF81:
 5577 0a63 43617053 		.ascii	"CapSense_CheckIsWidgetActive\000"
 5577      656E7365 
 5577      5F436865 
 5577      636B4973 
 5577      57696467 
 5578              	.LASF9:
 5579 0a80 75696E74 		.ascii	"uint8\000"
 5579      3800
 5580              	.LASF15:
 5581 0a86 646F7562 		.ascii	"double\000"
 5581      6C6500
 5582              	.LASF134:
 5583 0a8d 43617053 		.ascii	"CapSense_rawFilterData1\000"
 5583      656E7365 
 5583      5F726177 
 5583      46696C74 
 5583      65724461 
 5584              	.LASF99:
 5585 0aa5 706F7369 		.ascii	"position\000"
 5585      74696F6E 
 5585      00
ARM GAS  C:\Users\IEUser\AppData\Local\Temp\cctak5Pf.s 			page 157


 5586              	.LASF124:
 5587 0aae 43617053 		.ascii	"CapSense_sensorOnMask\000"
 5587      656E7365 
 5587      5F73656E 
 5587      736F724F 
 5587      6E4D6173 
 5588              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.8.4 20140526 (release) [ARM/embedded-4_8-br
